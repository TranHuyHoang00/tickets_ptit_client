{"version":3,"sources":["assets/images/LOGO_CSV23.png","auths/local_storage.js","auths/handle_token.js","auths/api_admin.js","auths/api_user.js","services/eventService.js","store/actions/actionTypes.js","compoments/users/layouts/header.js","compoments/users/layouts/footer.js","assets/images/anhminhhoa.jpg","assets/images/bg.png","compoments/users/pages/home.js","compoments/users/pages/form.js","compoments/users/pages/checkout.js","compoments/pages_Err/page_err_not_found.js","compoments/users/index.js","compoments/dashboards/layouts/header.js","services/userService.js","compoments/dashboards/managers/user.js","compoments/dashboards/managers/order.js","compoments/dashboards/managers/event.js","compoments/dashboards/managers/buyer.js","compoments/dashboards/managers/ticket.js","assets/sounds/err.mp3","assets/sounds/suc.mp3","compoments/dashboards/functions/check.js","compoments/dashboards/functions/ticket.js","compoments/dashboards/index.js","compoments/dashboards/pages/loginPage.js","compoments/index.js","App.js","reportWebVitals.js","store/reducers/dataReducers.js","store/reducers/index.js","store/redux.js","index.js"],"names":["get_local_account","name","JSON","parse","window","localStorage","getItem","set_local_account","data","setItem","stringify","handle_token_local","account","a","token_checked","data_account_raw","token_init","access","check_token","api","axios","create","baseURL","process","interceptors","request","use","config","token","headers","Authorization","error","Promise","reject","response","status","data_checked","get","post","refresh","data_token","token_new","data_account_new","api_admin","api_user","getEvent","editEvent","id","put","createBuyer","getListBuyer","getBuyer","createOrder","createOrderStaff","getOrder","createTransaction","getTicket","createTicket","editTicket","createStudent","actionTypes","Object","freeze","GET_DATA_FORM_INFOR","header","props","state","Component","connect","dispatch","withRouter","footer","home","checkEvent","dataEvent","is_activate","DateNow","Date","expiry_date","setState","alert","status_Event","success","console","log","openDialog","input","isOpenDialog","onclickPage","history","push","this","className","style","backgroundImage","bg","src","require","default","onClick","size","type","shape","disabled","title","open","okText","okType","cancelText","onOk","onCancel","anhminhhoa","width","React","recaptchaRef","createRef","ButtonGroup","Button","Group","form","getTime","deadline","time","now","setDays","Math","floor","setHours","setMinutes","setSeconds","timeCountDown","interval","setInterval","clearInterval","onClickDecline","ticket","onClickIncrease","handleOnchangeInput","event","copyState","infor","target","value","handleOnchangRC","values","ReCAPTCHA","onExpired","isCheckEmpty","trim","length","isCheckSpace","test","validatephone_numberNumber","phone_number","Validation","student_id","mess","code","full_name","avaliable_ticket","handleSubmit","result","dataBuyer","toast","order","buyer","ticket_quantity","dataOrder","TSV_Order","days","hours","minutes","seconds","event_name","placeholder","onChange","bordered","icon","MinusOutlined","PlusOutlined","ref","sitekey","danger","checkout","checkStatusOrder","intervalStatusOrder","payment_status","removeItem","intervalCountDownt","setTimeout","dataTransaction","TimeCountDown","timeNow","setTime","countDowm","qrcode","message","showIcon","total_amount","replace","data_form_infor","page_err_not_found","onClickPage","subTitle","extra","index","exact","path","LogOut","dataAcount","dataLogin","user","items","key","label","last_name","menu","backgroundColor","UserOutlined","CaretDownOutlined","createUser","getUser","deleteUser","delete","editUser","login","getListUser","dataUsers","dataUser","openForm","isOpenFormCreate","isOpenFormDetail","isOpenFormEdit","idUser","username","password","password2","first_name","ValidationEdit","handleCreate","handleEdit","handleDelete","columns","dataIndex","responsive","sorter","b","localeCompare","render","_","record","onConfirm","dataSource","pagination","pageSize","scroll","y","x","Password","dataRaw","dataFilter","i","obj","dataBuyers","dataSearch","onSelect","option","getListOrder","dataOrders","onClearAutoComplete","onChange_payment_status","Statistic","amount","total_ticket","dataStatistic","idOrder","isOpenFormStatistic","created_at","options","filterOption","inputValue","toUpperCase","indexOf","onClear","allowClear","payment_method","updated_at","defaultValue","getListEvent","dataEvents","dataEvent1","event_code","ticket_price","idBuyer","filter","email","getListTicket","dataTickets","student","dataTicket","find","filterTicket","ticket_code","cccd","check","setupCamera","constraints","video","facingMode","navigator","mediaDevices","getUserMedia","mediaStream","videoTrack","getVideoTracks","capabilities","getCapabilities","QrReaderRef","current","srcObject","play","currentZoom","zoom","applyConstraints","advanced","isOpenFormCheck","isOpenCreateStudent","dataStudent","dataST","handleQRcheck","resultQR","text","Audio","errSound","statusCheck","sucSound","stopCamera","location","reload","QrReader_Ref","delay","isOpenCamera","cameraOptions","onResult","children","setCollapsed","collapsed","onChangePassFireWall","passFireWall","isFirewall","handleCheckPassFireWall","isCheckPassFireWall","goToLogin","url","isLogin","DatabaseOutlined","items1","Header","Layout","Content","Sider","Footer","minHeight","collapsible","onCollapse","theme","mode","defaultSelectedKeys","image","imageStyle","height","description","loginPage","handleLogin","from","to","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","dataReducers","action","combineReducers","reduxStore","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.89dbf3a6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/LOGO_CSV23.adfae35e.png\";","\r\nconst get_local_account = (name) => {\r\n    let data = JSON.parse(window.localStorage.getItem(`${name}`));\r\n    return data\r\n}\r\nconst set_local_account = (name, data) => {\r\n    localStorage.setItem(`${name}`, JSON.stringify(\r\n        { data: data }\r\n    ))\r\n}\r\nconst remove_local_account = (name) => {\r\n    localStorage.removeItem(`${name}`);\r\n    return true\r\n}\r\nexport {\r\n    get_local_account, set_local_account, remove_local_account\r\n}","import axios from 'axios';\r\nimport { get_local_account, set_local_account } from './local_storage';\r\n\r\nconst handle_token_local = async (account) => {\r\n    let token_init = null;\r\n    let token_checked = null;\r\n    let data_account_raw = get_local_account(account);\r\n    if (data_account_raw) {\r\n        token_init = data_account_raw.data.access;\r\n        token_checked = await check_token(account, token_init);\r\n    }\r\n    return token_checked;\r\n}\r\nconst check_token = async (account, token_init) => {\r\n    const api = axios.create({ baseURL: `${process.env.REACT_APP_API}`, });\r\n    api.interceptors.request.use(\r\n        (config) => {\r\n            let token = token_init;\r\n            if (token) { config.headers.Authorization = `Bearer ${token}`; }\r\n            return config;\r\n        },\r\n        (error) => {\r\n            return Promise.reject(error);\r\n        }\r\n    );\r\n    api.interceptors.response.use(\r\n        (response) => {\r\n            return true;\r\n        },\r\n        async (error) => {\r\n            if (error.response.status === 401) {\r\n                return false;\r\n            }\r\n            return Promise.reject(error);\r\n        }\r\n    );\r\n    let data_checked = null;\r\n    if (process.env.REACT_APP_LOCALHOST_ACOUNT_DB == account) {\r\n        data_checked = await api.get(`/auth/api/v1/list-user`,);\r\n    }\r\n    if (process.env.REACT_APP_LOCALHOST_ACOUNT_USER == account) {\r\n        data_checked = await api.get(`ticketify/api/v1/get-event/${process.env.REACT_APP_EVENT_CODE}`);\r\n    }\r\n    if (data_checked == true) {\r\n        return token_init;\r\n    } else {\r\n        let data_account_raw = null;\r\n        data_account_raw = get_local_account(account);\r\n        let data_token = await axios.post(`${process.env.REACT_APP_API}auth/api/v1/token/refresh`, { refresh: data_account_raw.data.refresh });\r\n        let token_new = data_token.data.data.access;\r\n        let data_account_new = data_account_raw.data;\r\n        data_account_new.access = token_new;\r\n        set_local_account(account, data_account_new);\r\n        return token_new;\r\n    }\r\n\r\n}\r\nexport default handle_token_local;","import axios from 'axios';\r\nimport handle_token_local from './handle_token';\r\n\r\nconst api_admin = axios.create({ baseURL: `${process.env.REACT_APP_API}` });\r\napi_admin.interceptors.request.use(\r\n    async (config) => {\r\n        let token = await handle_token_local(process.env.REACT_APP_LOCALHOST_ACOUNT_DB);\r\n        if (token) { config.headers.Authorization = `Bearer ${token}`; }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\napi_admin.interceptors.response.use(\r\n    (response) => { return response; },\r\n    async (error) => {\r\n        if (error.response.status === 401) {\r\n            await handle_token_local(process.env.REACT_APP_LOCALHOST_ACOUNT_DB);\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default api_admin;\r\n","import axios from 'axios';\r\nimport handle_token_local from './handle_token';\r\n\r\nconst api_user = axios.create({ baseURL: `${process.env.REACT_APP_API}` });\r\napi_user.interceptors.request.use(\r\n    async (config) => {\r\n        let token = await handle_token_local(process.env.REACT_APP_LOCALHOST_ACOUNT_USER);\r\n        if (token) { config.headers.Authorization = `Bearer ${token}`; }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\napi_user.interceptors.response.use(\r\n    (response) => { return response; },\r\n    async (error) => {\r\n        if (error.response.status === 401) {\r\n            await handle_token_local(process.env.REACT_APP_LOCALHOST_ACOUNT_USER);\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default api_user;\r\n","import api_admin from '../auths/api_admin';\r\nimport api_user from '../auths/api_user';\r\n// Event\r\nconst getEvent = () => {\r\n    return api_user.get(`ticketify/api/v1/get-event/${process.env.REACT_APP_EVENT_CODE}`);\r\n}\r\nconst getListEvent = () => {\r\n    return api_admin.get(`ticketify/api/v1/list-event`,);\r\n}\r\nconst editEvent = (id, data) => {\r\n    return api_admin.put(`ticketify/api/v1/update-event/${id}`, data,);\r\n}\r\n// Buyer\r\nconst createBuyer = (data) => {\r\n    return api_user.post(`ticketify/api/v1/create-buyer`, data);\r\n}\r\nconst getListBuyer = () => {\r\n    return api_admin.get(`ticketify/api/v1/list-buyer`,);\r\n}\r\nconst getBuyer = (id) => {\r\n    return api_admin.get(`ticketify/api/v1/get-buyer/${id}`);\r\n}\r\n// Order\r\nconst createOrder = (data) => {\r\n    return api_user.post(`ticketify/api/v1/create-order`, data);\r\n}\r\nconst createOrderStaff = (data) => {\r\n    return api_admin.post(`ticketify/api/v1/create-order`, data,);\r\n}\r\nconst getOrder = (id) => {\r\n    return api_admin.get(`ticketify/api/v1/get-order/${id}`);\r\n}\r\nconst getListOrder = () => {\r\n    return api_admin.get(`ticketify/api/v1/list-order`,);\r\n}\r\n// Tran\r\nconst createTransaction = (data) => {\r\n    return api_user.post(`ticketify/api/v1/create-transaction`, data);\r\n}\r\n// Ticket\r\nconst getTicket = (id) => {\r\n    return api_admin.get(`ticketify/api/v1/get-ticket/${id}`,);\r\n}\r\nconst createTicket = (data) => {\r\n    return api_admin.post(`ticketify/api/v1/create-ticket`, data,);\r\n}\r\nconst editTicket = (data, id) => {\r\n    return api_admin.put(`ticketify/api/v1/update-ticket/${id}`, data,);\r\n}\r\nconst getListTicket = () => {\r\n    return api_admin.get(`ticketify/api/v1/list-ticket`,);\r\n}\r\n// Student\r\nconst createStudent = (data) => {\r\n    return api_admin.post(`ticketify/api/v1/create-student`, data,);\r\n}\r\nexport {\r\n    getListBuyer, createBuyer, getBuyer,\r\n    getListOrder, createOrder, getOrder, createOrderStaff,\r\n    getEvent, createTransaction, getListEvent, editEvent,\r\n    createTicket, getTicket, editTicket, getListTicket,\r\n    createStudent,\r\n}","const actionTypes = Object.freeze({\r\n\r\n    GET_DATA_FORM_INFOR: 'GET_DATA_FORM_INFOR',\r\n})\r\n\r\nexport default actionTypes;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nclass header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(header));\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nclass footer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(footer));\r\n","export default __webpack_public_path__ + \"static/media/anhminhhoa.8e73aa39.jpg\";","export default __webpack_public_path__ + \"static/media/bg.ffd5a458.png\";","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button, Modal, Alert, Image } from 'antd';\r\nimport { getEvent } from '../../../services/eventService';\r\nimport anhminhhoa from '../../../assets/images/anhminhhoa.jpg';\r\nimport bg from '../../../assets/images/bg.png';\r\nclass home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            alert: 'Lỗi Server 3',\r\n            status_Event: 3,\r\n            dataEvent: {},\r\n            isOpenDialog: false,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getEvent();\r\n    }\r\n    checkEvent = (dataEvent) => {\r\n        if (dataEvent.is_activate == true) {\r\n            let DateNow = new Date();\r\n            let expiry_date = new Date(dataEvent.expiry_date);\r\n            if (DateNow > expiry_date) {\r\n                this.setState({\r\n                    alert: 'Đã hết hạn đăng ký',\r\n                    status_Event: 4,\r\n                })\r\n            }\r\n            if (DateNow < expiry_date) {\r\n                this.setState({\r\n                    alert: 'Sự kiện đang mở',\r\n                    status_Event: 0,\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                alert: 'Sự kiện đang đóng',\r\n                status_Event: 4,\r\n            })\r\n        }\r\n    }\r\n    getEvent = async () => {\r\n        try {\r\n            let data = await getEvent();\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.checkEvent(data.data.data);\r\n            } else {\r\n                this.setState({ status_Event: 2, alert: 'Lỗi Server 2' })\r\n            }\r\n        } catch (e) {\r\n            this.setState({ status_Event: 1, alert: 'Lỗi Server 1' })\r\n            console.log('Lỗi Server 1', e);\r\n        }\r\n    }\r\n    openDialog = (input) => {\r\n        this.setState({ isOpenDialog: input })\r\n    }\r\n    onclickPage = () => {\r\n        if (this.state.status_Event == 0) {\r\n            this.props.history.push(`/home/form`);\r\n        }\r\n    }\r\n    render() {\r\n        let status_Event = this.state.status_Event;\r\n        return (\r\n\r\n            <div className='h-screen w-screen bg-center sm:bg-cover bg-no-repeat \r\n            flex items-center justify-center' style={{ backgroundImage: `url(${bg})` }}>\r\n                <div className='space-y-[5px]'>\r\n                    <div className='s'>\r\n                        <img src={require(`../../../assets/images/LOGO_CSV23.png`).default} className='h-[100px] sm:h-[200px] md:h-[250px] w-auto' />\r\n                    </div>\r\n                    <div className='flex items-center justify-center'>\r\n                        <div className='space-y-[5px]  p-[10px] shadow-md rounded-[5px]'>\r\n                            {status_Event == 0 ?\r\n                                <div className='text-center text-[14px]'><span className='text-white'>{this.state.alert}</span></div>\r\n                                //<Alert message={this.state.alert} type=\"success\" showIcon />\r\n                                :\r\n                                <div className='text-center text-[14px]'><span className='text-red-500'>{this.state.alert}</span></div>\r\n                                //<Alert message={this.state.alert} type=\"error\" showIcon />\r\n                            }\r\n                            {status_Event == 0 ?\r\n                                <Button onClick={() => this.openDialog(true)}\r\n                                    className='shadow-md bg-gradient-to-t from-[#673de4] via-[#b577c2] to-[#673de4]\r\n                                    font-[500] text-white hover:scale-105'\r\n                                    size=\"large\" type=\"default\" shape=\"round\" >\r\n                                    ĐĂNG KÝ MUA VÉ\r\n                                </Button>\r\n                                :\r\n                                <Button\r\n                                    className='shadow-md bg-gradient-to-t from-[#673de4] via-[#b577c2] to-[#673de4]\r\n                                    font-[500] text-white hover:scale-105'\r\n                                    size=\"large\" type=\"default\" disabled >\r\n                                    ĐĂNG KÝ MUA VÉ\r\n                                </Button>\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal title=\"Quy định trước khi mua vé\" open={this.state.isOpenDialog}\r\n                    okText={'Tiếp tục'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.onclickPage()}\r\n                    onCancel={() => this.openDialog(false)}\r\n                >\r\n                    <div className=' p-[10px] border shadow-md rounded-[5px] space-y-[5px] italic text-red-700'>\r\n                        <div className='space-y-[5px]'>\r\n                            <div>\r\n                                <label>1. Không thay đổi thông tin ghi chú tự động và số tiền chuyển khoản sau khi quét mã QR.</label>\r\n                            </div>\r\n                            <div className='flex items-center justify-center'> <Image src={anhminhhoa} width={200} /></div>\r\n                        </div>\r\n                        <div>\r\n                            <label>2. Không thoát chương trình trong quá trình đợi xác thực thanh toán.</label>\r\n                        </div>\r\n                        <div>\r\n                            <label>3. Điền thông tin MSSV chính xác vì vé sẽ được gửi qua email sinh viên. Kiểm tra mục spam sau khi thanh toán thành công nếu không thấy mail trong hộp thư.</label><br />\r\n                        </div>\r\n                        <div>\r\n                            <label>4. Bấm vào \"Tiếp tục\", tức là bạn \"Đồng ý\" với những quy định trên.</label>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(home);","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Input } from 'antd';\r\nimport { BsFillTicketFill, BsTicketPerforated, BsTicketPerforatedFill } from \"react-icons/bs\";\r\nimport { toast } from 'react-toastify';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport { getEvent, createBuyer, createOrder } from '../../../services/eventService';\r\nimport bg from '../../../assets/images/bg.png';\r\nconst recaptchaRef = React.createRef();\r\nconst ButtonGroup = Button.Group;\r\nclass form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            infor: {},\r\n            ticket: 1,\r\n            ReCAPTCHA: null,\r\n            setDays: '',\r\n            setHours: '',\r\n            setMinutes: '',\r\n            setSeconds: '',\r\n            dataEvent: {},\r\n            isOpenDialog: false,\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        this.timeCountDown()\r\n        await this.getEvent();\r\n        let TSV_Order = JSON.parse(window.localStorage.getItem(`${process.env.REACT_APP_LOCALHOST_DATA_ORDER_USER}`));\r\n        if (TSV_Order && TSV_Order.data) {\r\n            let dataBuyer = TSV_Order.data.buyer;\r\n            let infor = this.state.infor;\r\n            infor.full_name = dataBuyer.full_name;\r\n            infor.phone_number = dataBuyer.phone_number;\r\n            infor.student_id = dataBuyer.student_id;\r\n            this.setState({\r\n                ...this.state.infor,\r\n                infor: infor,\r\n                ticket: TSV_Order.data.ticket_quantity\r\n            })\r\n        }\r\n\r\n    }\r\n    getEvent = async () => {\r\n        try {\r\n            let data = await getEvent();\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataEvent: data.data.data })\r\n            } else {\r\n                return this.setState({ dataEvent: {} })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    getTime = () => {\r\n        let deadline = this.state.dataEvent.expiry_date;\r\n        let time = Date.parse(deadline) - Date.now();\r\n        this.setState({\r\n            setDays: (Math.floor(time / (1000 * 60 * 60 * 24))),\r\n            setHours: (Math.floor((time / (1000 * 60 * 60)) % 24)),\r\n            setMinutes: (Math.floor((time / 1000 / 60) % 60)),\r\n            setSeconds: (Math.floor((time / 1000) % 60)),\r\n        })\r\n    }\r\n    timeCountDown = () => {\r\n        const interval = setInterval(() => this.getTime(), 1000);\r\n        return () => clearInterval(interval);\r\n    }\r\n    onClickDecline = () => {\r\n        let ticket = this.state.ticket;\r\n        if (ticket <= 1) {\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                ticket: ticket - 1,\r\n            })\r\n        }\r\n    }\r\n    onClickIncrease = () => {\r\n        let ticket = this.state.ticket;\r\n        if (ticket >= 5) {\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                ticket: ticket + 1,\r\n            })\r\n        }\r\n    }\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state.infor };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            infor: {\r\n                ...copyState\r\n            }\r\n        });\r\n    }\r\n    handleOnchangRC = (values) => {\r\n        this.setState({\r\n            ReCAPTCHA: values,\r\n        })\r\n    }\r\n    onExpired = () => {\r\n        this.setState({ ReCAPTCHA: null })\r\n    }\r\n    isCheckEmpty = (value) => {\r\n        return value.trim().length\r\n    }\r\n    isCheckSpace = (value) => {\r\n        return (/\\s/).test(value);\r\n    }\r\n    validatephone_numberNumber = (phone_number) => {\r\n        const re = /^(?:\\+84|0)(?:3[2-9]|5[2689]|7[06-9]|8[1-9]|9[0-46-9])(?:\\d{7}|\\d{7})$/;\r\n        return re.test(phone_number);\r\n    }\r\n    Validation = () => {\r\n        let infor = this.state.infor;\r\n        if (!infor.student_id) {\r\n            return { mess: \"Thiếu mã sinh viên\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(infor.student_id) !== 10) {\r\n            return { mess: \"Mã sinh viên là 10 kí tự\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(infor.student_id) == true) {\r\n            return { mess: \"Mã sinh viên chứa khoảng trắng\", code: 1 };\r\n        }\r\n        if (!infor.full_name) {\r\n            return { mess: \"Thiếu tên\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(infor.full_name) <= 3) {\r\n            return { mess: \"Tên phải lớn hơn 3 kí tự\", code: 1 };\r\n        }\r\n        if (!infor.phone_number) {\r\n            return { mess: \"Thiếu số điện thoại\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(infor.phone_number) !== 10) {\r\n            return { mess: \"Số điện thoại là 10 số\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(infor.phone_number) == true) {\r\n            return { mess: \"Số điện thoại có khoảng trắng\", code: 1 };\r\n        }\r\n        if (!this.validatephone_numberNumber(infor.phone_number)) {\r\n            return { mess: \"Số điện thoại sai định dạng\", code: 1 };\r\n        }\r\n        if (infor.ticket > this.state.dataEvent.avaliable_ticket) {\r\n            return { mess: \"Số lượng vé không đủ\", code: 1 };\r\n        }\r\n        if (this.state.ReCAPTCHA == null) {\r\n            return { mess: \"Vui lòng xác minh ReCAPTCHA\", code: 1 };\r\n        }\r\n        return { code: 0 };\r\n    }\r\n    createBuyer = async (input) => {\r\n        try {\r\n            let data = await createBuyer(input);\r\n            if (data && data.data && data.data.success == 1) {\r\n                return data.data.data\r\n            } else {\r\n                return null\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    createOrder = async (input) => {\r\n        try {\r\n            let data = await createOrder(input);\r\n            if (data && data.data && data.data.success == 1) {\r\n                return data.data.data\r\n            } else {\r\n                return null\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    handleSubmit = async () => {\r\n        let result = this.Validation();\r\n        if (result.code == 0) {\r\n            let dataBuyer = await this.createBuyer(this.state.infor);\r\n            if (dataBuyer == null) {\r\n                toast.error(\"Tạo thông tin thất bại\");\r\n            } else {\r\n                let order = {};\r\n                order.buyer = dataBuyer.id;\r\n                order.ticket_quantity = this.state.ticket;\r\n                order.event = this.state.dataEvent.id;\r\n                let dataOrder = await this.createOrder(order);\r\n                if (dataOrder == null) {\r\n                    toast.error(\"Tạo order thất bại\");\r\n                } else {\r\n                    localStorage.setItem(`${process.env.REACT_APP_LOCALHOST_DATA_ORDER_USER}`, JSON.stringify(\r\n                        { data: dataOrder }\r\n                    ))\r\n                    this.props.history.push(`/home/checkout`);\r\n                }\r\n            }\r\n        } else {\r\n            toast.error(result.mess);\r\n        }\r\n    }\r\n    render() {\r\n        let days = this.state.setDays;\r\n        let hours = this.state.setHours;\r\n        let minutes = this.state.setMinutes;\r\n        let seconds = this.state.setSeconds;\r\n        let dataEvent = this.state.dataEvent;\r\n        let infor = this.state.infor;\r\n        return (\r\n            <div className=' md:w-screen md:h-screen h-auto w-auto p-[10px]  bg-center sm:bg-cover bg-no-repeat \r\n            flex items-center justify-center font-semibold' style={{ backgroundImage: `url(${bg})` }}>\r\n                <div className=' bg-white rounded-[5px]'>\r\n                    <div className='bg-gradient-to-r from-[#1e9dee] to-[#a951e9]\r\n                    text-center p-[10px] rounded-t-[5px]'>\r\n                        <label className='text-white font-[500] text-[20px]'>ĐĂNG KÝ MUA VÉ</label>\r\n                    </div>\r\n                    <div className='md:grid grid-cols-2 \r\n                    border shadow-md rounded-b-[10px]'>\r\n                        <div className=' flex justify-center p-[14px] border-r'>\r\n                            <div className='text-center font-[700] space-y-[10px]'>\r\n                                <label className='text-[24px] font-serif:'>{dataEvent.event_name}</label> <br />\r\n                                <div className='text-[16px] p-[6px] space-x-[6px]\r\n                                flex items-center justify-center  text-white border rounded-[10px] shadow-md'>\r\n                                    <div className='bg-[#00bf96] p-[10px] rounded-[8px] space-y-[2px]'>\r\n                                        <div className=''>\r\n                                            <span className='bg-[#00816a] p-[5px] rounded-[5px]'>{days < 10 ? \"0\" + days : days} </span>\r\n                                        </div>\r\n                                        <div><span>Ngày</span></div>\r\n                                    </div>\r\n                                    <div className='bg-[#00bf96] p-[10px] rounded-[8px] space-y-[2px]'>\r\n                                        <div className=''>\r\n                                            <span className='bg-[#00816a] p-[5px] rounded-[5px]'>{hours < 10 ? \"0\" + hours : hours} </span>\r\n                                        </div>\r\n                                        <div><span>Giờ</span></div>\r\n                                    </div>\r\n                                    <div className='bg-[#00bf96] p-[10px] rounded-[8px] space-y-[2px]'>\r\n                                        <div className=''>\r\n                                            <span className='bg-[#00816a] p-[5px] rounded-[5px]'>{minutes < 10 ? \"0\" + minutes : minutes} </span>\r\n                                        </div>\r\n                                        <div><span>Phút</span></div>\r\n                                    </div>\r\n                                    <div className='bg-[#00bf96] p-[10px] rounded-[8px] space-y-[2px]'>\r\n                                        <div className=''>\r\n                                            <span className='bg-[#00816a] p-[5px] rounded-[5px]'>{seconds < 10 ? \"0\" + seconds : seconds} </span>\r\n                                        </div>\r\n                                        <div><span>Giây</span></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='space-y-[10px]'>\r\n                                    {/* <div className='flex items-center justify-center bg-gradient-to-r from-[#7ccdff] to-[#7196ff]\r\n                                    border shadow-md rounded-[5px] space-x-[20px] text-white p-[5px]'>\r\n                                        <div className='text-[50px]'><BsFillTicketFill /></div>\r\n                                        <div className='text-[16px]'>\r\n                                            <div className='text-[12px]'><label>Tổng vé</label></div>\r\n                                            <div><label className=''>{dataEvent.total_ticket} vé</label></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='flex items-center justify-center bg-gradient-to-r from-[#fda682] to-[#f7789d]\r\n                                    border shadow-md rounded-[5px] space-x-[20px] text-white p-[5px]'>\r\n                                        <div className='text-[50px]'><BsTicketPerforatedFill /></div>\r\n                                        <div className='text-[16px]'>\r\n                                            <div className='text-[12px]'><label>Đã bán</label></div>\r\n                                            <div><label className=''>{dataEvent.total_ticket - dataEvent.avaliable_ticket} vé</label></div>\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className='flex items-center justify-center bg-gradient-to-r from-[#17f0a1] to-[#04ce89]\r\n                                    border shadow-md rounded-[5px] space-x-[20px] text-white p-[5px]'>\r\n                                        <div className='text-[50px]'><BsTicketPerforated /></div>\r\n                                        <div className='text-[16px]'>\r\n                                            <div className='text-[12px]'><label>Còn lại</label></div>\r\n                                            <div><label className=''>{dataEvent.avaliable_ticket} vé</label></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='text-[16px] text-[#414e66]'>\r\n                                    <label>Ngày hết hạn : {dataEvent.expiry_date}</label>\r\n                                </div>\r\n                                <div className='text-[12px] \r\n                                text-red-500 border border-red-500 p-[10px] rounded-[10px] shadow-sm '>\r\n                                    <span>Vui lòng điền đầy đủ </span><br />\r\n                                    <span>và chính xác thông tin đăng ký</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=' border-t md:border-none\r\n                        px-[30px] py-[10px] text-[16px] space-y-[16px]'>\r\n                            <div className='space-y-[3px]'>\r\n                                <div><label className=''>Mã sinh viên<span className='text-red-600 text-[12px]'> * Bắt buộc</span> </label></div>\r\n                                <div className='border-b shadow-sm'>\r\n                                    <Input placeholder='N23DCCN000'\r\n                                        value={infor.student_id}\r\n                                        onChange={(event) => this.handleOnchangeInput(event, 'student_id')}\r\n                                        className='uppercase' bordered={false} />\r\n                                </div>\r\n                            </div>\r\n                            <div className='space-y-[3px]'>\r\n                                <div><label className=''>Họ và tên <span className='text-red-600 text-[12px]'> * Bắt buộc</span> </label></div>\r\n                                <div className='border-b shadow-sm'>\r\n                                    <Input placeholder='Nguyễn Văn A'\r\n                                        value={infor.full_name}\r\n                                        onChange={(event) => this.handleOnchangeInput(event, 'full_name')}\r\n                                        className='' bordered={false} />\r\n                                </div>\r\n                            </div>\r\n                            <div className='space-y-[3px]'>\r\n                                <div><label className=''>Số điện thoại <span className='text-red-600 text-[12px]'> * Bắt buộc</span> </label></div>\r\n                                <div className='border-b shadow-sm'>\r\n                                    <Input placeholder='0885898535'\r\n                                        value={infor.phone_number}\r\n                                        onChange={(event) => this.handleOnchangeInput(event, 'phone_number')}\r\n                                        className='' bordered={false} />\r\n                                </div>\r\n                            </div>\r\n                            <div className='space-y-[3px]'>\r\n                                <div>\r\n                                    <label className='font-[500]'>Số lượng vé <span className='text-red-600 text-[12px]'> * Tối đa 5 vé</span> </label>\r\n                                </div>\r\n                                <ButtonGroup>\r\n                                    <Button onClick={() => this.onClickDecline()} icon={<MinusOutlined />} />\r\n                                    <Button disabled>{this.state.ticket}</Button>\r\n                                    <Button onClick={() => this.onClickIncrease()} icon={<PlusOutlined />} />\r\n                                </ButtonGroup>\r\n                            </div>\r\n                            <div className='space-y-[10px]'>\r\n                                <ReCAPTCHA\r\n                                    ref={recaptchaRef}\r\n                                    sitekey={process.env.REACT_APP_STIE_KEY_RECAPCHA}\r\n                                    onChange={(value) => this.handleOnchangRC(value)}\r\n                                    onExpired={() => this.onExpired()}\r\n                                />\r\n                                <Button type=\"primary\" danger onClick={() => this.handleSubmit()}>ĐĂNG KÝ</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(form));","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Image, Alert } from 'antd';\r\nimport { BsCurrencyExchange, BsTicketPerforatedFill } from \"react-icons/bs\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport { getOrder, createTransaction } from '../../../services/eventService';\r\nimport bg from '../../../assets/images/bg.png';\r\nclass checkout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataOrder: {},\r\n            dataTransaction: {},\r\n            setMinutes: 0,\r\n            setSeconds: 0,\r\n            setTime: 300,\r\n            countDowm: true,\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        let TSV_Order = JSON.parse(window.localStorage.getItem(`${process.env.REACT_APP_LOCALHOST_DATA_ORDER_USER}`));\r\n        if (TSV_Order && TSV_Order.data) {\r\n            await this.createTransaction({ order: TSV_Order.data.id });\r\n            this.checkStatusOrder(TSV_Order.data.id)\r\n            this.TimeCountDown()\r\n        }\r\n    }\r\n    checkStatusOrder = async (id) => {\r\n        const intervalStatusOrder = setInterval(() => { this.getOrder(id) }, 1000);\r\n        this.setState({ intervalStatusOrder });\r\n        return () => clearInterval(intervalStatusOrder);\r\n    }\r\n    getOrder = async (id) => {\r\n        try {\r\n            let data = await getOrder(id);\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataOrder: data.data.data });\r\n                if (data.data.data.payment_status == 'success') {\r\n                    localStorage.removeItem(`${process.env.REACT_APP_LOCALHOST_DATA_ORDER_USER}`);\r\n                    clearInterval(this.state.intervalStatusOrder);\r\n                    clearInterval(this.state.intervalCountDownt);\r\n                    setTimeout(() => { this.props.history.push(`/`) }, 5000);\r\n                }\r\n            } else {\r\n                this.setState({ dataOrder: {} });\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    createTransaction = async (input) => {\r\n        try {\r\n            let data = await createTransaction(input);\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataTransaction: data.data.data });\r\n            } else {\r\n                this.setState({ dataTransaction: {} });\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    TimeCountDown = () => {\r\n        const intervalCountDownt = setInterval(() => { this.getTime() }, 1000);\r\n        this.setState({ intervalCountDownt });\r\n        return () => clearInterval(intervalCountDownt);\r\n    }\r\n    getTime = () => {\r\n        let timeNow = this.state.setTime;\r\n        if (timeNow == 0) {\r\n            clearInterval(this.state.intervalCountDownt);\r\n            clearInterval(this.state.intervalStatusOrder);\r\n            this.setState({ countDowm: false });\r\n            localStorage.removeItem(`${process.env.REACT_APP_LOCALHOST_DATA_ORDER_USER}`);\r\n        } else {\r\n            this.setState({\r\n                setTime: timeNow - 1,\r\n                setMinutes: (Math.floor(timeNow / 60)),\r\n                setSeconds: (timeNow % 60),\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        let minutes = this.state.setMinutes;\r\n        let seconds = this.state.setSeconds;\r\n        let dataOrder = this.state.dataOrder;\r\n        let dataTransaction = this.state.dataTransaction;\r\n        return (\r\n            <div className='h-screen bg-center sm:bg-cover bg-no-repeat \r\n            p-[20px]  flex items-center justify-center font-semibold' style={{ backgroundImage: `url(${bg})` }}>\r\n                <div className=' bg-white rounded-[8px] border shadow-md'>\r\n                    <div className='text-center bg-[#1a1a1a] bg-gradient-to-r from-[#1e9dee] to-[#a951e9]\r\n                    text-white font-[500] text-[18px] p-[10px] rounded-t-[8px]'>\r\n                        <h1>THANH TOÁN ONLINE QUA MOMO</h1>\r\n                    </div>\r\n                    <div className='p-[10px] space-y-[10px]'>\r\n                        <div className='flex items-center justify-center '>\r\n                            {this.state.countDowm == true &&\r\n                                <Image src={dataTransaction.qrcode} width={200} />\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            {this.state.countDowm == false &&\r\n                                <Alert message=\"Hết hạn thanh toán\" type=\"warning\" showIcon />\r\n                            }\r\n                            {dataOrder.payment_status == 'pending' && this.state.countDowm == true &&\r\n                                <Alert message=\"Chờ thanh toán\" type=\"warning\" showIcon />\r\n                            }\r\n                            {dataOrder.payment_status == 'success' && this.state.countDowm == true &&\r\n                                <Alert message=\"Thanh toán thành công\" type=\"success\" showIcon />\r\n                            }\r\n                        </div>\r\n                        <div className='text-center text-red-600 border p-[4px] shadow-sm rounded-[3px]'>\r\n                            <span className='bg-white px-[2px] py-[2px] rounded-[2px]'>{minutes}</span>\r\n                            <span className=''>:</span>\r\n                            <span className='bg-white px-[2px] py-[2px] rounded-[2px]'>{seconds}</span>\r\n                        </div>\r\n                        <div className='space-y-[10px]'>\r\n                            <div className='flex items-center justify-center  bg-gradient-to-r from-[#17f0a1] to-[#04ce89]\r\n                                    border shadow-md rounded-[5px] space-x-[20px] text-white p-[5px]'>\r\n                                <div className='text-[50px]'><BsTicketPerforatedFill /></div>\r\n                                <div className='text-[16px] text-center'>\r\n                                    <div className='text-[14px]'><label>Tổng vé</label></div>\r\n\r\n                                    <div><label className=''>{dataOrder.ticket_quantity} cái</label></div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='flex items-center justify-center bg-gradient-to-r from-[#fda682] to-[#f7789d]\r\n                                    border shadow-md rounded-[5px] space-x-[20px] text-white p-[5px]'>\r\n                                <div className='text-[50px]'><BsCurrencyExchange /></div>\r\n                                <div className='text-[16px] text-center'>\r\n                                    <div className='text-[14px]'><label>Tổng tiền</label></div>\r\n                                    <div><label className=''>{`${dataOrder.total_amount}`.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')} vnđ</label></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data_form_infor: state.data.data_form_infor,\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(checkout));","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Empty, Button, Result } from 'antd';\r\nclass page_err_not_found extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n    }\r\n    onClickPage = () => {\r\n        this.props.history.push(`/home`);\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Result\r\n                    status=\"404\" title=\"404\"\r\n                    subTitle=\"Xin lỗi, trang này hiện không tồn tại.\"\r\n                    extra={\r\n                        <Button onClick={() => this.onClickPage()}\r\n                            type=\"default\" className='bg-blue-500 text-white'>Trang chủ</Button>\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(page_err_not_found);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getEvent } from '../../services/eventService';\r\n\r\nimport Header from './layouts/header';\r\nimport Footer from './layouts/footer';\r\n\r\nimport Home from './pages/home';\r\nimport Form from './pages/form';\r\nimport Checkout from './pages/checkout';\r\n\r\nimport Page_err_not_found from '../pages_Err/page_err_not_found';\r\n\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            alert: 'Lỗi Server 3',\r\n            status_Event: 3,\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.getEvent();\r\n    }\r\n    checkEvent = (dataEvent) => {\r\n        if (dataEvent.is_activate == true) {\r\n            let DateNow = new Date();\r\n            let expiry_date = new Date(dataEvent.expiry_date);\r\n            if (DateNow > expiry_date) {\r\n                this.setState({\r\n                    alert: 'Đã hết hạn đăng ký',\r\n                    status_Event: 4,\r\n                })\r\n            }\r\n            if (DateNow < expiry_date) {\r\n                this.setState({\r\n                    alert: 'Sự kiện đang mở',\r\n                    status_Event: 0,\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                alert: 'Sự kiện đang đóng',\r\n                status_Event: 4,\r\n            })\r\n        }\r\n    }\r\n    getEvent = async () => {\r\n        try {\r\n            let data = await getEvent();\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.checkEvent(data.data.data);\r\n            } else {\r\n                this.setState({ status_Event: 2, alert: 'Lỗi Server 2' })\r\n            }\r\n        } catch (e) {\r\n            this.setState({ status_Event: 1, alert: 'Lỗi Server 1' })\r\n            console.log('Lỗi Server 1', e);\r\n        }\r\n    }\r\n    render() {\r\n        let status_Event = this.state.status_Event;\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Switch>\r\n                    <Route exact path=\"/home\"><Home /></Route>\r\n                    {status_Event == 0 ?\r\n                        <>\r\n                            <Route exact path=\"/home/form\"><Form /></Route>\r\n                            <Route exact path=\"/home/checkout\"><Checkout /></Route>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Route exact path=\"/home/form\"><Page_err_not_found /></Route>\r\n                            <Route exact path=\"/home/checkout\"><Page_err_not_found /></Route>\r\n                        </>\r\n                    }\r\n                </Switch>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(index);\r\n","import React, { Component } from 'react';\r\nimport { UserOutlined, CaretDownOutlined, } from '@ant-design/icons';\r\nimport { Avatar, Dropdown, Space } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { get_local_account, remove_local_account } from '../../../auths/local_storage';\r\n\r\nclass header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataAcount: {},\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        let dataLogin = get_local_account(process.env.REACT_APP_LOCALHOST_ACOUNT_DB);\r\n        if (dataLogin && dataLogin.data && dataLogin.data.access) {\r\n            this.setState({ dataAcount: dataLogin.data.user })\r\n        } else { this.setState({ dataAcount: {} }) }\r\n    }\r\n    LogOut = () => {\r\n        remove_local_account(process.env.REACT_APP_LOCALHOST_ACOUNT_DB);\r\n        this.props.history.push(`/login`);\r\n    }\r\n    render() {\r\n        let dataAcount = this.state.dataAcount;\r\n        const items = [\r\n            {\r\n                key: '1',\r\n                label: (\r\n                    <a className='disabled'>{dataAcount.last_name}</a>\r\n                ),\r\n                disabled: true,\r\n            },\r\n            {\r\n                key: '1',\r\n                label: (\r\n                    <a onClick={() => this.LogOut()}>Đăng xuất</a>\r\n                ),\r\n            },\r\n        ];\r\n        return (\r\n            <div>\r\n                <Dropdown menu={{ items, }}>\r\n                    <Space>\r\n                        <Avatar style={{ backgroundColor: '#87d068', }} icon={<UserOutlined />} />\r\n                        <CaretDownOutlined />\r\n                    </Space>\r\n                </Dropdown>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(header);\r\n","import api_admin from '../auths/api_admin';\r\nconst getListUser = () => {\r\n    return api_admin.get(`/auth/api/v1/list-user`,);\r\n}\r\nconst createUser = (data) => {\r\n    return api_admin.post(`/auth/api/v1/register`, data,);\r\n}\r\nconst getUser = (id) => {\r\n    return api_admin.get(`/auth/api/v1/get-user/${id}`,);\r\n}\r\nconst deleteUser = (id) => {\r\n    return api_admin.delete(`/auth/api/v1/get-user/${id}`,);\r\n}\r\nconst editUser = (id, data) => {\r\n    return api_admin.put(`/auth/api/v1/get-user/${id}`, data,);\r\n}\r\nconst login = (data) => {\r\n    return api_admin.post(`auth/api/v1/login`, data);\r\n}\r\nconst refreshToken = (refresh) => {\r\n    return api_admin.post(`auth/api/v1/token/refresh`, { refresh: refresh });\r\n}\r\nexport {\r\n    login, getListUser, createUser, getUser, deleteUser, editUser, refreshToken\r\n}","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { DatabaseOutlined, } from '@ant-design/icons';\r\nimport { Table, Space, Modal, Divider, Button, Input, Popconfirm, message } from 'antd';\r\nimport { AiFillEdit, AiFillDelete, AiFillEye } from \"react-icons/ai\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { getListUser, createUser, getUser, deleteUser, editUser } from '../../../services/userService';\r\nimport { async } from 'q';\r\nclass user extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpenFormCreate: false,\r\n            isOpenFormDetail: false,\r\n            isOpenFormEdit: false,\r\n            dataUser: {},\r\n            dataUsers: [],\r\n            idUser: '',\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.getListUser();\r\n    }\r\n    getListUser = async () => {\r\n        try {\r\n            let data = await getListUser();\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataUsers: data.data.data })\r\n            } else {\r\n                this.setState({ dataUsers: {} })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    getUser = async (id) => {\r\n        try {\r\n            let data = await getUser(id);\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataUser: data.data.data })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state.dataUser };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            dataUser: {\r\n                ...copyState\r\n            }\r\n        });\r\n    }\r\n    openForm = async (name, value, id) => {\r\n        if (name == 'create') { this.setState({ isOpenFormCreate: value }) }\r\n        if (name == 'detail') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormDetail: value });\r\n            } else {\r\n                this.setState({ isOpenFormDetail: value });\r\n                await this.getUser(id);\r\n            }\r\n        }\r\n        if (name == 'edit') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormEdit: value });\r\n            } else {\r\n                this.setState({ isOpenFormEdit: value, idUser: id });\r\n                await this.getUser(id);\r\n            }\r\n        }\r\n    }\r\n    isCheckEmpty = (value) => {\r\n        return value.trim().length\r\n    }\r\n    isCheckSpace = (value) => {\r\n        return (/\\s/).test(value);\r\n    }\r\n    Validation = (data) => {\r\n        if (!data.username) {\r\n            return { mess: \"Thiếu tài khoản\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.username) == 0) {\r\n            return { mess: \"Thiếu tài khoản\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.username) < 5) {\r\n            return { mess: \"Tài khoản >4 kí tự\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(data.username) == true) {\r\n            return { mess: \"Tài khoản chứa khoảng trắng\", code: 1 };\r\n        }\r\n        for (const i of this.state.dataUsers) {\r\n            if (i.username == data.username) {\r\n                return { mess: \"Tài khoản đã tồn tại\", code: 1 };\r\n            }\r\n        }\r\n        if (!data.password) {\r\n            return { mess: \"Thiếu mật khẩu\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.password) == 0) {\r\n            return { mess: \"Thiếu mật khẩu\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.password) < 9) {\r\n            return { mess: \"Mật khẩu phải lớn hơn 8 kí tự\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(data.password) == true) {\r\n            return { mess: \"Mật khấu chứa khoảng trắng\", code: 1 };\r\n        }\r\n        if (!data.password2) {\r\n            return { mess: \"Thiếu mật khẩu nhập lại\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.password2) == 0) {\r\n            return { mess: \"Thiếu mật khẩu 2\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.password2) < 9) {\r\n            return { mess: \"Mật khẩu phải lớn hơn 8 kí tự\", code: 1 };\r\n        }\r\n        if (data.password !== data.password2) {\r\n            return { mess: \"Mật khẩu nhập lại sai\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(data.password2) == true) {\r\n            return { mess: \"Mật khấu 2 chứa khoảng trắng\", code: 1 };\r\n        }\r\n        if (!data.first_name) {\r\n            return { mess: \"Thiếu họ\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.first_name) == 0) {\r\n            return { mess: \"Thiếu họ\", code: 1 };\r\n        }\r\n        if (!data.last_name) {\r\n            return { mess: \"Thiếu tên\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.last_name) == 0) {\r\n            return { mess: \"Thiếu tên\", code: 1 };\r\n        }\r\n        return { code: 0 };\r\n    }\r\n    ValidationEdit = (data) => {\r\n        if (this.isCheckEmpty(data.first_name) == 0) {\r\n            return { mess: \"Thiếu họ\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.last_name) == 0) {\r\n            return { mess: \"Thiếu tên\", code: 1 };\r\n        }\r\n        return { code: 0 };\r\n    }\r\n    handleCreate = async () => {\r\n        let result = this.Validation(this.state.dataUser);\r\n        if (result.code == 0) {\r\n            try {\r\n                let data = await createUser(this.state.dataUser);\r\n                if (data && data.data && data.data.success == 1) {\r\n                    toast.success('Thành công')\r\n                    await this.getListUser();\r\n                    this.setState({ isOpenFormCreate: false })\r\n                } else {\r\n                    toast.error('Thông tin điền bị lỗi')\r\n                }\r\n            } catch (e) {\r\n                toast.error('Lỗi hệ thống');\r\n            }\r\n        } else {\r\n            toast.error(result.mess);\r\n        }\r\n    }\r\n    handleEdit = async (id) => {\r\n        let result = this.ValidationEdit(this.state.dataUser);\r\n        if (result.code == 0) {\r\n            try {\r\n                let data = await editUser(id, this.state.dataUser);\r\n                if (data && data.data && data.data.success == 1) {\r\n                    toast.success('Thành công')\r\n                    await this.getListUser();\r\n                    this.setState({ isOpenFormEdit: false, dataUser: {} })\r\n                } else {\r\n                    toast.error('Tài khoản đã tồn tại')\r\n                }\r\n            } catch (e) {\r\n                toast.error('Lỗi hệ thống');\r\n            }\r\n        } else {\r\n            toast.error(result.mess);\r\n        }\r\n    }\r\n    handleDelete = async (id) => {\r\n        try {\r\n            let data = await deleteUser(id);\r\n            if (data && data.data && data.data.success == 1) {\r\n                toast.success('Thành công')\r\n                await this.getListUser();\r\n            } else {\r\n                toast.error('Thất bại')\r\n            }\r\n        } catch (e) {\r\n            toast.error('Lỗi hệ thống');\r\n        }\r\n    }\r\n    render() {\r\n        let dataUser = this.state.dataUser;\r\n        const columns = [\r\n            {\r\n                title: 'Id', dataIndex: 'id', responsive: ['md'], width: 100,\r\n                sorter: (a, b) => a.id - b.id,\r\n            },\r\n            {\r\n                title: 'Họ', dataIndex: 'first_name', responsive: ['md'],\r\n                sorter: (a, b) => a.first_name.localeCompare(b.first_name),\r\n\r\n            },\r\n            {\r\n                title: 'Tên', dataIndex: 'last_name', responsive: ['md'],\r\n                sorter: (a, b) => a.last_name.localeCompare(b.last_name),\r\n            },\r\n            {\r\n                title: 'Tài khoản', dataIndex: 'username',\r\n                sorter: (a, b) => a.username.localeCompare(b.username),\r\n            },\r\n            {\r\n                title: 'Hành động', width: 100,\r\n                render: (_, record) => (\r\n                    <Space size=\"small\">\r\n                        <a onClick={() => this.openForm('detail', true, record.id)}><AiFillEye /></a>\r\n                        <a onClick={() => this.openForm('edit', true, record.id)}><AiFillEdit /></a>\r\n                        <Popconfirm title=\"Xóa ?\" okType='default' onConfirm={() => this.handleDelete(record.id)}>\r\n                            <a><AiFillDelete /></a>\r\n                        </Popconfirm>\r\n                    </Space>\r\n                ),\r\n            },\r\n        ];\r\n        return (\r\n            <div className='m-[10px] p-[10px] border shadow-md bg-white'>\r\n                <Button size='small' onClick={() => this.openForm('create', true)} type='default' className='bg-black text-white'>Tạo mới</Button>\r\n                <Divider>TÀI KHOẢN</Divider>\r\n                <Table columns={columns} dataSource={this.state.dataUsers}\r\n                    size=\"small\" bordered\r\n                    pagination={{ pageSize: 7, }}\r\n                    scroll={{ y: 300, x: 300, }}\r\n                />\r\n                <Modal title=\"Tạo mới\" open={this.state.isOpenFormCreate}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.handleCreate()}\r\n                    onCancel={() => this.openForm('create', false)}\r\n                    width={300} >\r\n                    <div className='space-y-[10px]'>\r\n                        <div>\r\n                            <label>Tài khoản<span className='text-red-500'> *</span></label>\r\n                            <Input placeholder='Lớn hơn 4 kí tự'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'username')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Mật khẩu<span className='text-red-500'> *</span></label>\r\n                            <Input.Password placeholder='Lớn hơn 8 và có kí tự đặc biệt'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'password')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Nhập lại mật khẩu<span className='text-red-500'> *</span></label>\r\n                            <Input.Password placeholder='Lớn hơn 8 và có kí tự đặc biệt'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'password2')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Họ<span className='text-red-500'> *</span></label>\r\n                            <Input placeholder='Huy'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'first_name')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Tên<span className='text-red-500'> *</span></label>\r\n                            <Input placeholder='Hoàng'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'last_name')} />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <Modal title=\"Chi tiết\" open={this.state.isOpenFormDetail}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.openForm('detail', false, null)}\r\n                    onCancel={() => this.openForm('detail', false, null)}\r\n                    width={300}\r\n                >\r\n                    <div className='space-y-[10px]'>\r\n                        <div>\r\n                            <label>Tài khoản<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataUser.username} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Họ<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataUser.first_name} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Tên<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataUser.last_name} />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <Modal title=\"Chỉnh sửa\" open={this.state.isOpenFormEdit}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.handleEdit(this.state.idUser)}\r\n                    onCancel={() => this.openForm('edit', false, null)}\r\n                    width={300}\r\n                >\r\n                    <div className='space-y-[10px]'>\r\n                        <div>\r\n                            <label>Tài khoản<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataUser.username}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'username')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Họ<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataUser.first_name}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'first_name')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Tên<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataUser.last_name}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'last_name')} />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(user);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { DatabaseOutlined, } from '@ant-design/icons';\r\nimport { Table, Space, Modal, Divider, Button, Input, Popconfirm, Select, AutoComplete } from 'antd';\r\nimport { AiFillEdit, AiFillDelete, AiFillEye } from \"react-icons/ai\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { getListOrder, getOrder, getListBuyer } from '../../../services/eventService';\r\nclass order extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpenFormCreate: false,\r\n            isOpenFormDetail: false,\r\n            isOpenFormEdit: false,\r\n            isOpenFormStatistic: false,\r\n            dataOrder: {},\r\n            dataOrders: [],\r\n            idOrder: '',\r\n            dataStatistic: {\r\n                total_amount: 0,\r\n                total_ticket: 0,\r\n            },\r\n            dataBuyers: [],\r\n            dataSearch: [],\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.getListOrder();\r\n        await this.getListBuyer();\r\n    }\r\n    getListBuyer = async () => {\r\n        try {\r\n            let data = await getListBuyer();\r\n            if (data && data.data && data.data.success == 1) {\r\n                let dataRaw = data.data.data;\r\n                let dataFilter = [];\r\n                for (const i of dataRaw) {\r\n                    const obj = {};\r\n                    obj.key = i.id;\r\n                    obj.value = i.full_name;\r\n                    dataFilter.push(obj);\r\n                }\r\n                this.setState({ dataBuyers: data.data.data, dataSearch: dataFilter })\r\n            } else {\r\n                this.setState({ dataBuyers: {} })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    onSelect = async (value, option) => {\r\n        await this.getListOrder();\r\n        let dataOrders = this.state.dataOrders;\r\n        let dataFilter = [];\r\n        for (const i of dataOrders) {\r\n            if (i && i.buyer && i.buyer.id == option.key) {\r\n                dataFilter.push(i);\r\n            }\r\n        }\r\n        this.setState({ dataOrders: dataFilter })\r\n    }\r\n    onClearAutoComplete = async () => {\r\n        await this.getListOrder();\r\n    }\r\n    onChange_payment_status = (value) => {\r\n        this.Statistic(value);\r\n    }\r\n    Statistic = (value) => {\r\n        let dataOrders = this.state.dataOrders;\r\n        let ticket = 0;\r\n        let amount = 0;\r\n        for (const i of dataOrders) {\r\n            if (i.payment_status == value) {\r\n                ticket += i.ticket_quantity;\r\n                amount += i.total_amount;\r\n            }\r\n        }\r\n        let data = {};\r\n        data.total_ticket = ticket;\r\n        data.total_amount = amount;\r\n        this.setState({ dataStatistic: data })\r\n    }\r\n    getListOrder = async () => {\r\n        try {\r\n            let data = await getListOrder();\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataOrders: data.data.data })\r\n            } else {\r\n                this.setState({ dataOrders: {} })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    getOrder = async (id) => {\r\n        try {\r\n            let data = await getOrder(id);\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataOrder: data.data.data })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state.dataOrder };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            dataOrder: {\r\n                ...copyState\r\n            }\r\n        });\r\n    }\r\n    openForm = async (name, value, id) => {\r\n        if (name == 'create') { this.setState({ isOpenFormCreate: value }) }\r\n        if (name == 'statistic') { this.setState({ isOpenFormCreate: value }) }\r\n        if (name == 'detail') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormDetail: value });\r\n            } else {\r\n                this.setState({ isOpenFormDetail: value });\r\n                await this.getOrder(id);\r\n            }\r\n        }\r\n        if (name == 'edit') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormEdit: value });\r\n            } else {\r\n                this.setState({ isOpenFormEdit: value, idOrder: id });\r\n                await this.getOrder(id);\r\n            }\r\n        }\r\n    }\r\n    isCheckEmpty = (value) => {\r\n        return value.trim().length\r\n    }\r\n    isCheckSpace = (value) => {\r\n        return (/\\s/).test(value);\r\n    }\r\n    Validation = (data) => {\r\n        return { code: 0 };\r\n    }\r\n    ValidationEdit = (data) => {\r\n        return { code: 0 };\r\n    }\r\n    handleCreate = async () => {\r\n    }\r\n    handleEdit = async (id) => {\r\n    }\r\n    handleDelete = async (id) => {\r\n    }\r\n    render() {\r\n        let dataOrder = this.state.dataOrder;\r\n        let dataStatistic = this.state.dataStatistic;\r\n        const columns = [\r\n            {\r\n                title: 'Id', dataIndex: 'id', responsive: ['md'], width: 100,\r\n                sorter: (a, b) => a.id - b.id,\r\n            },\r\n            {\r\n                title: 'Tổng tiền', dataIndex: 'total_amount',\r\n                sorter: (a, b) => a.total_amount - b.total_amount,\r\n\r\n            },\r\n            {\r\n                title: 'Tổng vé', dataIndex: 'ticket_quantity',\r\n                sorter: (a, b) => a.ticket_quantity - b.ticket_quantity,\r\n\r\n            },\r\n            {\r\n                title: 'Trạng thái', dataIndex: 'payment_status',\r\n                sorter: (a, b) => a.payment_status.localeCompare(b.payment_status),\r\n            },\r\n            {\r\n                title: 'Ngày tạo', dataIndex: 'created_at', responsive: ['md'],\r\n                sorter: (a, b) => a.created_at.localeCompare(b.created_at),\r\n            },\r\n            {\r\n                title: 'Hđ', width: 100,\r\n                render: (_, record) => (\r\n                    <Space size=\"small\">\r\n                        <a onClick={() => this.openForm('detail', true, record.id)}><AiFillEye /></a>\r\n                        {/* <a onClick={() => this.openForm('edit', true, record.id)}><AiFillEdit /></a>\r\n                        <Popconfirm title=\"Xóa ?\" okType='default' onConfirm={() => this.handleDelete(record.id)}>\r\n                            <a><AiFillDelete /></a>\r\n                        </Popconfirm> */}\r\n                    </Space>\r\n                ),\r\n            },\r\n        ];\r\n        return (\r\n            <div className='m-[10px] p-[10px] border shadow-md bg-white'>\r\n                <div className='flex items-center justify-between'>\r\n                    {/* <Button disabled size='small' onClick={() => this.openForm('create', true)} type='default' className='bg-black text-white'>Tạo mới</Button> */}\r\n                    <Button size='small' onClick={() => this.openForm('statistic', true)} type='default' className='bg-black text-white'>Thống kê</Button>\r\n                    <AutoComplete className='md:w-[300px] w-[200px]'\r\n                        options={this.state.dataSearch}\r\n                        onSelect={(value, option) => this.onSelect(value, option)}\r\n                        placeholder=\"Tìm tên\"\r\n                        filterOption={(inputValue, option) =>\r\n                            option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                        }\r\n                        onClear={() => this.onClearAutoComplete()}\r\n                        allowClear\r\n                    />\r\n                </div>\r\n                <Divider>HÓA ĐƠN</Divider>\r\n                <Table columns={columns} dataSource={this.state.dataOrders}\r\n                    size=\"small\" bordered\r\n                    pagination={{ pageSize: 7, }}\r\n                    scroll={{ y: 300, x: 300, }}\r\n                />\r\n                <Modal title=\"Tạo mới\" open={this.state.isOpenFormCreate}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.handleCreate()}\r\n                    onCancel={() => this.openForm('create', false)}\r\n                    width={300} >\r\n\r\n                </Modal>\r\n                <Modal title=\"Chi tiết\" open={this.state.isOpenFormDetail}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.openForm('detail', false, null)}\r\n                    onCancel={() => this.openForm('detail', false, null)}\r\n                    width={300}\r\n                >\r\n                    <div className='space-y-[10px]'>\r\n                        <div className='border p-[10px] shadow-md rounded-[5px]'>\r\n                            <div className='text-center font-[700]'><label>Sự kiện</label></div>\r\n                            <div>\r\n                                <label>Tên<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.event && dataOrder.event.event_name} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='border p-[10px] shadow-md rounded-[5px]'>\r\n                            <div className='text-center font-[700]'><label>Người mua</label></div>\r\n                            <div>\r\n                                <label>Họ tên<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.buyer && dataOrder.buyer.full_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Mã sinh viên<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.buyer && dataOrder.buyer.student_id} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Số điện thoại<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.buyer && dataOrder.buyer.phone_number} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='border p-[10px] shadow-md rounded-[5px]'>\r\n                            <div className='text-center font-[700]'><label>Hóa đơn</label></div>\r\n                            <div>\r\n                                <label>Mã hóa đơn<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.id} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Tổng vé<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.ticket_quantity} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Tổng tiền<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.total_amount} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Thanh toán<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.payment_method} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Trạng thái<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.payment_status} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Người bán<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.user && dataOrder.user.last_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Ngày tạo<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.created_at} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Ngày cập nhập<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.updated_at} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <Modal title=\"Chỉnh sửa\" open={this.state.isOpenFormEdit}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.handleEdit(this.state.idOrder)}\r\n                    onCancel={() => this.openForm('edit', false, null)}\r\n                    width={300}\r\n                >\r\n\r\n                </Modal>\r\n                <Modal title=\"Thống kê\" open={this.state.isOpenFormCreate}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.openForm('statistic', false)}\r\n                    onCancel={() => this.openForm('statistic', false)}\r\n                    width={300} >\r\n                    <div className='space-y-[10px]'>\r\n                        <div className='text-center font-[700]'>\r\n                            <Select defaultValue=\"Trạng thái\"\r\n                                style={{ width: 120, }}\r\n                                onChange={(value) => this.onChange_payment_status(value)}\r\n                                options={[\r\n                                    {\r\n                                        value: 'success',\r\n                                        label: 'Thành công',\r\n                                    },\r\n                                    {\r\n                                        value: 'pending',\r\n                                        label: 'Đang chờ',\r\n                                    },\r\n                                ]}\r\n                            />\r\n                        </div>\r\n                        <div className='border p-[10px] shadow-md rounded-[5px] space-y-[20px]'>\r\n                            <div className='text-center'>\r\n                                <label className='font-[600]'>Tổng hóa đơn</label><br />\r\n                                <label className='text-red-500'>{dataStatistic.total_ticket} cái</label>\r\n                            </div>\r\n                            <div className='text-center'>\r\n                                <label className='font-[600]'>Tổng tiền</label><br />\r\n                                <label className='text-red-500'>{`${dataStatistic.total_amount}`.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')} vnđ</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(order);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { DatabaseOutlined, } from '@ant-design/icons';\r\nimport { DatePicker, Table, Space, Modal, Divider, Button, Input, Select, Form, Popconfirm } from 'antd';\r\nimport { AiFillEdit, AiFillDelete, AiFillEye, AiOutlinePlus } from \"react-icons/ai\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { getListEvent, getEvent, editEvent } from '../../../services/eventService';\r\nclass event extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpenFormCreate: false,\r\n            isOpenFormDetail: false,\r\n            isOpenFormEdit: false,\r\n            dataEvent: {},\r\n            dataEvents: [],\r\n            dataEvent1: {},\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.getListEvent();\r\n    }\r\n    getListEvent = async () => {\r\n        try {\r\n            let data = await getListEvent();\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataEvents: data.data.data })\r\n            } else {\r\n                this.setState({ dataEvents: {} })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    getEvent = async (id) => {\r\n        try {\r\n            let data = await getEvent(id);\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({\r\n                    dataEvent: data.data.data,\r\n                    dataEvent1: data.data.data\r\n                })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state.dataEvent };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            dataEvent: {\r\n                ...copyState\r\n            }\r\n        });\r\n    }\r\n    openForm = async (name, value, id) => {\r\n        if (name == 'create') { this.setState({ isOpenFormCreate: value }) }\r\n        if (name == 'detail') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormDetail: value });\r\n            } else {\r\n                this.setState({ isOpenFormDetail: value });\r\n                await this.getEvent(id);\r\n            }\r\n        }\r\n        if (name == 'edit') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormEdit: value });\r\n            } else {\r\n                this.setState({ isOpenFormEdit: value, idUser: id });\r\n                await this.getEvent(id);\r\n            }\r\n        }\r\n    }\r\n    isCheckEmpty = (value) => {\r\n        return value.trim().length\r\n    }\r\n    isCheckSpace = (value) => {\r\n        return (/\\s/).test(value);\r\n    }\r\n    Validation = (data) => {\r\n        return { code: 0 };\r\n    }\r\n    ValidationEdit = (data) => {\r\n        let dataEvent = this.state.dataEvent1;\r\n        if (this.isCheckEmpty(data.event_name) == 0) {\r\n            return { mess: \"Thiếu tên sự kiện\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.expiry_date) == 0) {\r\n            return { mess: \"Thiếu ngày kết thúc\", code: 1 };\r\n        }\r\n        if ((dataEvent.total_ticket - dataEvent.avaliable_ticket) > data.total_ticket) {\r\n            return { mess: \"Tổng vé phải lớn hơn hoặc bằng số vé đã bán\", code: 1 };\r\n        }\r\n        return { code: 0 };\r\n    }\r\n    handleCreate = async () => {\r\n    }\r\n    handleEdit = async (id) => {\r\n        let result = this.ValidationEdit(this.state.dataEvent);\r\n        if (result.code == 0) {\r\n            try {\r\n                let data = await editEvent(id, this.state.dataEvent);\r\n                if (data && data.data && data.data.success == 1) {\r\n                    toast.success('Thành công')\r\n                    await this.getListEvent();\r\n                    this.setState({ isOpenFormEdit: false })\r\n                } else {\r\n                    toast.error('Sửa thất bại')\r\n                }\r\n            } catch (e) {\r\n                toast.error('Lỗi hệ thống');\r\n            }\r\n        } else {\r\n            toast.error(result.mess);\r\n        }\r\n    }\r\n    handleDelete = async (id) => {\r\n    }\r\n    render() {\r\n        let dataEvent = this.state.dataEvent;\r\n        const columns = [\r\n            {\r\n                title: 'Stt', dataIndex: 'id', responsive: ['md'], width: 100,\r\n                sorter: (a, b) => a.id - b.id,\r\n            },\r\n            {\r\n                title: 'Mã Code', dataIndex: 'event_code', responsive: ['md'],\r\n            },\r\n            {\r\n                title: 'Tên', dataIndex: 'event_name',\r\n                sorter: (a, b) => a.username.localeCompare(b.username),\r\n            },\r\n            {\r\n                title: 'Ngày kết thúc', dataIndex: 'expiry_date', responsive: ['md'],\r\n            },\r\n            {\r\n                title: 'Hành động', width: 120,\r\n                render: (_, record) => (\r\n                    <Space size=\"small\">\r\n                        <a onClick={() => this.openForm('detail', true, record.event_code)}><AiFillEye /></a>\r\n                        <a onClick={() => this.openForm('edit', true, record.event_code)}><AiFillEdit /></a>\r\n                        {/* <Popconfirm title=\"Xóa ?\" okType='default' onConfirm={() => this.handleDelete(record.event_code)}>\r\n                            <a><AiFillDelete /></a>\r\n                        </Popconfirm> */}\r\n                    </Space>\r\n                ),\r\n            },\r\n        ];\r\n        return (\r\n            <div className='m-[10px] p-[10px] border shadow-md bg-white'>\r\n                <Button disabled size='small' onClick={() => this.openForm('create', true)} type='default' className='bg-black text-white'>Tạo mới</Button>\r\n                <Divider>SỰ KIỆN</Divider>\r\n                <Table columns={columns} dataSource={this.state.dataEvents}\r\n                    size=\"small\" bordered\r\n                    pagination={{ pageSize: 7, }}\r\n                    scroll={{ y: 300, x: 300, }}\r\n                />\r\n                <Modal title=\"Tạo mới\" open={this.state.isOpenFormCreate}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.handleCreate()}\r\n                    onCancel={() => this.openForm('create', false)}\r\n                    width={300} >\r\n                    <div className='space-y-[10px]'>\r\n                        <div>\r\n                            <label>Tài khoản<span className='text-red-500'> *</span></label>\r\n                            <Input placeholder='Lớn hơn 4 kí tự'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'username')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Mật khẩu<span className='text-red-500'> *</span></label>\r\n                            <Input.Password placeholder='Lớn hơn 8 và có kí tự đặc biệt'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'password')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Nhập lại mật khẩu<span className='text-red-500'> *</span></label>\r\n                            <Input.Password placeholder='Lớn hơn 8 và có kí tự đặc biệt'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'password2')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Họ<span className='text-red-500'> *</span></label>\r\n                            <Input placeholder='Huy'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'first_name')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Tên<span className='text-red-500'> *</span></label>\r\n                            <Input placeholder='Hoàng'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'last_name')} />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <Modal title=\"Chi tiết\" open={this.state.isOpenFormDetail}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.openForm('detail', false, null)}\r\n                    onCancel={() => this.openForm('detail', false, null)}\r\n                    width={300}\r\n                >\r\n                    <div className='space-y-[10px]'>\r\n                        <div>\r\n                            <label>Mã Code<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.event_code} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Sự kiện<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.event_name} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Ngày kết thúc<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.expiry_date} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Trạng thái<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.is_activate} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Giá vé<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.ticket_price} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Tổng vé<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.total_ticket} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Vé đã bán<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.total_ticket - dataEvent.avaliable_ticket} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Vé vé còn lại<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.avaliable_ticket} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Ngày tạo<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.created_at} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Ngày cập nhập<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.updated_at} />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <Modal title=\"Chỉnh sửa\" open={this.state.isOpenFormEdit}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.handleEdit(this.state.idUser)}\r\n                    onCancel={() => this.openForm('edit', false, null)}\r\n                    width={300}\r\n                >\r\n                    <div className='space-y-[10px]'>\r\n                        <div>\r\n                            <label>Mã Code<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.event_code} disabled />\r\n                        </div>\r\n                        <div>\r\n                            <label>Sự kiện<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.event_name}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'event_name')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Ngày kết thúc<span className='text-red-500'> *</span></label><br />\r\n                            <input className='border w-full p-[5px] rounded-[5px]'\r\n                                type='date' value={dataEvent.expiry_date}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'expiry_date')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Trạng thái<span className='text-red-500'> *</span></label><br />\r\n                            <select value={dataEvent.is_activate} className='border w-full p-[5px] rounded-[5px]'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'is_activate')}>\r\n                                <option value={true}>Mở</option>\r\n                                <option value={false}>Đóng</option>\r\n                            </select>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <label>Giá vé<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.ticket_price}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'ticket_price')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Tổng vé<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.total_ticket}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'total_ticket')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Vé đã bán<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.total_ticket - dataEvent.avaliable_ticket} disabled />\r\n                        </div>\r\n                        <div>\r\n                            <label>Vé vé còn lại<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.avaliable_ticket} disabled />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Ngày tạo<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.created_at} disabled />\r\n                        </div>\r\n                        <div>\r\n                            <label>Ngày cập nhập<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.updated_at} disabled />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(event);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { DatabaseOutlined, } from '@ant-design/icons';\r\nimport { Table, Space, Modal, Divider, Button, Input, Popconfirm, AutoComplete, ConfigProvider } from 'antd';\r\nimport { AiFillEdit, AiFillDelete, AiFillEye } from \"react-icons/ai\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { getListBuyer, getBuyer } from '../../../services/eventService';\r\nimport { CloseSquareFilled, DeleteOutlined } from '@ant-design/icons';\r\n\r\nclass buyer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpenFormCreate: false,\r\n            isOpenFormDetail: false,\r\n            isOpenFormEdit: false,\r\n            dataBuyer: {},\r\n            dataBuyers: [],\r\n            idBuyer: '',\r\n            dataSearch: [],\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.getListBuyer();\r\n    }\r\n    getListBuyer = async () => {\r\n        try {\r\n            let data = await getListBuyer();\r\n            if (data && data.data && data.data.success == 1) {\r\n                let dataRaw = data.data.data;\r\n                let dataFilter = [];\r\n                for (const i of dataRaw) {\r\n                    const obj = {};\r\n                    obj.key = i.id;\r\n                    obj.value = i.full_name;\r\n                    dataFilter.push(obj);\r\n                }\r\n                this.setState({ dataBuyers: data.data.data, dataSearch: dataFilter })\r\n            } else {\r\n                this.setState({ dataBuyers: {} })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    getBuyer = async (id) => {\r\n        try {\r\n            let data = await getBuyer(id);\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataBuyer: data.data.data })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state.dataBuyer };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            dataBuyer: {\r\n                ...copyState\r\n            }\r\n        });\r\n    }\r\n    openForm = async (name, value, id) => {\r\n        if (name == 'create') { this.setState({ isOpenFormCreate: value }) }\r\n        if (name == 'detail') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormDetail: value });\r\n            } else {\r\n                this.setState({ isOpenFormDetail: value });\r\n                await this.getBuyer(id);\r\n            }\r\n        }\r\n        if (name == 'edit') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormEdit: value });\r\n            } else {\r\n                this.setState({ isOpenFormEdit: value, idBuyer: id });\r\n                await this.getBuyer(id);\r\n            }\r\n        }\r\n    }\r\n    isCheckEmpty = (value) => { return value.trim().length }\r\n    isCheckSpace = (value) => { return (/\\s/).test(value); }\r\n    Validation = (data) => {\r\n        return { code: 0 };\r\n    }\r\n    ValidationEdit = (data) => {\r\n        return { code: 0 };\r\n    }\r\n    handleCreate = async () => {\r\n    }\r\n    handleEdit = async (id) => {\r\n    }\r\n    handleDelete = async (id) => {\r\n    }\r\n    onSelect = async (value, option) => {\r\n        await this.getListBuyer();\r\n        let dataBuyers = this.state.dataBuyers;\r\n        let result = dataBuyers.filter(obj => {\r\n            return obj.id === option.key\r\n        })\r\n        this.setState({ dataBuyers: result })\r\n    }\r\n    onClearAutoComplete = async () => {\r\n        await this.getListBuyer()\r\n    }\r\n    render() {\r\n        let dataBuyer = this.state.dataBuyer;\r\n        const columns = [\r\n            {\r\n                title: 'Id', dataIndex: 'id', responsive: ['md'], width: 100,\r\n                sorter: (a, b) => a.id - b.id,\r\n            },\r\n            {\r\n                title: 'Tên', dataIndex: 'full_name',\r\n                sorter: (a, b) => a.full_name.localeCompare(b.full_name),\r\n            },\r\n            {\r\n                title: 'Sđt', dataIndex: 'phone_number', responsive: ['md'],\r\n                sorter: (a, b) => a.phone_number.localeCompare(b.phone_number),\r\n\r\n            },\r\n            {\r\n                title: 'Mssv', dataIndex: 'student_id', responsive: ['md'],\r\n                sorter: (a, b) => a.student_id.localeCompare(b.student_id),\r\n            },\r\n            {\r\n                title: 'Hđ', width: 100,\r\n                render: (_, record) => (\r\n                    <Space size=\"small\" >\r\n                        <a onClick={() => this.openForm('detail', true, record.id)}><AiFillEye /></a>\r\n                        {/* <a onClick={() => this.openForm('edit', true, record.id)}><AiFillEdit /></a>\r\n                        <Popconfirm title=\"Xóa ?\" okType='default' onConfirm={() => this.handleDelete(record.id)}>\r\n                            <a><AiFillDelete /></a>\r\n                        </Popconfirm> */}\r\n                    </Space>\r\n                ),\r\n            },\r\n        ];\r\n        return (\r\n            <>\r\n                <div className='m-[10px] p-[10px] border shadow-md bg-white'>\r\n                    <div className='flex items-center justify-between'>\r\n                        <Button disabled size='small' onClick={() => this.openForm('create', true)} type='default' className='bg-black text-white'>Tạo mới</Button>\r\n                        <AutoComplete className='md:w-[300px] w-[200px]'\r\n                            options={this.state.dataSearch}\r\n                            onSelect={(value, option) => this.onSelect(value, option)}\r\n                            placeholder=\"Tìm tên\"\r\n                            filterOption={(inputValue, option) =>\r\n                                option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                            }\r\n                            onClear={() => this.onClearAutoComplete()}\r\n                            allowClear\r\n                        />\r\n                    </div>\r\n                    <Divider>NGƯỜI MUA</Divider>\r\n                    <Table columns={columns} dataSource={this.state.dataBuyers}\r\n                        size=\"small\" bordered\r\n                        pagination={{ pageSize: 7, }}\r\n                        scroll={{ y: 300, x: 300, }}\r\n                    />\r\n                    <Modal title=\"Tạo mới\" open={this.state.isOpenFormCreate}\r\n                        okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                        onOk={() => this.handleCreate()}\r\n                        onCancel={() => this.openForm('create', false)}\r\n                        width={300} >\r\n                        <div className='space-y-[10px]'>\r\n                            <div>\r\n                                <label>Họ tên<span className='text-red-500'> *</span></label>\r\n                                <Input />\r\n                            </div>\r\n                            <div>\r\n                                <label>Mã sinh viên<span className='text-red-500'> *</span></label>\r\n                                <Input />\r\n                            </div>\r\n                            <div>\r\n                                <label>Số điện thoại<span className='text-red-500'> *</span></label>\r\n                                <Input />\r\n                            </div>\r\n                        </div>\r\n                    </Modal>\r\n                    <Modal title=\"Chi tiết\" open={this.state.isOpenFormDetail}\r\n                        okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                        onOk={() => this.openForm('detail', false, null)}\r\n                        onCancel={() => this.openForm('detail', false, null)}\r\n                        width={300}\r\n                    >\r\n                        <div className='space-y-[10px]'>\r\n                            <div>\r\n                                <label>Id<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataBuyer.id} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Họ tên<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataBuyer.full_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Mã sinh viên<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataBuyer.student_id} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Email<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataBuyer.email} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Số điện thoại<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataBuyer.phone_number} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Ngày tạo<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataBuyer.created_at} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Ngày cập nhập<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataBuyer.updated_at} />\r\n                            </div>\r\n                        </div>\r\n                    </Modal>\r\n                    <Modal title=\"Chỉnh sửa\" open={this.state.isOpenFormEdit}\r\n                        okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                        onOk={() => this.handleEdit(this.state.idBuyer)}\r\n                        onCancel={() => this.openForm('edit', false, null)}\r\n                        width={300}\r\n                    >\r\n                        <div className='space-y-[10px]'>\r\n                            <div className='space-y-[10px]'>\r\n                                <div>\r\n                                    <label>Id<span className='text-red-500'> *</span></label>\r\n                                    <Input value={dataBuyer.id} disabled />\r\n                                </div>\r\n                                <div>\r\n                                    <label>Họ tên<span className='text-red-500'> *</span></label>\r\n                                    <Input value={dataBuyer.full_name} />\r\n                                </div>\r\n                                <div>\r\n                                    <label>Mã sinh viên<span className='text-red-500'> *</span></label>\r\n                                    <Input value={dataBuyer.student_id} />\r\n                                </div>\r\n                                <div>\r\n                                    <label>Email<span className='text-red-500'> *</span></label>\r\n                                    <Input value={dataBuyer.email} disabled />\r\n                                </div>\r\n                                <div>\r\n                                    <label>Số điện thoại<span className='text-red-500'> *</span></label>\r\n                                    <Input value={dataBuyer.phone_number} />\r\n                                </div>\r\n                                <div>\r\n                                    <label>Ngày tạo<span className='text-red-500'> *</span></label>\r\n                                    <Input value={dataBuyer.created_at} disabled />\r\n                                </div>\r\n                                <div>\r\n                                    <label>Ngày cập nhập<span className='text-red-500'> *</span></label>\r\n                                    <Input value={dataBuyer.updated_at} disabled />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(buyer);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { DatabaseOutlined, } from '@ant-design/icons';\r\nimport { Table, Space, Modal, Divider, Button, Input, Popconfirm, Select, AutoComplete } from 'antd';\r\nimport { AiFillEdit, AiFillDelete, AiFillEye } from \"react-icons/ai\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { getListTicket } from '../../../services/eventService';\r\nclass ticket extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpenFormCreate: false,\r\n            isOpenFormDetail: false,\r\n            isOpenFormEdit: false,\r\n            dataTickets: [],\r\n            dataTicket: {},\r\n            dataSearch: [],\r\n            total_ticket: 0,\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.getListTicket();\r\n    }\r\n    onSelect = async (value, option) => {\r\n        await this.getListTicket();\r\n        let dataTickets = this.state.dataTickets;\r\n        let dataFilter = [];\r\n        for (const i of dataTickets) {\r\n            if (i && i.student && i.student.id == option.key) {\r\n                dataFilter.push(i);\r\n            }\r\n        }\r\n        this.setState({ dataTickets: dataFilter })\r\n    }\r\n    onClearAutoComplete = async () => {\r\n        await this.getListTicket();\r\n    }\r\n    getListTicket = async () => {\r\n        try {\r\n            let data = await getListTicket();\r\n            if (data && data.data && data.data.success == 1) {\r\n                let dataRaw = data.data.data;\r\n                let dataFilter = [];\r\n                let total_ticket = 0;\r\n                for (const i of dataRaw) {\r\n                    total_ticket += 1;\r\n                    if (i.student !== null) {\r\n                        const obj = {};\r\n                        obj.key = i.student.id;\r\n                        obj.value = i.student.full_name;\r\n                        dataFilter.push(obj);\r\n                    }\r\n                }\r\n                this.setState({ dataTickets: data.data.data, dataSearch: dataFilter, total_ticket: total_ticket })\r\n            } else {\r\n                this.setState({ dataTickets: {} })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state.dataTicket };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            dataTicket: {\r\n                ...copyState\r\n            }\r\n        });\r\n    }\r\n    openForm = async (name, value, id) => {\r\n        if (name == 'create') { this.setState({ isOpenFormCreate: value }) }\r\n        if (name == 'detail') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormDetail: value });\r\n            } else {\r\n                let dataTickets = this.state.dataTickets;\r\n                let result = dataTickets.find(obj => {\r\n                    return obj.id === id\r\n                })\r\n                this.setState({ isOpenFormDetail: value, dataTicket: result });\r\n            }\r\n        }\r\n        if (name == 'edit') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormEdit: value });\r\n            } else {\r\n                this.setState({ isOpenFormEdit: value, idOrder: id });\r\n            }\r\n        }\r\n    }\r\n    isCheckEmpty = (value) => {\r\n        return value.trim().length\r\n    }\r\n    isCheckSpace = (value) => {\r\n        return (/\\s/).test(value);\r\n    }\r\n    Validation = (data) => {\r\n        return { code: 0 };\r\n    }\r\n    ValidationEdit = (data) => {\r\n        return { code: 0 };\r\n    }\r\n    handleCreate = async () => {\r\n    }\r\n    handleEdit = async (id) => {\r\n    }\r\n    handleDelete = async (id) => {\r\n    }\r\n    filterTicket = async (event) => {\r\n        await this.getListTicket();\r\n        let dataTickets = this.state.dataTickets;\r\n        let result = [];\r\n        if (event == 0) {\r\n            result = dataTickets;\r\n        }\r\n        if (event == 1) {\r\n            result = dataTickets.filter(obj => {\r\n                return obj.student !== null\r\n            })\r\n        }\r\n        if (event == 2) {\r\n            result = dataTickets.filter(obj => {\r\n                return obj.student === null\r\n            })\r\n        }\r\n        let total_ticket = 0;\r\n        for (const i of result) {\r\n            total_ticket += 1;\r\n        }\r\n        this.setState({ dataTickets: result, total_ticket: total_ticket })\r\n    }\r\n    render() {\r\n        let dataTicket = this.state.dataTicket;\r\n        const columns = [\r\n            {\r\n                title: 'Id', dataIndex: 'id', responsive: ['md'], width: 100,\r\n                sorter: (a, b) => a.id - b.id,\r\n            },\r\n            {\r\n                title: 'Mã Code', dataIndex: 'ticket_code',\r\n                sorter: (a, b) => a.ticket_code.localeCompare(b.ticket_code),\r\n            },\r\n            {\r\n                title: 'Qua cổng', dataIndex: 'student',\r\n                render: (student) => <a>{student == null ? 'Chưa' : 'Rồi'}</a>,\r\n            },\r\n            {\r\n                title: 'Sinh viên', dataIndex: 'student',\r\n                render: (student) => <a>{student == null ? 'None' : student.full_name}</a>,\r\n            },\r\n            {\r\n                title: 'Hđ', width: 100,\r\n                render: (_, record) => (\r\n                    <Space size=\"small\">\r\n                        <a onClick={() => this.openForm('detail', true, record.id)}><AiFillEye /></a>\r\n                        {/* <a onClick={() => this.openForm('edit', true, record.id)}><AiFillEdit /></a>\r\n                        <Popconfirm title=\"Xóa ?\" okType='default' onConfirm={() => this.handleDelete(record.id)}>\r\n                            <a><AiFillDelete /></a>\r\n                        </Popconfirm> */}\r\n                    </Space>\r\n                ),\r\n            },\r\n        ];\r\n        return (\r\n            <div className='m-[10px] p-[10px] border shadow-md bg-white'>\r\n                <div className='flex items-center justify-between space-x-[5px] space-y-'>\r\n                    <Select defaultValue=\"0\" style={{ width: 140, }}\r\n                        onChange={(event) => this.filterTicket(event)}\r\n                        options={[\r\n                            { value: '0', label: 'Tất cả', },\r\n                            { value: '1', label: 'Đã qua cổng', },\r\n                            { value: '2', label: 'Chưa qua cổng', },\r\n                        ]}\r\n                    />\r\n\r\n                    <AutoComplete className='md:w-[300px] w-[160px]'\r\n                        options={this.state.dataSearch}\r\n                        onSelect={(value, option) => this.onSelect(value, option)}\r\n                        placeholder=\"Tìm tên\"\r\n                        filterOption={(inputValue, option) =>\r\n                            option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                        }\r\n                        onClear={() => this.onClearAutoComplete()}\r\n                        allowClear\r\n                    />\r\n                </div>\r\n\r\n                <Divider>TỔNG CỘNG : {this.state.total_ticket} VÉ</Divider>\r\n                <Table columns={columns} dataSource={this.state.dataTickets}\r\n                    size=\"small\" bordered\r\n                    pagination={{ pageSize: 16, }}\r\n                    scroll={{ y: 300, x: 300, }}\r\n                />\r\n                <Modal title=\"Tạo mới\" open={this.state.isOpenFormCreate}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.handleCreate()}\r\n                    onCancel={() => this.openForm('create', false)}\r\n                    width={300} >\r\n\r\n                </Modal>\r\n                <Modal title=\"Chi tiết\" open={this.state.isOpenFormDetail}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.openForm('detail', false, null)}\r\n                    onCancel={() => this.openForm('detail', false, null)}\r\n                    width={300}\r\n                >\r\n                    <div className='space-y-[10px]'>\r\n                        <div className='border p-[10px] shadow-md rounded-[5px]'>\r\n                            <div className='text-center font-[700]'><label>Sự kiện</label></div>\r\n                            <div>\r\n                                <label>Tên<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataTicket.event && dataTicket.event.event_name} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='border p-[10px] shadow-md rounded-[5px]'>\r\n                            <div className='text-center font-[700]'><label>Sinh viên</label></div>\r\n                            <div>\r\n                                <label>Họ tên<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataTicket.student && dataTicket.student.full_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Mã sinh viên<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataTicket.student && dataTicket.student.student_id} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Căn cước<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataTicket.student && dataTicket.student.cccd} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='border p-[10px] shadow-md rounded-[5px]'>\r\n                            <div className='text-center font-[700]'><label>Vé</label></div>\r\n                            <div>\r\n                                <label>Mã vé<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataTicket.ticket_code} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Ngày tạo<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataTicket.created_at} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Ngày cập nhập<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataTicket.updated_at} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <Modal title=\"Chỉnh sửa\" open={this.state.isOpenFormEdit}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.handleEdit(this.state.idOrder)}\r\n                    onCancel={() => this.openForm('edit', false, null)}\r\n                    width={300}\r\n                >\r\n\r\n                </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(ticket);\r\n","export default __webpack_public_path__ + \"static/media/err.c2250901.mp3\";","export default __webpack_public_path__ + \"static/media/suc.b43a86f0.mp3\";","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { Button, Modal, Alert, Input } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { AiOutlineScan } from \"react-icons/ai\";\r\nimport { QrReader } from 'react-qr-reader';\r\nimport { getTicket, editTicket, createStudent } from '../../../services/eventService';\r\nimport { toast } from 'react-toastify';\r\nimport errSound from '../../../assets/sounds/err.mp3';\r\nimport sucSound from '../../../assets/sounds/suc.mp3';\r\n\r\nclass check extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.QrReader_Ref = React.createRef();\r\n        this.state = {\r\n            isOpenFormCheck: false,\r\n            isOpenCreateStudent: false,\r\n            delay: 500,\r\n            resultQR: false,\r\n            statusCheck: 0,\r\n            dataTicket: {},\r\n            dataStudent: {},\r\n            isOpenCamera: false,\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n    }\r\n    setupCamera = async () => {\r\n        try {\r\n            const constraints = { video: { facingMode: 'environment' } };\r\n            const mediaStream = await navigator.mediaDevices.getUserMedia(constraints);\r\n            this.mediaStream = mediaStream;\r\n            const videoTrack = this.mediaStream.getVideoTracks()[0];\r\n            const capabilities = videoTrack.getCapabilities();\r\n            console.log(\"media\", mediaStream.getVideoTracks()[0]);\r\n            if (this.QrReaderRef.current) {\r\n                this.QrReaderRef.current.srcObject = mediaStream;\r\n                this.QrReaderRef.current.play();\r\n            }\r\n            if ('zoom' in capabilities) {\r\n                const currentZoom = videoTrack.getCapabilities().zoom ?? 1;\r\n                console.log('currentZoom', currentZoom)\r\n                videoTrack.applyConstraints({ advanced: [{ zoom: 2.5 }] })\r\n            }\r\n\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n    openForm = (name, value) => {\r\n        if (name == 'check') {\r\n            this.setupCamera();\r\n            this.setState({ isOpenFormCheck: value })\r\n        }\r\n        if (name == 'edit') { this.setState({ isOpenCreateStudent: value }) }\r\n    }\r\n    getTicket = async (id) => {\r\n        try {\r\n            let data = await getTicket(id);\r\n            if (data && data.data && data.data.success == 1) {\r\n                let dataStudent = data.data.data.student;\r\n                if (dataStudent !== null) {\r\n                    let dataST = {};\r\n                    dataST.full_name = dataStudent.full_name;\r\n                    dataST.student_id = dataStudent.student_id;\r\n                    dataST.cccd = dataStudent.cccd;\r\n                    this.setState({ dataStudent: dataST })\r\n                }\r\n                return data.data.data\r\n            } else {\r\n                return null\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    handleQRcheck = async (result, error) => {\r\n        if (!!result) {\r\n            this.setState({ resultQR: result.text })\r\n            let dataTicket = await this.getTicket(result.text);\r\n            if (dataTicket == null) {\r\n                let err = new Audio(errSound);\r\n                err.play();\r\n                this.setState({ statusCheck: 1 })\r\n            } else {\r\n                let suc = new Audio(sucSound);\r\n                suc.play();\r\n                this.setState({\r\n                    statusCheck: 2,\r\n                    dataTicket: dataTicket,\r\n                    editTicket: { id: dataTicket.id }\r\n                })\r\n            }\r\n        }\r\n        if (!!error) {\r\n            this.setState({ resultQR: false })\r\n        }\r\n    }\r\n    stopCamera = (name, value) => {\r\n        if (name == 'check') {\r\n            this.setState({ isOpenFormCheck: value })\r\n            window.location.reload();\r\n        }\r\n        if (name == 'edit') { this.setState({ isOpenCreateStudent: value }) }\r\n    }\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state.dataStudent };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            dataStudent: {\r\n                ...copyState\r\n            }\r\n        });\r\n    }\r\n    isCheckEmpty = (value) => {\r\n        return value.trim().length\r\n    }\r\n    isCheckSpace = (value) => {\r\n        return (/\\s/).test(value);\r\n    }\r\n    validatephone_numberNumber = (phone_number) => {\r\n        const re = /^(?:\\+84|0)(?:3[2-9]|5[2689]|7[06-9]|8[1-9]|9[0-46-9])(?:\\d{7}|\\d{7})$/;\r\n        return re.test(phone_number);\r\n    }\r\n    Validation = () => {\r\n        let dataStudent = this.state.dataStudent;\r\n        if (!dataStudent.full_name) {\r\n            return { mess: \"Thiếu tên\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(dataStudent.full_name) <= 3) {\r\n            return { mess: \"Tên phải lớn hơn 3 kí tự\", code: 1 };\r\n        }\r\n        return { code: 0 };\r\n    }\r\n    createStudent = async (input) => {\r\n        let result = this.Validation();\r\n        if (result.code == 0) {\r\n            try {\r\n                let data = await createStudent(input);\r\n                if (data && data.data && data.data.success == 1) {\r\n                    return data.data.data\r\n                } else {\r\n                    return { mess: \"Tạo thất bại\", code: 1 };\r\n                }\r\n            } catch (e) {\r\n                console.log('Lỗi', e);\r\n            }\r\n        } else {\r\n            return result\r\n        }\r\n    }\r\n    editTicket = async () => {\r\n        let dataStudent = await this.createStudent(this.state.dataStudent);\r\n        if (dataStudent && dataStudent.code) {\r\n            toast.error(dataStudent.mess)\r\n        } else {\r\n            try {\r\n                let data = await editTicket({ student: dataStudent.id }, this.state.dataTicket.ticket_code);\r\n                if (data && data.data && data.data.success == 1) {\r\n                    this.setState({\r\n                        dataTicket: data.data.data,\r\n                        isOpenCreateStudent: false,\r\n                    });\r\n                } else {\r\n                    toast.error(\"Cập nhập vé thất bại\")\r\n                }\r\n            } catch (e) {\r\n                console.log('Lỗi', e);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let statusCheck = this.state.statusCheck;\r\n        let resultQR = this.state.resultQR;\r\n        let dataTicket = this.state.dataTicket;\r\n        let dataStudent = this.state.dataStudent;\r\n        return (\r\n            <div className='flex items-center justify-center'>\r\n                <div className='space-y-[10px]'>\r\n                    <div className='border shadow-md p-[10px] bg-white rounded-[5px] space-y-[5px]'>\r\n                        <div className='text-center text-[18px]'><label>Kiểm tra vé</label></div>\r\n                        <Button size='large'\r\n                            onClick={() => this.openForm('check', true)}\r\n                            className='bg-black flex items-center justify-center space-x-[5px] text-white w-[150px]'>\r\n                            <span className=''>Quét mã QR</span>\r\n                            <AiOutlineScan />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Modal title=\"Kiểm tra vé\" open={this.state.isOpenFormCheck}\r\n                    okText={'Dừng quét mã'} okType={'default'} cancelText={'Thoát'}\r\n                    onOk={() => this.stopCamera('check', false)}\r\n                    onCancel={() => this.stopCamera('check', false)}\r\n                    width={400}\r\n                >\r\n                    <div className='flex items-center justify-center'>\r\n                        <div>\r\n                            <QrReader ref={this.QrReader_Ref}\r\n                                constraints={{ facingMode: 'environment' }}\r\n                                cameraOptions={{ zoom: 2.0 }}\r\n                                onResult={(result, error) => this.handleQRcheck(result, error)}\r\n                                className='w-[250px] h-[300px]'\r\n                            />\r\n                            <div>\r\n                                <div className='space-y-[5px] w-full'>\r\n                                    <div className='text-center border p-[5px] rounded-[5px]'>\r\n                                        <label>Kết quả: {resultQR == false ? 'None' : resultQR}</label>\r\n                                    </div>\r\n                                    {statusCheck == 2 &&\r\n                                        <Alert message=\"Xác minh thành công\" type=\"success\" showIcon />\r\n                                    }\r\n                                    {(statusCheck == 1) &&\r\n                                        <Alert message=\"Xác minh thất bại\" type=\"error\" showIcon />\r\n                                    }\r\n                                    {statusCheck == 2 &&\r\n                                        <div className='space-y-[5px]'>\r\n                                            <div className='text-center border shadow-sm rounded-[5px] py-[5px] px-[10px]'>\r\n                                                <div className=' text-[16px]'>\r\n                                                    <label>Mã code : {dataTicket.ticket_code}</label><br />\r\n                                                    {dataTicket.student == null ?\r\n                                                        <>\r\n                                                            <label>Chủ sở hữu : None</label><br />\r\n                                                        </>\r\n                                                        :\r\n                                                        <>\r\n                                                            <label>Họ tên : {dataTicket.student && dataTicket.student.full_name == null ? 'None' : dataTicket.student.full_name}</label><br />\r\n                                                            <label>Mã sinh viên : {dataTicket.student && dataTicket.student.student_id == null ? 'None' : dataTicket.student.student_id}</label><br />\r\n                                                            <label>Căn cước : {dataTicket.student && dataTicket.student.cccd == null ? 'None' : dataTicket.student.cccd}</label><br />\r\n                                                        </>\r\n                                                    }\r\n                                                    <label>Ngày tạo : {dataTicket.created_at}</label><br />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='text-center'>\r\n                                                <Button onClick={() => this.openForm('edit', true)} type='default' className='bg-green-400 text-white'>Xác nhận danh tính</Button>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <Modal title=\"Xác nhận danh tính\" open={this.state.isOpenCreateStudent}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Thoát'}\r\n                    onOk={() => this.editTicket()}\r\n                    onCancel={() => this.openForm('edit', false)}\r\n                    width={300}\r\n                >\r\n                    <div className='space-y-[5px]'>\r\n                        <div>\r\n                            <label>Họ và tên<span className='text-red-600 text-[12px]'> * Bắt buộc</span></label>\r\n                            <Input value={dataStudent.full_name}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'full_name')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Mã sinh viên</label>\r\n                            <Input value={dataStudent.student_id}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'student_id')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Căn cước</label>\r\n                            <Input value={dataStudent.cccd}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'cccd')} />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(check);\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Input } from 'antd';\r\nimport { BsFillTicketFill, BsTicketPerforated, BsTicketPerforatedFill } from \"react-icons/bs\";\r\nimport { toast } from 'react-toastify';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport { getEvent, createBuyer, createOrderStaff, createTicket } from '../../../services/eventService';\r\n\r\nconst recaptchaRef = React.createRef();\r\nconst ButtonGroup = Button.Group;\r\nclass ticket extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            infor: {},\r\n            ticket: 1,\r\n            ReCAPTCHA: null,\r\n            dataEvent: {},\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.getEvent();\r\n    }\r\n    getEvent = async () => {\r\n        try {\r\n            let data = await getEvent();\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataEvent: data.data.data })\r\n            } else {\r\n                this.setState({ dataEvent: {} })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    onClickDecline = () => {\r\n        let ticket = this.state.ticket;\r\n        if (ticket <= 1) {\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                ticket: ticket - 1,\r\n            })\r\n        }\r\n    }\r\n    onClickIncrease = () => {\r\n        let ticket = this.state.ticket;\r\n        if (ticket >= 5) {\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                ticket: ticket + 1,\r\n            })\r\n        }\r\n    }\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state.infor };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            infor: {\r\n                ...copyState\r\n            }\r\n        });\r\n    }\r\n    handleOnchangRC = (values) => {\r\n        this.setState({\r\n            ReCAPTCHA: values,\r\n        })\r\n    }\r\n    onExpired = () => {\r\n        this.setState({ ReCAPTCHA: null })\r\n    }\r\n    isCheckEmpty = (value) => {\r\n        return value.trim().length\r\n    }\r\n    isCheckSpace = (value) => {\r\n        return (/\\s/).test(value);\r\n    }\r\n    validatephone_numberNumber = (phone_number) => {\r\n        const re = /^(?:\\+84|0)(?:3[2-9]|5[2689]|7[06-9]|8[1-9]|9[0-46-9])(?:\\d{7}|\\d{7})$/;\r\n        return re.test(phone_number);\r\n    }\r\n    Validation = () => {\r\n        let infor = this.state.infor;\r\n        if (!infor.student_id) {\r\n            return { mess: \"Thiếu mã sinh viên\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(infor.student_id) !== 10) {\r\n            return { mess: \"Mã sinh viên là 10 kí tự\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(infor.student_id) == true) {\r\n            return { mess: \"Mã sinh viên chứa khoảng trắng\", code: 1 };\r\n        }\r\n        if (!infor.full_name) {\r\n            return { mess: \"Thiếu tên\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(infor.full_name) <= 3) {\r\n            return { mess: \"Tên phải lớn hơn 3 kí tự\", code: 1 };\r\n        }\r\n        if (!infor.phone_number) {\r\n            return { mess: \"Thiếu số điện thoại\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(infor.phone_number) !== 10) {\r\n            return { mess: \"Số điện thoại là 10 số\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(infor.phone_number) == true) {\r\n            return { mess: \"Số điện thoại có khoảng trắng\", code: 1 };\r\n        }\r\n        if (!this.validatephone_numberNumber(infor.phone_number)) {\r\n            return { mess: \"Số điện thoại sai định dạng\", code: 1 };\r\n        }\r\n        if (infor.ticket > this.state.dataEvent.avaliable_ticket) {\r\n            return { mess: \"Số lượng vé không đủ\", code: 1 };\r\n        }\r\n        if (this.state.ReCAPTCHA == null) {\r\n            return { mess: \"Vui lòng xác minh ReCAPTCHA\", code: 1 };\r\n        }\r\n        return { code: 0 };\r\n    }\r\n    createBuyer = async (input) => {\r\n        try {\r\n            let data = await createBuyer(input);\r\n            if (data && data.data && data.data.success == 1) {\r\n                return data.data.data\r\n            } else {\r\n                return null\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    createOrderStaff = async (input) => {\r\n        try {\r\n            let data = await createOrderStaff(input);\r\n            if (data && data.data && data.data.success == 1) {\r\n                return data.data.data\r\n            } else {\r\n                return null\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    createTicket = async (input) => {\r\n        try {\r\n            let data = await createTicket(input);\r\n            if (data && data.data && data.data.success == 1) {\r\n                return data.data.data\r\n            } else {\r\n                return null\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    handleSubmit = async () => {\r\n        let result = this.Validation();\r\n        if (result.code == 0) {\r\n            let dataBuyer = await this.createBuyer(this.state.infor);\r\n            if (dataBuyer == null) {\r\n                toast.error(\"Tạo thông tin thất bại\");\r\n            } else {\r\n                let order = {};\r\n                order.buyer = dataBuyer.id;\r\n                order.ticket_quantity = this.state.ticket;\r\n                order.event = this.state.dataEvent.id;\r\n                order.payment_status = \"success\";\r\n                let dataOrder = await this.createOrderStaff(order);\r\n                if (dataOrder == null) {\r\n                    toast.error(\"Tạo order thất bại\");\r\n                } else {\r\n                    let dataTicket = await this.createTicket({ order: dataOrder.id });\r\n                    if (dataTicket == null) {\r\n                        toast.error(\"Tạo vé thất bại\");\r\n                    } else {\r\n                        toast.success(\"Đăng ký vé thành công\");\r\n                        this.setState({ infor: {} })\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            toast.error(result.mess);\r\n        }\r\n    }\r\n    render() {\r\n        let infor = this.state.infor;\r\n        return (\r\n            <div className=' h-auto w-auto flex items-center justify-center font-semibold'>\r\n                <div className='p-[10px]'>\r\n                    <div className='bg-gradient-to-r from-[#1e9dee] to-[#a951e9]\r\n                    text-center p-[10px] rounded-t-[10px]'>\r\n                        <label className='text-white font-[500] text-[20px]'>BÁN VÉ OFFLINE</label>\r\n                    </div>\r\n                    <div className='border shadow-md rounded-b-[10px]'>\r\n                        <div className=' border-t md:border-none px-[20px] py-[10px] text-[16px] space-y-[16px] bg-white'>\r\n                            <div className='space-y-[3px]'>\r\n                                <div><label className=''>Mã sinh viên<span className='text-red-600 text-[12px]'> * Bắt buộc</span> </label></div>\r\n                                <div className='border-b shadow-sm'>\r\n                                    <Input placeholder='N23DCCN000'\r\n                                        value={infor.student_id}\r\n                                        onChange={(event) => this.handleOnchangeInput(event, 'student_id')}\r\n                                        className='uppercase' bordered={false} />\r\n                                </div>\r\n                            </div>\r\n                            <div className='space-y-[3px]'>\r\n                                <div><label className=''>Họ và tên <span className='text-red-600 text-[12px]'> * Bắt buộc</span> </label></div>\r\n                                <div className='border-b shadow-sm'>\r\n                                    <Input placeholder='Nguyễn Văn A'\r\n                                        value={infor.full_name}\r\n                                        onChange={(event) => this.handleOnchangeInput(event, 'full_name')}\r\n                                        className='' bordered={false} />\r\n                                </div>\r\n                            </div>\r\n                            <div className='space-y-[3px]'>\r\n                                <div><label className=''>Số điện thoại <span className='text-red-600 text-[12px]'> * Bắt buộc</span> </label></div>\r\n                                <div className='border-b shadow-sm'>\r\n                                    <Input placeholder='0885898652'\r\n                                        value={infor.phone_number}\r\n                                        onChange={(event) => this.handleOnchangeInput(event, 'phone_number')}\r\n                                        className='' bordered={false} />\r\n                                </div>\r\n                            </div>\r\n                            <div className='space-y-[3px]'>\r\n                                <div>\r\n                                    <label className='font-[500]'>Số lượng vé <span className='text-red-600 text-[12px]'> * Tối đa 5 vé</span> </label>\r\n                                </div>\r\n                                <ButtonGroup>\r\n                                    <Button onClick={() => this.onClickDecline()} icon={<MinusOutlined />} />\r\n                                    <Button disabled>{this.state.ticket}</Button>\r\n                                    <Button onClick={() => this.onClickIncrease()} icon={<PlusOutlined />} />\r\n                                </ButtonGroup>\r\n                            </div>\r\n                            <div className='space-y-[10px]'>\r\n                                <ReCAPTCHA\r\n                                    ref={recaptchaRef}\r\n                                    sitekey={process.env.REACT_APP_STIE_KEY_RECAPCHA}\r\n                                    onChange={(value) => this.handleOnchangRC(value)}\r\n                                    onExpired={() => this.onExpired()}\r\n                                />,\r\n                                <Button type=\"primary\" danger onClick={() => this.handleSubmit()}>ĐĂNG KÝ</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ticket));","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { DatabaseOutlined, } from '@ant-design/icons';\r\nimport { Layout, Menu, Empty, Button, Modal, Input } from 'antd';\r\nimport {\r\n    AiOutlineAudit, AiOutlineUser, AiFillCalculator, AiFillContainer, AiFillAppstore, AiFillGithub\r\n    , AiFillAlert, AiFillBook, AiFillIdcard\r\n} from \"react-icons/ai\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport HeaderDB from './layouts/header';\r\nimport ManagerUser from './managers/user';\r\nimport ManagerOrder from './managers/order';\r\nimport MangerEvent from './managers/event';\r\nimport ManagerBuyer from './managers/buyer';\r\nimport ManagerTicket from './managers/ticket';\r\nimport CheckTicket from './functions/check';\r\nimport FunctionTicket from './functions/ticket';\r\nimport { toast } from 'react-toastify';\r\nimport { get_local_account } from '../../auths/local_storage';\r\n\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: false,\r\n            url: '/dashboard/',\r\n            isLogin: false,\r\n            isFirewall: false,\r\n            isCheckPassFireWall: false,\r\n            passFireWall: '',\r\n            value: {},\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        let dataLogin = get_local_account(process.env.REACT_APP_LOCALHOST_ACOUNT_DB);\r\n        if (dataLogin && dataLogin.data && dataLogin.data.access) {\r\n            this.setState({ isLogin: true })\r\n        } else { this.setState({ isLogin: false }) }\r\n    }\r\n    getItem = (label, key, icon, children, type) => {\r\n        return { key, icon, children, label, type };\r\n    }\r\n    setCollapsed = () => {\r\n        this.setState({ collapsed: !this.state.collapsed })\r\n    }\r\n    onChangePassFireWall = (event) => {\r\n        this.setState({ passFireWall: event.target.value })\r\n    }\r\n    openDialog = (input) => {\r\n        this.setState({ isFirewall: input })\r\n    }\r\n    handleCheckPassFireWall = () => {\r\n        let passFireWall = this.state.passFireWall;\r\n        if (passFireWall !== process.env.REACT_APP_LOCALHOST_PASS_ADMIN) {\r\n            toast.error('Sai mật khẩu');\r\n        } else {\r\n            this.openDialog(false);\r\n            this.setState({ isCheckPassFireWall: true })\r\n            this.onClickPage(this.state.value);\r\n        }\r\n    }\r\n    onClickPage = (value) => {\r\n        this.setState({ value: value });\r\n        if (value.key == 'ticket' || value.key == 'check') {\r\n            this.props.history.push(`/dashboard/${value.key}`)\r\n        } else {\r\n            if (this.state.isCheckPassFireWall == true) {\r\n                this.props.history.push(`/dashboard/${value.key}`)\r\n            } else {\r\n                this.setState({ isFirewall: true, })\r\n            }\r\n        }\r\n\r\n    }\r\n    goToLogin = () => {\r\n        this.props.history.push(`/login`);\r\n\r\n    }\r\n    render() {\r\n        const items = [\r\n            this.getItem('Quản lý', 'table', <DatabaseOutlined />,\r\n                [\r\n                    this.getItem('Người mua', 'buyer', <AiFillGithub />),\r\n                    this.getItem('Hóa đơn', 'order', <AiFillContainer />),\r\n\r\n                    this.getItem('Tài khoản', 'user', <AiOutlineUser />),\r\n                    this.getItem('Sự kiện', 'event', <AiOutlineAudit />),\r\n                    this.getItem('Bán vé', 'sell', <AiFillGithub />),\r\n                ]\r\n            ),\r\n            this.getItem('Chức năng', 'function', <AiFillCalculator />,\r\n                [\r\n                    this.getItem('Vé', 'ticket', <AiFillIdcard />),\r\n                    this.getItem('Kiểm vé', 'check', <AiFillBook />),\r\n                ]\r\n            ),\r\n        ];\r\n        const items1 = [\r\n            this.getItem('Menu', 'menu', <AiFillAppstore />, [\r\n                this.getItem('Quản lý', 'table', <DatabaseOutlined />,\r\n                    [\r\n                        this.getItem('Người mua', 'buyer', <AiFillGithub />),\r\n                        this.getItem('Hóa đơn', 'order', <AiFillContainer />),\r\n\r\n                        this.getItem('Tài khoản', 'user', <AiOutlineUser />),\r\n                        this.getItem('Sự kiện', 'event', <AiOutlineAudit />),\r\n                        this.getItem('Bán vé', 'sell', <AiFillGithub />),\r\n                    ],\r\n                    'group'\r\n                ),\r\n                this.getItem('Chức năng', 'function', <AiFillCalculator />,\r\n                    [\r\n                        this.getItem('Vé', 'ticket', <AiFillIdcard />),\r\n                        this.getItem('Kiểm vé', 'check', <AiFillBook />),\r\n                    ],\r\n                    'group',\r\n                ),\r\n\r\n            ]),\r\n        ];\r\n        const { Header, Content, Footer, Sider } = Layout;\r\n        let url = this.state.url;\r\n        let isLogin = this.state.isLogin;\r\n        let isFirewall = this.state.isFirewall;\r\n        return (\r\n            <>\r\n                <Modal title=\"Đăng nhập\" open={isFirewall}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.handleCheckPassFireWall()}\r\n                    onCancel={() => this.openDialog(false)}\r\n                    width={300}\r\n                >\r\n                    <div>\r\n                        <Input.Password onChange={(event) => this.onChangePassFireWall(event)} />\r\n                    </div>\r\n                </Modal>\r\n                {isLogin == true ?\r\n                    <Layout style={{ minHeight: '100vh', }} >\r\n                        <Sider className='sm:block hidden'\r\n                            collapsible collapsed={this.state.collapsed} onCollapse={(value) => this.setCollapsed(value)}>\r\n                            <Menu theme=\"dark\" mode=\"inline\" items={items} defaultSelectedKeys={['table']}\r\n                                onClick={(value) => this.onClickPage(value)} />\r\n                        </Sider>\r\n                        <Layout>\r\n                            <Header className='bg-white shadow-md flex items-center justify-between'>\r\n                                <div>\r\n                                    <Menu mode=\"horizontal\" items={items1} defaultSelectedKeys={['menu']}\r\n                                        onClick={(value) => this.onClickPage(value)} />\r\n                                </div>\r\n                                <HeaderDB />\r\n                            </Header>\r\n                            <Content className='py-[10px]'>\r\n                                <Switch>\r\n                                    <Route exact path={`${url}user`}><ManagerUser /></Route>\r\n                                    <Route exact path={`${url}order`}><ManagerOrder /></Route>\r\n                                    <Route exact path={`${url}event`}><MangerEvent /></Route>\r\n                                    <Route exact path={`${url}buyer`}><ManagerBuyer /></Route>\r\n                                    <Route exact path={`${url}ticket`}><ManagerTicket /></Route>\r\n\r\n                                    <Route exact path={`${url}sell`}><FunctionTicket /></Route>\r\n                                    <Route exact path={`${url}check`}><CheckTicket /></Route>\r\n                                </Switch>\r\n                            </Content>\r\n                        </Layout>\r\n                    </Layout>\r\n                    :\r\n                    <div className='flex items-center justify-center h-screen w-screen'>\r\n                        <div className='text-center space-y-[10px]'>\r\n                            <Empty\r\n                                image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n                                imageStyle={{ height: 60, }}\r\n                                description={\r\n                                    <span>\r\n                                        Chưa đăng nhập\r\n                                    </span>\r\n                                }\r\n                            />\r\n                            <Button onClick={() => this.goToLogin()} type=\"default\">Đăng nhập</Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(index);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button, Input, } from 'antd';\r\nimport { login } from '../../../services/userService';\r\nimport { toast } from 'react-toastify';\r\nimport { set_local_account } from '../../../auths/local_storage';\r\nclass loginPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: {\r\n                username: '',\r\n                password: '',\r\n            },\r\n            // data: { refresh: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY5OTM1MjU4MywiaWF0IjoxNjk2NzYwNTgzLCJqdGkiOiI3MjMyM2E1YTQwYTE0MDVmYTQyNTNhOTczNmExZTRiMiIsInVzZXJfaWQiOjJ9.MqdUMe6Zde6Hs4MBLsOsvVQbZ8f_--NkvSAUGXMOEpc\", access: \"ixeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjk2NzgyMTgzLCJpYXQiOjE2OTY3NjA1ODMsImp0aSI6ImZjMTFiMmZhYmYwYjRiMmFhYTc4MTM5YTJlYTkxMWU0IiwidXNlcl9pZCI6Mn0.CsOF3dvtd7v_MSkLu2jx1bYuWu9GI2u0liHqrbDncUI\", user: { id: 2, username: \"admin0\", email: \"\", first_name: \"Trần\", last_name: \"Huy Hoàng00\", is_superuser: false } }\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n    }\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state.login };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            login: {\r\n                ...copyState\r\n            }\r\n        });\r\n    }\r\n    isCheckEmpty = (value) => { return value.trim().length }\r\n    isCheckSpace = (value) => { return (/\\s/).test(value); }\r\n    Validation = () => {\r\n        let login = this.state.login;\r\n        if (this.isCheckEmpty(login.username) == 0) {\r\n            return { mess: \"Thiếu tài khoản\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(login.username) == true) {\r\n            return { mess: \"Tài khoản chứa khoảng trắng\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(login.password) == 0) {\r\n            return { mess: \"Thiếu mật khẩu\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(login.password) == true) {\r\n            return { mess: \"Mật khẩu chứa khoảng trắng\", code: 1 };\r\n        }\r\n        return { code: 0 };\r\n    }\r\n    handleLogin = async () => {\r\n        let result = this.Validation();\r\n        if (result.code == 0) {\r\n            try {\r\n                let data = await login(this.state.login);\r\n                if (data && data.data && data.data.success == 1) {\r\n                    set_local_account(process.env.REACT_APP_LOCALHOST_ACOUNT_DB, data.data.data);\r\n                    this.props.history.push(`/dashboard`);\r\n                } else {\r\n                    toast.error(\"Sai thông tin đăng nhập\")\r\n                }\r\n            } catch (e) {\r\n                toast.error(\"Sai thông tin đăng nhập\")\r\n                console.log('Lỗi', e);\r\n            }\r\n        } else {\r\n            toast.error(result.mess);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='flex items-center justify-center h-screen w-screen p-[20px]'>\r\n                <div className='space-y-[20px] border shadow-md p-[20px] rounded-[5px]'>\r\n                    <div className='text-center font-[700] text-[24px]'>\r\n                        <label>Admin</label>\r\n                    </div>\r\n                    <div>\r\n                        <label>Tài khoản</label>\r\n                        <Input placeholder='admin'\r\n                            onChange={(event) => this.handleOnchangeInput(event, 'username')} />\r\n                    </div>\r\n                    <div>\r\n                        <label>Mật khẩu</label>\r\n                        <Input.Password placeholder='12345'\r\n                            onChange={(event) => this.handleOnchangeInput(event, 'password')} />\r\n                    </div>\r\n                    <div className='text-center '>\r\n                        <Button onClick={() => this.handleLogin()}\r\n                            type='default' className='bg-blue-500 text-white'>Đăng nhập</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(loginPage);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport User from './users/index';\r\nimport DashBoard from './dashboards/index';\r\nimport Page_err_not_found from './pages_Err/page_err_not_found';\r\nimport LoginPage from './dashboards/pages/loginPage';\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route path=\"/home\"><User /></Route>\r\n                    <Redirect from=\"/\" exact to=\"/home\" />\r\n                    <Route path=\"/dashboard\"><DashBoard /></Route>\r\n                    <Route path=\"/login\"><LoginPage /></Route>\r\n                    <Route ><Page_err_not_found /></Route>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(index);\r\n","import './App.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Index from './compoments/index';\nfunction App() {\n\n  return (\n    <div>\n      <Index />\n      <ToastContainer\n        position=\"top-left\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"dark\"\n      />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    data_form_infor: null,\r\n}\r\n\r\nconst dataReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_DATA_FORM_INFOR:\r\n            return {\r\n                ...state,\r\n                data_form_infor: action.data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dataReducers;","import { combineReducers } from 'redux';\r\nimport dataReducers from './dataReducers';\r\nexport default combineReducers({\r\n    data: dataReducers,\r\n})","\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nconst reduxStore = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default reduxStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./styles/index.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport reduxStore from './store/redux';\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={reduxStore}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}