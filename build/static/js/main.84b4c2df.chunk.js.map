{"version":3,"sources":["store/actions/actionTypes.js","auth/localStorage.js","services/eventService.js","compoments/user/form.js","compoments/user/checkout.js","compoments/user/home.js","compoments/dashboard/element/header.js","services/userService.js","compoments/dashboard/manager/user.js","compoments/dashboard/manager/order.js","compoments/dashboard/manager/event.js","compoments/dashboard/manager/buyer.js","compoments/dashboard/function/check.js","compoments/dashboard/function/ticket.js","compoments/dashboard/index.js","compoments/page/errPage.js","compoments/page/loginPage.js","compoments/index.js","App.js","reportWebVitals.js","store/reducers/dataReducers.js","store/reducers/index.js","store/redux.js","index.js"],"names":["actionTypes","Object","freeze","GET_DATA_FORM_INFOR","GetLocal_AcountDB","JSON","parse","window","localStorage","getItem","process","GetLocal_Token","data","access","getEvent","axios","get","getListEvent","token","headers","Authorization","editEvent","id","put","createBuyer","post","getListBuyer","getBuyer","createOrder","createOrderStaff","getOrder","getListOrder","createTransaction","getTicket","createTicket","editTicket","createStudent","recaptchaRef","React","createRef","ButtonGroup","Button","Group","form","props","a","success","setState","dataEvent","console","log","getTime","deadline","state","expiry_date","time","Date","now","setDays","Math","floor","setHours","setMinutes","setSeconds","timeCountDown","interval","setInterval","clearInterval","onClickDecline","ticket","onClickIncrease","handleOnchangeInput","event","copyState","infor","target","value","handleOnchangRC","values","ReCAPTCHA","onExpired","isCheckEmpty","trim","length","isCheckSpace","test","validatephone_numberNumber","phone_number","Validation","student_id","mess","code","full_name","avaliable_ticket","input","handleSubmit","result","dataBuyer","toast","error","order","buyer","ticket_quantity","dataOrder","setItem","stringify","history","push","this","TSV_Order","days","hours","minutes","seconds","className","event_name","total_ticket","placeholder","onChange","bordered","onClick","icon","MinusOutlined","disabled","PlusOutlined","ref","sitekey","type","danger","Component","connect","dispatch","withRouter","checkout","checkStatusOrder","intervalStatusOrder","payment_status","removeItem","intervalCountDownt","setTimeout","dataTransaction","TimeCountDown","countDowm","src","qrcode","width","message","showIcon","total_amount","replace","data_form_infor","home","checkEvent","is_activate","DateNow","alert","statusEvent","openDialog","isOpenDialog","goToForm","size","title","open","okText","okType","cancelText","onOk","onCancel","header","LogOut","dataAcount","dataLogin","user","items","key","label","last_name","menu","style","backgroundColor","UserOutlined","CaretDownOutlined","login","getListUser","createUser","getUser","deleteUser","delete","editUser","dataUsers","dataUser","openForm","name","isOpenFormCreate","isOpenFormDetail","isOpenFormEdit","idUser","username","password","password2","first_name","ValidationEdit","handleCreate","handleEdit","handleDelete","columns","dataIndex","responsive","sorter","b","localeCompare","render","_","record","onConfirm","dataSource","pagination","pageSize","scroll","y","x","Password","onChange_payment_status","Statistic","dataOrders","amount","i","dataStatistic","idOrder","isOpenFormStatistic","payment_method","created_at","updated_at","defaultValue","options","dataEvents","event_code","ticket_price","dataBuyers","idBuyer","email","check","dataStudent","student","dataST","cccd","startCamera","isOpenFormCheck","isOpenCreateStudent","handleQRcheck","resultQR","text","dataTicket","statusCheck","stopCamera","location","reload","ticket_code","delay","onResult","index","children","setCollapsed","collapsed","onChangePassFireWall","passFireWall","isFirewall","handleCheckPassFireWall","isCheckPassFireWall","onClickPage","goToLogin","url","isLogin","DatabaseOutlined","items1","Header","Layout","Content","Sider","Footer","minHeight","collapsible","onCollapse","theme","mode","defaultSelectedKeys","exact","path","image","imageStyle","height","description","errPage","goBack","loginPage","handleLogin","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","dataReducers","action","combineReducers","reduxStore","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.84b4c2df.chunk.js","sourcesContent":["const actionTypes = Object.freeze({\r\n\r\n    GET_DATA_FORM_INFOR: 'GET_DATA_FORM_INFOR',\r\n})\r\n\r\nexport default actionTypes;","\r\nconst GetLocalStorage = (value) => {\r\n    let data = JSON.parse(window.localStorage.getItem(`${value}`));\r\n    return data\r\n}\r\nconst RemoveLocal_AcountDB = () => {\r\n    localStorage.removeItem(`${process.env.REACT_APP_LOCALHOST_ACOUNT_DB}`);\r\n    return true\r\n}\r\nconst GetLocal_AcountDB = () => {\r\n    let data = JSON.parse(window.localStorage.getItem(`${process.env.REACT_APP_LOCALHOST_ACOUNT_DB}`));\r\n    return data\r\n}\r\nconst GetLocal_Token = () => {\r\n    let data = JSON.parse(window.localStorage.getItem(`${process.env.REACT_APP_LOCALHOST_ACOUNT_DB}`));\r\n    if (data && data.data && data.data.access) {\r\n        return data.data.access\r\n    } else {\r\n        return null\r\n    }\r\n}\r\nexport {\r\n    GetLocalStorage, RemoveLocal_AcountDB, GetLocal_AcountDB, GetLocal_Token\r\n}","import axios from \"axios\";\r\nimport { GetLocal_Token } from '../auth/localStorage';\r\n\r\n// Event\r\nconst getEvent = () => {\r\n    return axios.get(`${process.env.REACT_APP_HOST}ticketify/api/v1/get-event/${process.env.REACT_APP_EVENT_CODE}`);\r\n}\r\nconst getListEvent = () => {\r\n    let token = GetLocal_Token()\r\n    return axios.get(`${process.env.REACT_APP_HOST}ticketify/api/v1/list-event`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n}\r\nconst editEvent = (id, data) => {\r\n    let token = GetLocal_Token()\r\n    return axios.put(`${process.env.REACT_APP_HOST}ticketify/api/v1/update-event/${id}`, data,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n}\r\n// Buyer\r\nconst createBuyer = (data) => {\r\n    return axios.post(`${process.env.REACT_APP_HOST}ticketify/api/v1/create-buyer`, data);\r\n}\r\nconst getListBuyer = () => {\r\n    let token = GetLocal_Token()\r\n    return axios.get(`${process.env.REACT_APP_HOST}ticketify/api/v1/list-buyer`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n}\r\nconst getBuyer = (id) => {\r\n    return axios.get(`${process.env.REACT_APP_HOST}ticketify/api/v1/get-buyer/${id}`);\r\n}\r\n// Order\r\nconst createOrder = (data) => {\r\n    return axios.post(`${process.env.REACT_APP_HOST}ticketify/api/v1/create-order`, data);\r\n}\r\nconst createOrderStaff = (data) => {\r\n    let token = GetLocal_Token()\r\n    return axios.post(`${process.env.REACT_APP_HOST}ticketify/api/v1/create-order`, data,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n}\r\nconst getOrder = (id) => {\r\n    return axios.get(`${process.env.REACT_APP_HOST}ticketify/api/v1/get-order/${id}`);\r\n}\r\nconst getListOrder = () => {\r\n    let token = GetLocal_Token()\r\n    return axios.post(`${process.env.REACT_APP_HOST}ticketify/api/v1/list-order`, {},\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n}\r\n// Tran\r\nconst createTransaction = (data) => {\r\n    return axios.post(`${process.env.REACT_APP_HOST}ticketify/api/v1/create-transaction`, data);\r\n}\r\n// Ticket\r\nconst getTicket = (id) => {\r\n    let token = GetLocal_Token()\r\n    return axios.get(`${process.env.REACT_APP_HOST}ticketify/api/v1/get-ticket/${id}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n}\r\nconst createTicket = (data) => {\r\n    let token = GetLocal_Token()\r\n    return axios.post(`${process.env.REACT_APP_HOST}ticketify/api/v1/create-ticket`, data,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n}\r\nconst editTicket = (data, id) => {\r\n    let token = GetLocal_Token();\r\n    return axios.put(`${process.env.REACT_APP_HOST}ticketify/api/v1/update-ticket/${id}`, data,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n}\r\n// \r\nconst createStudent = (data) => {\r\n    let token = GetLocal_Token()\r\n    return axios.post(`${process.env.REACT_APP_HOST}ticketify/api/v1/create-student`, data,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n}\r\nexport {\r\n    getListBuyer, createBuyer, getBuyer,\r\n    getListOrder, createOrder, getOrder, createOrderStaff,\r\n    getEvent, createTransaction, getListEvent, editEvent,\r\n    createTicket, getTicket, editTicket,\r\n    createStudent,\r\n}","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Input } from 'antd';\r\nimport { BsFillTicketFill, BsTicketPerforated, BsTicketPerforatedFill } from \"react-icons/bs\";\r\nimport { toast } from 'react-toastify';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions';\r\nimport { getEvent, createBuyer, createOrder } from '../../services/eventService';\r\nconst recaptchaRef = React.createRef();\r\nconst ButtonGroup = Button.Group;\r\nclass form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            infor: {},\r\n            ticket: 1,\r\n            ReCAPTCHA: null,\r\n            setDays: '',\r\n            setHours: '',\r\n            setMinutes: '',\r\n            setSeconds: '',\r\n            dataEvent: {},\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        this.timeCountDown()\r\n        await this.getEvent();\r\n        let TSV_Order = JSON.parse(window.localStorage.getItem(`${process.env.REACT_APP_LOCALHOST_NAME}`));\r\n        if (TSV_Order && TSV_Order.data) {\r\n            let dataBuyer = TSV_Order.data.buyer;\r\n            let infor = this.state.infor;\r\n            infor.full_name = dataBuyer.full_name;\r\n            infor.phone_number = dataBuyer.phone_number;\r\n            infor.student_id = dataBuyer.student_id;\r\n            this.setState({\r\n                ...this.state.infor,\r\n                infor: infor,\r\n                ticket: TSV_Order.data.ticket_quantity\r\n            })\r\n        }\r\n\r\n    }\r\n    getEvent = async () => {\r\n        try {\r\n            let data = await getEvent();\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataEvent: data.data.data })\r\n            } else {\r\n                return this.setState({ dataEvent: {} })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    getTime = () => {\r\n        let deadline = this.state.dataEvent.expiry_date;\r\n        let time = Date.parse(deadline) - Date.now();\r\n        this.setState({\r\n            setDays: (Math.floor(time / (1000 * 60 * 60 * 24))),\r\n            setHours: (Math.floor((time / (1000 * 60 * 60)) % 24)),\r\n            setMinutes: (Math.floor((time / 1000 / 60) % 60)),\r\n            setSeconds: (Math.floor((time / 1000) % 60)),\r\n        })\r\n    }\r\n    timeCountDown = () => {\r\n        const interval = setInterval(() => this.getTime(), 1000);\r\n        return () => clearInterval(interval);\r\n    }\r\n    onClickDecline = () => {\r\n        let ticket = this.state.ticket;\r\n        if (ticket <= 1) {\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                ticket: ticket - 1,\r\n            })\r\n        }\r\n    }\r\n    onClickIncrease = () => {\r\n        let ticket = this.state.ticket;\r\n        if (ticket >= 5) {\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                ticket: ticket + 1,\r\n            })\r\n        }\r\n    }\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state.infor };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            infor: {\r\n                ...copyState\r\n            }\r\n        });\r\n    }\r\n    handleOnchangRC = (values) => {\r\n        this.setState({\r\n            ReCAPTCHA: values,\r\n        })\r\n    }\r\n    onExpired = () => {\r\n        this.setState({ ReCAPTCHA: null })\r\n    }\r\n    isCheckEmpty = (value) => {\r\n        return value.trim().length\r\n    }\r\n    isCheckSpace = (value) => {\r\n        return (/\\s/).test(value);\r\n    }\r\n    validatephone_numberNumber = (phone_number) => {\r\n        const re = /^(?:\\+84|0)(?:3[2-9]|5[2689]|7[06-9]|8[1-9]|9[0-46-9])(?:\\d{7}|\\d{7})$/;\r\n        return re.test(phone_number);\r\n    }\r\n    Validation = () => {\r\n        let infor = this.state.infor;\r\n        if (!infor.student_id) {\r\n            return { mess: \"Thiếu mã sinh viên\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(infor.student_id) !== 10) {\r\n            return { mess: \"Mã sinh viên là 10 kí tự\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(infor.student_id) == true) {\r\n            return { mess: \"Mã sinh viên chứa khoảng trắng\", code: 1 };\r\n        }\r\n        if (!infor.full_name) {\r\n            return { mess: \"Thiếu tên\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(infor.full_name) <= 3) {\r\n            return { mess: \"Tên phải lớn hơn 3 kí tự\", code: 1 };\r\n        }\r\n        if (!infor.phone_number) {\r\n            return { mess: \"Thiếu số điện thoại\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(infor.phone_number) !== 10) {\r\n            return { mess: \"Số điện thoại là 10 số\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(infor.phone_number) == true) {\r\n            return { mess: \"Số điện thoại có khoảng trắng\", code: 1 };\r\n        }\r\n        if (!this.validatephone_numberNumber(infor.phone_number)) {\r\n            return { mess: \"Số điện thoại sai định dạng\", code: 1 };\r\n        }\r\n        if (infor.ticket > this.state.dataEvent.avaliable_ticket) {\r\n            return { mess: \"Số lượng vé không đủ\", code: 1 };\r\n        }\r\n        if (this.state.ReCAPTCHA == null) {\r\n            return { mess: \"Vui lòng xác minh ReCAPTCHA\", code: 1 };\r\n        }\r\n        return { code: 0 };\r\n    }\r\n    createBuyer = async (input) => {\r\n        try {\r\n            let data = await createBuyer(input);\r\n            if (data && data.data && data.data.success == 1) {\r\n                return data.data.data\r\n            } else {\r\n                return null\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    createOrder = async (input) => {\r\n        try {\r\n            let data = await createOrder(input);\r\n            if (data && data.data && data.data.success == 1) {\r\n                return data.data.data\r\n            } else {\r\n                return null\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    handleSubmit = async () => {\r\n        let result = this.Validation();\r\n        if (result.code == 0) {\r\n            let dataBuyer = await this.createBuyer(this.state.infor);\r\n            if (dataBuyer == null) {\r\n                toast.error(\"Tạo thông tin thất bại\");\r\n            } else {\r\n                let order = {};\r\n                order.buyer = dataBuyer.id;\r\n                order.ticket_quantity = this.state.ticket;\r\n                order.event = this.state.dataEvent.id;\r\n                let dataOrder = await this.createOrder(order);\r\n                if (dataOrder == null) {\r\n                    toast.error(\"Tạo order thất bại\");\r\n                } else {\r\n                    localStorage.setItem(`${process.env.REACT_APP_LOCALHOST_NAME}`, JSON.stringify(\r\n                        { data: dataOrder }\r\n                    ))\r\n                    this.props.history.push(`/checkout`);\r\n                }\r\n            }\r\n        } else {\r\n            toast.error(result.mess);\r\n        }\r\n    }\r\n    render() {\r\n        let days = this.state.setDays;\r\n        let hours = this.state.setHours;\r\n        let minutes = this.state.setMinutes;\r\n        let seconds = this.state.setSeconds;\r\n        let dataEvent = this.state.dataEvent;\r\n        let infor = this.state.infor;\r\n        return (\r\n            <div className=' md:w-screen md:h-screen h-auto w-auto\r\n            flex items-center justify-center font-semibold'>\r\n                <div className='p-[10px]'>\r\n                    <div className='bg-gradient-to-r from-[#1e9dee] to-[#a951e9]\r\n                    text-center p-[10px] rounded-t-[10px]'>\r\n                        <label className='text-white font-[500] text-[20px]'>ĐĂNG KÝ MUA VÉ</label>\r\n                    </div>\r\n                    <div className='md:grid grid-cols-2 \r\n                    border shadow-md rounded-b-[10px]'>\r\n                        <div className=' flex justify-center p-[14px] border-r'>\r\n                            <div className='text-center font-[700] space-y-[10px]'>\r\n                                <label className='text-[24px] font-serif:'>{dataEvent.event_name}</label> <br />\r\n                                <div className='text-[16px] p-[6px] space-x-[6px]\r\n                                flex items-center justify-center  text-white border rounded-[10px] shadow-md'>\r\n                                    <div className='bg-[#00bf96] p-[10px] rounded-[8px] space-y-[2px]'>\r\n                                        <div className=''>\r\n                                            <span className='bg-[#00816a] p-[5px] rounded-[5px]'>{days < 10 ? \"0\" + days : days} </span>\r\n                                        </div>\r\n                                        <div><span>Ngày</span></div>\r\n                                    </div>\r\n                                    <div className='bg-[#00bf96] p-[10px] rounded-[8px] space-y-[2px]'>\r\n                                        <div className=''>\r\n                                            <span className='bg-[#00816a] p-[5px] rounded-[5px]'>{hours < 10 ? \"0\" + hours : hours} </span>\r\n                                        </div>\r\n                                        <div><span>Giờ</span></div>\r\n                                    </div>\r\n                                    <div className='bg-[#00bf96] p-[10px] rounded-[8px] space-y-[2px]'>\r\n                                        <div className=''>\r\n                                            <span className='bg-[#00816a] p-[5px] rounded-[5px]'>{minutes < 10 ? \"0\" + minutes : minutes} </span>\r\n                                        </div>\r\n                                        <div><span>Phút</span></div>\r\n                                    </div>\r\n                                    <div className='bg-[#00bf96] p-[10px] rounded-[8px] space-y-[2px]'>\r\n                                        <div className=''>\r\n                                            <span className='bg-[#00816a] p-[5px] rounded-[5px]'>{seconds < 10 ? \"0\" + seconds : seconds} </span>\r\n                                        </div>\r\n                                        <div><span>Giây</span></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='space-y-[10px]'>\r\n                                    <div className='flex items-center justify-center bg-gradient-to-r from-[#7ccdff] to-[#7196ff]\r\n                                    border shadow-md rounded-[5px] space-x-[20px] text-white p-[5px]'>\r\n                                        <div className='text-[50px]'><BsFillTicketFill /></div>\r\n                                        <div className='text-[16px]'>\r\n                                            <div className='text-[12px]'><label>Tổng vé</label></div>\r\n                                            <div><label className=''>{dataEvent.total_ticket} vé</label></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='flex items-center justify-center bg-gradient-to-r from-[#fda682] to-[#f7789d]\r\n                                    border shadow-md rounded-[5px] space-x-[20px] text-white p-[5px]'>\r\n                                        <div className='text-[50px]'><BsTicketPerforatedFill /></div>\r\n                                        <div className='text-[16px]'>\r\n                                            <div className='text-[12px]'><label>Đã bán</label></div>\r\n                                            <div><label className=''>{dataEvent.total_ticket - dataEvent.avaliable_ticket} vé</label></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='flex items-center justify-center bg-gradient-to-r from-[#17f0a1] to-[#04ce89]\r\n                                    border shadow-md rounded-[5px] space-x-[20px] text-white p-[5px]'>\r\n                                        <div className='text-[50px]'><BsTicketPerforated /></div>\r\n                                        <div className='text-[16px]'>\r\n                                            <div className='text-[12px]'><label>Còn lại</label></div>\r\n                                            <div><label className=''>{dataEvent.avaliable_ticket} vé</label></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='text-[16px] text-[#414e66]'>\r\n                                    <label>Ngày hết hạn : {dataEvent.expiry_date}</label>\r\n                                </div>\r\n                                <div className='text-[12px] \r\n                                text-red-500 border border-red-500 p-[10px] rounded-[10px] shadow-sm '>\r\n                                    <span>Vui lòng điền đầy đủ </span><br />\r\n                                    <span>và chính xác thông tin đăng ký</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=' border-t md:border-none\r\n                        px-[30px] py-[10px] text-[16px] space-y-[16px]'>\r\n                            <div className='space-y-[3px]'>\r\n                                <div><label className=''>Mã sinh viên<span className='text-red-600 text-[12px]'> * Bắt buộc</span> </label></div>\r\n                                <div className='border-b shadow-sm'>\r\n                                    <Input placeholder='N19DCCN065'\r\n                                        value={infor.student_id}\r\n                                        onChange={(event) => this.handleOnchangeInput(event, 'student_id')}\r\n                                        className='uppercase' bordered={false} />\r\n                                </div>\r\n                            </div>\r\n                            <div className='space-y-[3px]'>\r\n                                <div><label className=''>Họ và tên <span className='text-red-600 text-[12px]'> * Bắt buộc</span> </label></div>\r\n                                <div className='border-b shadow-sm'>\r\n                                    <Input placeholder='Vũ Trung An'\r\n                                        value={infor.full_name}\r\n                                        onChange={(event) => this.handleOnchangeInput(event, 'full_name')}\r\n                                        className='' bordered={false} />\r\n                                </div>\r\n                            </div>\r\n                            <div className='space-y-[3px]'>\r\n                                <div><label className=''>Số điện thoại <span className='text-red-600 text-[12px]'> * Bắt buộc</span> </label></div>\r\n                                <div className='border-b shadow-sm'>\r\n                                    <Input placeholder='0789822001 - (10 SỐ)'\r\n                                        value={infor.phone_number}\r\n                                        onChange={(event) => this.handleOnchangeInput(event, 'phone_number')}\r\n                                        className='' bordered={false} />\r\n                                </div>\r\n                            </div>\r\n                            <div className='space-y-[3px]'>\r\n                                <div>\r\n                                    <label className='font-[500]'>Số lượng vé <span className='text-red-600 text-[12px]'> * Tối đa 5 vé</span> </label>\r\n                                </div>\r\n                                <ButtonGroup>\r\n                                    <Button onClick={() => this.onClickDecline()} icon={<MinusOutlined />} />\r\n                                    <Button disabled>{this.state.ticket}</Button>\r\n                                    <Button onClick={() => this.onClickIncrease()} icon={<PlusOutlined />} />\r\n                                </ButtonGroup>\r\n                            </div>\r\n                            <div className='space-y-[10px]'>\r\n                                <ReCAPTCHA\r\n                                    ref={recaptchaRef}\r\n                                    sitekey={process.env.REACT_APP_STIE_KEY_RECAPCHA}\r\n                                    onChange={(value) => this.handleOnchangRC(value)}\r\n                                    onExpired={() => this.onExpired()}\r\n                                />,\r\n                                <Button type=\"primary\" danger onClick={() => this.handleSubmit()}>ĐĂNG KÝ</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(form));","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Image, Alert } from 'antd';\r\nimport { BsCurrencyExchange, BsTicketPerforatedFill } from \"react-icons/bs\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions';\r\nimport { getOrder, createTransaction } from '../../services/eventService';\r\nclass checkout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataOrder: {},\r\n            dataTransaction: {},\r\n            setMinutes: '',\r\n            setSeconds: '',\r\n            countDowm: true,\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        let TSV_Order = JSON.parse(window.localStorage.getItem(`${process.env.REACT_APP_LOCALHOST_NAME}`));\r\n        if (TSV_Order && TSV_Order.data) {\r\n            await this.createTransaction({ order: TSV_Order.data.id });\r\n            this.checkStatusOrder(TSV_Order.data.id)\r\n            this.TimeCountDown()\r\n        }\r\n    }\r\n    checkStatusOrder = async (id) => {\r\n        const intervalStatusOrder = setInterval(() => { this.getOrder(id) }, 1000);\r\n        this.setState({ intervalStatusOrder });\r\n        return () => clearInterval(intervalStatusOrder);\r\n    }\r\n    getOrder = async (id) => {\r\n        try {\r\n            let data = await getOrder(id);\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataOrder: data.data.data });\r\n                if (data.data.data.payment_status == 'success') {\r\n                    localStorage.removeItem(`${process.env.REACT_APP_LOCALHOST_NAME}`);\r\n                    clearInterval(this.state.intervalStatusOrder);\r\n                    clearInterval(this.state.intervalCountDownt);\r\n                    setTimeout(() => { this.props.history.push(`/`) }, 5000);\r\n                }\r\n            } else {\r\n                this.setState({ dataOrder: {} });\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    createTransaction = async (input) => {\r\n        try {\r\n            let data = await createTransaction(input);\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataTransaction: data.data.data });\r\n            } else {\r\n                this.setState({ dataTransaction: {} });\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    TimeCountDown = () => {\r\n        const intervalCountDownt = setInterval(() => { this.getTime() }, 1000);\r\n        this.setState({ intervalCountDownt });\r\n        return () => clearInterval(intervalCountDownt);\r\n    }\r\n    getTime = () => {\r\n        let time = Date.parse(this.state.dataTransaction.expiry_date) - Date.now();\r\n        if (time <= 0) {\r\n            clearInterval(this.state.intervalCountDownt);\r\n            clearInterval(this.state.intervalStatusOrder);\r\n            this.setState({ countDowm: false });\r\n            localStorage.removeItem(`${process.env.REACT_APP_LOCALHOST_NAME}`);\r\n        } else {\r\n            this.setState({\r\n                setMinutes: (Math.floor((time / 1000 / 60) % 60)),\r\n                setSeconds: (Math.floor((time / 1000) % 60)),\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        let minutes = this.state.setMinutes;\r\n        let seconds = this.state.setSeconds;\r\n        let dataOrder = this.state.dataOrder;\r\n        let dataTransaction = this.state.dataTransaction;\r\n        return (\r\n            <div className='h-screen\r\n            p-[20px]  flex items-center justify-center font-semibold'>\r\n                <div className=' bg-white rounded-[8px] border shadow-md'>\r\n                    <div className='text-center bg-[#1a1a1a] bg-gradient-to-r from-[#1e9dee] to-[#a951e9]\r\n                    text-white font-[500] text-[18px] p-[10px] rounded-t-[8px]'>\r\n                        <h1>THANH TOÁN ONLINE QUA MOMO</h1>\r\n                    </div>\r\n                    <div className='p-[10px] space-y-[10px]'>\r\n                        <div className='flex items-center justify-center '>\r\n                            {this.state.countDowm == true &&\r\n                                <Image src={dataTransaction.qrcode} width={200} />\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            {this.state.countDowm == false &&\r\n                                <Alert message=\"Hết hạn thanh toán\" type=\"warning\" showIcon />\r\n                            }\r\n                            {dataOrder.payment_status == 'pending' && this.state.countDowm == true &&\r\n                                <Alert message=\"Chờ thanh toán\" type=\"warning\" showIcon />\r\n                            }\r\n                            {dataOrder.payment_status == 'success' && this.state.countDowm == true &&\r\n                                <Alert message=\"Thanh toán thành công\" type=\"success\" showIcon />\r\n                            }\r\n                        </div>\r\n                        <div className='text-center text-red-600 border p-[4px] shadow-sm rounded-[3px]'>\r\n                            <span className='bg-white px-[2px] py-[2px] rounded-[2px]'>{minutes < 10 ? \"0\" + minutes : minutes}</span>\r\n                            <span className=''>:</span>\r\n                            <span className='bg-white px-[2px] py-[2px] rounded-[2px]'>{seconds < 10 ? \"0\" + seconds : seconds}</span>\r\n                        </div>\r\n                        <div className='space-y-[10px]'>\r\n                            <div className='flex items-center justify-center  bg-gradient-to-r from-[#17f0a1] to-[#04ce89]\r\n                                    border shadow-md rounded-[5px] space-x-[20px] text-white p-[5px]'>\r\n                                <div className='text-[50px]'><BsTicketPerforatedFill /></div>\r\n                                <div className='text-[16px] text-center'>\r\n                                    <div className='text-[14px]'><label>Tổng vé</label></div>\r\n\r\n                                    <div><label className=''>{dataOrder.ticket_quantity} cái</label></div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='flex items-center justify-center bg-gradient-to-r from-[#fda682] to-[#f7789d]\r\n                                    border shadow-md rounded-[5px] space-x-[20px] text-white p-[5px]'>\r\n                                <div className='text-[50px]'><BsCurrencyExchange /></div>\r\n                                <div className='text-[16px] text-center'>\r\n                                    <div className='text-[14px]'><label>Tổng tiền</label></div>\r\n                                    <div><label className=''>{`${dataOrder.total_amount}`.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')} vnđ</label></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data_form_infor: state.data.data_form_infor,\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(checkout));","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button, Modal, Alert } from 'antd';\r\nimport { getEvent } from '../../services/eventService';\r\nclass home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpenDialog: false,\r\n            alert: 'Lỗi',\r\n            statusEvent: 1,\r\n            dataEvent: {},\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getEvent();\r\n    }\r\n    checkEvent = (dataEvent) => {\r\n        if (dataEvent.is_activate == true) {\r\n            let DateNow = new Date();\r\n            let expiry_date = new Date(dataEvent.expiry_date);\r\n            if (DateNow > expiry_date) {\r\n                this.setState({\r\n                    alert: 'Đã hết hạn đăng ký',\r\n                    statusEvent: 2,\r\n                })\r\n            }\r\n            if (DateNow < expiry_date) {\r\n                this.setState({\r\n                    alert: 'Sự kiện đang mở',\r\n                    statusEvent: 0,\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                alert: 'Sự kiện đang đóng',\r\n                statusEvent: 1,\r\n            })\r\n        }\r\n    }\r\n    getEvent = async () => {\r\n        try {\r\n            let data = await getEvent();\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.checkEvent(data.data.data);\r\n                this.setState({ dataEvent: data.data.data })\r\n            } else {\r\n                return this.setState({ dataEvent: {} })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    openDialog = (input) => {\r\n        this.setState({ isOpenDialog: input })\r\n    }\r\n    goToForm = () => {\r\n        if (this.state.statusEvent == 0) {\r\n            this.props.history.push(`/form`);\r\n        }\r\n    }\r\n    render() {\r\n        let statusEvent = this.state.statusEvent;\r\n        return (\r\n            //style={{ backgroundImage: `url(${bg})` }}\r\n            <div className='h-screen w-screen bg-cover bg-no-repeat\r\n            flex items-center justify-center' >\r\n                <div className='space-y-[5px] border p-[10px] shadow-md rounded-[5px]'>\r\n                    {statusEvent == 0 ?\r\n                        <Button onClick={() => this.openDialog(true)}\r\n                            className='shadow-md bg-blue-400'\r\n                            size=\"large\" type=\"primary\" >\r\n                            ĐĂNG KÝ MUA VÉ\r\n                        </Button>\r\n                        :\r\n                        <Button\r\n                            className='shadow-md bg-blue-400'\r\n                            size=\"large\" type=\"primary\" disabled >\r\n                            ĐĂNG KÝ MUA VÉ\r\n                        </Button>\r\n                    }\r\n                    {statusEvent == 0 ?\r\n                        <Alert message={this.state.alert} type=\"success\" showIcon />\r\n                        :\r\n                        <Alert message={this.state.alert} type=\"warning\" showIcon />\r\n                    }\r\n                    <Modal title=\"Lưu ý khi mua vé\" open={this.state.isOpenDialog}\r\n                        okText={'Tiếp tục'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                        onOk={() => this.goToForm()}\r\n                        onCancel={() => this.openDialog(false)}\r\n                    >\r\n                        <div className='text-red-600 p-[10px] border-red-400 border rounded-[5px]'>\r\n                            <span>1. Điền đầy đủ và chính xác thông tin cá nhân vào Form đăng ký</span><br />\r\n                            <span>2. Sau khi hoàn tất giao dịch, vé dưới dạng QR Code sẽ được gửi về Email sinh viên</span>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(home);","import React, { Component } from 'react';\r\nimport { UserOutlined, CaretDownOutlined, } from '@ant-design/icons';\r\nimport { Avatar, Dropdown, Space } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { GetLocal_AcountDB, RemoveLocal_AcountDB } from '../../../auth/localStorage';\r\n\r\nclass header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataAcount: {},\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        let dataLogin = GetLocal_AcountDB();\r\n        if (dataLogin && dataLogin.data && dataLogin.data.access) {\r\n            this.setState({ dataAcount: dataLogin.data.user })\r\n        } else { this.setState({ dataAcount: {} }) }\r\n    }\r\n    LogOut = () => {\r\n        RemoveLocal_AcountDB();\r\n        this.props.history.push(`/login`);\r\n    }\r\n    render() {\r\n        let dataAcount = this.state.dataAcount;\r\n        const items = [\r\n            {\r\n                key: '1',\r\n                label: (\r\n                    <a className='disabled'>{dataAcount.last_name}</a>\r\n                ),\r\n                disabled: true,\r\n            },\r\n            {\r\n                key: '1',\r\n                label: (\r\n                    <a onClick={() => this.LogOut()}>Đăng xuất</a>\r\n                ),\r\n            },\r\n        ];\r\n        return (\r\n            <div>\r\n                <Dropdown menu={{ items, }}>\r\n                    <Space>\r\n                        <Avatar style={{ backgroundColor: '#87d068', }} icon={<UserOutlined />} />\r\n                        <CaretDownOutlined />\r\n                    </Space>\r\n                </Dropdown>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(header);\r\n","import axios from \"axios\";\r\nimport { GetLocal_Token } from '../auth/localStorage';\r\nconst login = (data) => {\r\n    return axios.post(`${process.env.REACT_APP_HOST}auth/api/v1/login`, data);\r\n}\r\nconst getListUser = () => {\r\n    let token = GetLocal_Token()\r\n    return axios.get(`${process.env.REACT_APP_HOST}/auth/api/v1/list-user`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n}\r\nconst createUser = (data) => {\r\n    let token = GetLocal_Token()\r\n    return axios.post(`${process.env.REACT_APP_HOST}/auth/api/v1/register`, data,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n}\r\nconst getUser = (id) => {\r\n    let token = GetLocal_Token()\r\n    return axios.get(`${process.env.REACT_APP_HOST}/auth/api/v1/get-user/${id}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n}\r\nconst deleteUser = (id) => {\r\n    let token = GetLocal_Token()\r\n    return axios.delete(`${process.env.REACT_APP_HOST}/auth/api/v1/get-user/${id}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n}\r\nconst editUser = (id, data) => {\r\n    let token = GetLocal_Token()\r\n    return axios.put(`${process.env.REACT_APP_HOST}/auth/api/v1/get-user/${id}`, data,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n}\r\nexport {\r\n    login, getListUser, createUser, getUser, deleteUser, editUser\r\n}","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { DatabaseOutlined, } from '@ant-design/icons';\r\nimport { Table, Space, Modal, Divider, Button, Input, Popconfirm, message } from 'antd';\r\nimport { AiFillEdit, AiFillDelete, AiFillEye } from \"react-icons/ai\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { getListUser, createUser, getUser, deleteUser, editUser } from '../../../services/userService';\r\nimport { async } from 'q';\r\nclass user extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpenFormCreate: false,\r\n            isOpenFormDetail: false,\r\n            isOpenFormEdit: false,\r\n            dataUser: {},\r\n            dataUsers: [],\r\n            idUser: '',\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.getListUser();\r\n    }\r\n    getListUser = async () => {\r\n        try {\r\n            let data = await getListUser();\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataUsers: data.data.data })\r\n            } else {\r\n                this.setState({ dataUsers: {} })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    getUser = async (id) => {\r\n        try {\r\n            let data = await getUser(id);\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataUser: data.data.data })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state.dataUser };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            dataUser: {\r\n                ...copyState\r\n            }\r\n        });\r\n    }\r\n    openForm = async (name, value, id) => {\r\n        if (name == 'create') { this.setState({ isOpenFormCreate: value }) }\r\n        if (name == 'detail') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormDetail: value });\r\n            } else {\r\n                this.setState({ isOpenFormDetail: value });\r\n                await this.getUser(id);\r\n            }\r\n        }\r\n        if (name == 'edit') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormEdit: value });\r\n            } else {\r\n                this.setState({ isOpenFormEdit: value, idUser: id });\r\n                await this.getUser(id);\r\n            }\r\n        }\r\n    }\r\n    isCheckEmpty = (value) => {\r\n        return value.trim().length\r\n    }\r\n    isCheckSpace = (value) => {\r\n        return (/\\s/).test(value);\r\n    }\r\n    Validation = (data) => {\r\n        if (!data.username) {\r\n            return { mess: \"Thiếu tài khoản\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.username) == 0) {\r\n            return { mess: \"Thiếu tài khoản\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.username) < 5) {\r\n            return { mess: \"Tài khoản >4 kí tự\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(data.username) == true) {\r\n            return { mess: \"Tài khoản chứa khoảng trắng\", code: 1 };\r\n        }\r\n        for (const i of this.state.dataUsers) {\r\n            if (i.username == data.username) {\r\n                return { mess: \"Tài khoản đã tồn tại\", code: 1 };\r\n            }\r\n        }\r\n        if (!data.password) {\r\n            return { mess: \"Thiếu mật khẩu\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.password) == 0) {\r\n            return { mess: \"Thiếu mật khẩu\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.password) < 9) {\r\n            return { mess: \"Mật khẩu phải lớn hơn 8 kí tự\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(data.password) == true) {\r\n            return { mess: \"Mật khấu chứa khoảng trắng\", code: 1 };\r\n        }\r\n        if (!data.password2) {\r\n            return { mess: \"Thiếu mật khẩu nhập lại\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.password2) == 0) {\r\n            return { mess: \"Thiếu mật khẩu 2\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.password2) < 9) {\r\n            return { mess: \"Mật khẩu phải lớn hơn 8 kí tự\", code: 1 };\r\n        }\r\n        if (data.password !== data.password2) {\r\n            return { mess: \"Mật khẩu nhập lại sai\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(data.password2) == true) {\r\n            return { mess: \"Mật khấu 2 chứa khoảng trắng\", code: 1 };\r\n        }\r\n        if (!data.first_name) {\r\n            return { mess: \"Thiếu họ\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.first_name) == 0) {\r\n            return { mess: \"Thiếu họ\", code: 1 };\r\n        }\r\n        if (!data.last_name) {\r\n            return { mess: \"Thiếu tên\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.last_name) == 0) {\r\n            return { mess: \"Thiếu tên\", code: 1 };\r\n        }\r\n        return { code: 0 };\r\n    }\r\n    ValidationEdit = (data) => {\r\n        if (this.isCheckEmpty(data.first_name) == 0) {\r\n            return { mess: \"Thiếu họ\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.last_name) == 0) {\r\n            return { mess: \"Thiếu tên\", code: 1 };\r\n        }\r\n        return { code: 0 };\r\n    }\r\n    handleCreate = async () => {\r\n        let result = this.Validation(this.state.dataUser);\r\n        if (result.code == 0) {\r\n            try {\r\n                let data = await createUser(this.state.dataUser);\r\n                if (data && data.data && data.data.success == 1) {\r\n                    toast.success('Thành công')\r\n                    await this.getListUser();\r\n                    this.setState({ isOpenFormCreate: false })\r\n                } else {\r\n                    toast.error('Thông tin điền bị lỗi')\r\n                }\r\n            } catch (e) {\r\n                toast.error('Lỗi hệ thống');\r\n            }\r\n        } else {\r\n            toast.error(result.mess);\r\n        }\r\n    }\r\n    handleEdit = async (id) => {\r\n        let result = this.ValidationEdit(this.state.dataUser);\r\n        if (result.code == 0) {\r\n            try {\r\n                let data = await editUser(id, this.state.dataUser);\r\n                if (data && data.data && data.data.success == 1) {\r\n                    toast.success('Thành công')\r\n                    await this.getListUser();\r\n                    this.setState({ isOpenFormEdit: false, dataUser: {} })\r\n                } else {\r\n                    toast.error('Tài khoản đã tồn tại')\r\n                }\r\n            } catch (e) {\r\n                toast.error('Lỗi hệ thống');\r\n            }\r\n        } else {\r\n            toast.error(result.mess);\r\n        }\r\n    }\r\n    handleDelete = async (id) => {\r\n        try {\r\n            let data = await deleteUser(id);\r\n            if (data && data.data && data.data.success == 1) {\r\n                toast.success('Thành công')\r\n                await this.getListUser();\r\n            } else {\r\n                toast.error('Thất bại')\r\n            }\r\n        } catch (e) {\r\n            toast.error('Lỗi hệ thống');\r\n        }\r\n    }\r\n    render() {\r\n        let dataUser = this.state.dataUser;\r\n        const columns = [\r\n            {\r\n                title: 'Id', dataIndex: 'id', responsive: ['md'], width: 100,\r\n                sorter: (a, b) => a.id - b.id,\r\n            },\r\n            {\r\n                title: 'Họ', dataIndex: 'first_name', responsive: ['md'],\r\n                sorter: (a, b) => a.first_name.localeCompare(b.first_name),\r\n\r\n            },\r\n            {\r\n                title: 'Tên', dataIndex: 'last_name', responsive: ['md'],\r\n                sorter: (a, b) => a.last_name.localeCompare(b.last_name),\r\n            },\r\n            {\r\n                title: 'Tài khoản', dataIndex: 'username',\r\n                sorter: (a, b) => a.username.localeCompare(b.username),\r\n            },\r\n            {\r\n                title: 'Hành động', width: 100,\r\n                render: (_, record) => (\r\n                    <Space size=\"small\">\r\n                        <a onClick={() => this.openForm('detail', true, record.id)}><AiFillEye /></a>\r\n                        <a onClick={() => this.openForm('edit', true, record.id)}><AiFillEdit /></a>\r\n                        <Popconfirm title=\"Xóa ?\" okType='default' onConfirm={() => this.handleDelete(record.id)}>\r\n                            <a><AiFillDelete /></a>\r\n                        </Popconfirm>\r\n                    </Space>\r\n                ),\r\n            },\r\n        ];\r\n        return (\r\n            <div className='m-[10px] p-[10px] border shadow-md bg-white'>\r\n                <Button size='small' onClick={() => this.openForm('create', true)} type='default' className='bg-black text-white'>Tạo mới</Button>\r\n                <Divider>TÀI KHOẢN</Divider>\r\n                <Table columns={columns} dataSource={this.state.dataUsers}\r\n                    size=\"small\" bordered\r\n                    pagination={{ pageSize: 7, }}\r\n                    scroll={{ y: 300, x: 300, }}\r\n                />\r\n                <Modal title=\"Tạo mới\" open={this.state.isOpenFormCreate}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.handleCreate()}\r\n                    onCancel={() => this.openForm('create', false)}\r\n                    width={300} >\r\n                    <div className='space-y-[10px]'>\r\n                        <div>\r\n                            <label>Tài khoản<span className='text-red-500'> *</span></label>\r\n                            <Input placeholder='Lớn hơn 4 kí tự'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'username')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Mật khẩu<span className='text-red-500'> *</span></label>\r\n                            <Input.Password placeholder='Lớn hơn 8 và có kí tự đặc biệt'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'password')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Nhập lại mật khẩu<span className='text-red-500'> *</span></label>\r\n                            <Input.Password placeholder='Lớn hơn 8 và có kí tự đặc biệt'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'password2')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Họ<span className='text-red-500'> *</span></label>\r\n                            <Input placeholder='Huy'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'first_name')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Tên<span className='text-red-500'> *</span></label>\r\n                            <Input placeholder='Hoàng'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'last_name')} />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <Modal title=\"Chi tiết\" open={this.state.isOpenFormDetail}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.openForm('detail', false, null)}\r\n                    onCancel={() => this.openForm('detail', false, null)}\r\n                    width={300}\r\n                >\r\n                    <div className='space-y-[10px]'>\r\n                        <div>\r\n                            <label>Tài khoản<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataUser.username} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Họ<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataUser.first_name} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Tên<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataUser.last_name} />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <Modal title=\"Chỉnh sửa\" open={this.state.isOpenFormEdit}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.handleEdit(this.state.idUser)}\r\n                    onCancel={() => this.openForm('edit', false, null)}\r\n                    width={300}\r\n                >\r\n                    <div className='space-y-[10px]'>\r\n                        <div>\r\n                            <label>Tài khoản<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataUser.username}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'username')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Họ<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataUser.first_name}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'first_name')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Tên<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataUser.last_name}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'last_name')} />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(user);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { DatabaseOutlined, } from '@ant-design/icons';\r\nimport { Table, Space, Modal, Divider, Button, Input, Popconfirm, Select } from 'antd';\r\nimport { AiFillEdit, AiFillDelete, AiFillEye } from \"react-icons/ai\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { getListOrder, getOrder } from '../../../services/eventService';\r\nclass order extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpenFormCreate: false,\r\n            isOpenFormDetail: false,\r\n            isOpenFormEdit: false,\r\n            isOpenFormStatistic: false,\r\n            dataOrder: {},\r\n            dataOrders: [],\r\n            idOrder: '',\r\n            dataStatistic: {\r\n                total_amount: 0,\r\n                total_ticket: 0,\r\n            }\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.getListOrder();\r\n    }\r\n    onChange_payment_status = (value) => {\r\n        this.Statistic(value);\r\n    }\r\n    Statistic = (value) => {\r\n        let dataOrders = this.state.dataOrders;\r\n        let ticket = 0;\r\n        let amount = 0;\r\n        for (const i of dataOrders) {\r\n            if (i.payment_status == value) {\r\n                ticket += i.ticket_quantity;\r\n                amount += i.total_amount;\r\n            }\r\n        }\r\n        let data = {};\r\n        data.total_ticket = ticket;\r\n        data.total_amount = amount;\r\n        this.setState({ dataStatistic: data })\r\n    }\r\n    getListOrder = async () => {\r\n        try {\r\n            let data = await getListOrder();\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataOrders: data.data.data })\r\n            } else {\r\n                this.setState({ dataOrders: {} })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    getOrder = async (id) => {\r\n        try {\r\n            let data = await getOrder(id);\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataOrder: data.data.data })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state.dataOrder };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            dataOrder: {\r\n                ...copyState\r\n            }\r\n        });\r\n    }\r\n    openForm = async (name, value, id) => {\r\n        if (name == 'create') { this.setState({ isOpenFormCreate: value }) }\r\n        if (name == 'statistic') { this.setState({ isOpenFormCreate: value }) }\r\n        if (name == 'detail') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormDetail: value });\r\n            } else {\r\n                this.setState({ isOpenFormDetail: value });\r\n                await this.getOrder(id);\r\n            }\r\n        }\r\n        if (name == 'edit') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormEdit: value });\r\n            } else {\r\n                this.setState({ isOpenFormEdit: value, idOrder: id });\r\n                await this.getOrder(id);\r\n            }\r\n        }\r\n    }\r\n    isCheckEmpty = (value) => {\r\n        return value.trim().length\r\n    }\r\n    isCheckSpace = (value) => {\r\n        return (/\\s/).test(value);\r\n    }\r\n    Validation = (data) => {\r\n        return { code: 0 };\r\n    }\r\n    ValidationEdit = (data) => {\r\n        return { code: 0 };\r\n    }\r\n    handleCreate = async () => {\r\n    }\r\n    handleEdit = async (id) => {\r\n    }\r\n    handleDelete = async (id) => {\r\n    }\r\n    render() {\r\n        let dataOrder = this.state.dataOrder;\r\n        let dataStatistic = this.state.dataStatistic;\r\n        const columns = [\r\n            {\r\n                title: 'Id', dataIndex: 'id', responsive: ['md'], width: 100,\r\n                sorter: (a, b) => a.id - b.id,\r\n            },\r\n            {\r\n                title: 'Tổng tiền', dataIndex: 'total_amount',\r\n                sorter: (a, b) => a.total_amount - b.total_amount,\r\n\r\n            },\r\n            {\r\n                title: 'Tổng vé', dataIndex: 'ticket_quantity',\r\n                sorter: (a, b) => a.ticket_quantity - b.ticket_quantity,\r\n\r\n            },\r\n            {\r\n                title: 'Trạng thái', dataIndex: 'payment_status',\r\n                sorter: (a, b) => a.payment_status.localeCompare(b.payment_status),\r\n            },\r\n            {\r\n                title: 'Hđ', width: 100,\r\n                render: (_, record) => (\r\n                    <Space size=\"small\">\r\n                        <a onClick={() => this.openForm('detail', true, record.id)}><AiFillEye /></a>\r\n                        {/* <a onClick={() => this.openForm('edit', true, record.id)}><AiFillEdit /></a>\r\n                        <Popconfirm title=\"Xóa ?\" okType='default' onConfirm={() => this.handleDelete(record.id)}>\r\n                            <a><AiFillDelete /></a>\r\n                        </Popconfirm> */}\r\n                    </Space>\r\n                ),\r\n            },\r\n        ];\r\n        return (\r\n            <div className='m-[10px] p-[10px] border shadow-md bg-white'>\r\n                <div className='flex items-center justify-between'>\r\n                    <Button disabled size='small' onClick={() => this.openForm('create', true)} type='default' className='bg-black text-white'>Tạo mới</Button>\r\n                    <Button size='small' onClick={() => this.openForm('statistic', true)} type='default' className='bg-black text-white'>Thống kê</Button>\r\n                </div>\r\n                <Divider>HÓA ĐƠN</Divider>\r\n                <Table columns={columns} dataSource={this.state.dataOrders}\r\n                    size=\"small\" bordered\r\n                    pagination={{ pageSize: 7, }}\r\n                    scroll={{ y: 300, x: 300, }}\r\n                />\r\n                <Modal title=\"Tạo mới\" open={this.state.isOpenFormCreate}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.handleCreate()}\r\n                    onCancel={() => this.openForm('create', false)}\r\n                    width={300} >\r\n\r\n                </Modal>\r\n                <Modal title=\"Chi tiết\" open={this.state.isOpenFormDetail}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.openForm('detail', false, null)}\r\n                    onCancel={() => this.openForm('detail', false, null)}\r\n                    width={300}\r\n                >\r\n                    <div className='space-y-[10px]'>\r\n                        <div className='border p-[10px] shadow-md rounded-[5px]'>\r\n                            <div className='text-center font-[700]'><label>Sự kiện</label></div>\r\n                            <div>\r\n                                <label>Tên<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.event && dataOrder.event.event_name} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='border p-[10px] shadow-md rounded-[5px]'>\r\n                            <div className='text-center font-[700]'><label>Người mua</label></div>\r\n                            <div>\r\n                                <label>Họ tên<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.buyer && dataOrder.buyer.full_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Mã sinh viên<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.buyer && dataOrder.buyer.student_id} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Số điện thoại<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.buyer && dataOrder.buyer.phone_number} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='border p-[10px] shadow-md rounded-[5px]'>\r\n                            <div className='text-center font-[700]'><label>Hóa đơn</label></div>\r\n                            <div>\r\n                                <label>Mã hóa đơn<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.id} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Tổng vé<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.ticket_quantity} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Tổng tiền<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.total_amount} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Thanh toán<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.payment_method} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Trạng thái<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.payment_status} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Người bán<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.user && dataOrder.user.last_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Ngày tạo<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.created_at} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Ngày cập nhập<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataOrder.updated_at} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <Modal title=\"Chỉnh sửa\" open={this.state.isOpenFormEdit}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.handleEdit(this.state.idOrder)}\r\n                    onCancel={() => this.openForm('edit', false, null)}\r\n                    width={300}\r\n                >\r\n\r\n                </Modal>\r\n                <Modal title=\"Thống kê\" open={this.state.isOpenFormCreate}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.openForm('statistic', false)}\r\n                    onCancel={() => this.openForm('statistic', false)}\r\n                    width={300} >\r\n                    <div className='space-y-[10px]'>\r\n                        <div className='text-center font-[700]'>\r\n                            <Select defaultValue=\"Trạng thái\"\r\n                                style={{ width: 120, }}\r\n                                onChange={(value) => this.onChange_payment_status(value)}\r\n                                options={[\r\n                                    {\r\n                                        value: 'success',\r\n                                        label: 'Thành công',\r\n                                    },\r\n                                    {\r\n                                        value: 'pending',\r\n                                        label: 'Đang chờ',\r\n                                    },\r\n                                ]}\r\n                            />\r\n                        </div>\r\n                        <div className='border p-[10px] shadow-md rounded-[5px] space-y-[20px]'>\r\n                            <div className='text-center'>\r\n                                <label className='font-[600]'>Tổng hóa đơn</label><br />\r\n                                <label className='text-red-500'>{dataStatistic.total_ticket} cái</label>\r\n                            </div>\r\n                            <div className='text-center'>\r\n                                <label className='font-[600]'>Tổng tiền</label><br />\r\n                                <label className='text-red-500'>{`${dataStatistic.total_amount}`.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')} vnđ</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(order);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { DatabaseOutlined, } from '@ant-design/icons';\r\nimport { DatePicker, Table, Space, Modal, Divider, Button, Input, Select, Form, Popconfirm } from 'antd';\r\nimport { AiFillEdit, AiFillDelete, AiFillEye, AiOutlinePlus } from \"react-icons/ai\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { getListEvent, getEvent, editEvent } from '../../../services/eventService';\r\nclass event extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpenFormCreate: false,\r\n            isOpenFormDetail: false,\r\n            isOpenFormEdit: false,\r\n            dataEvent: {},\r\n            dataEvents: []\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.getListEvent();\r\n    }\r\n    getListEvent = async () => {\r\n        try {\r\n            let data = await getListEvent();\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataEvents: data.data.data })\r\n            } else {\r\n                this.setState({ dataEvents: {} })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    getEvent = async (id) => {\r\n        try {\r\n            let data = await getEvent(id);\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataEvent: data.data.data })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state.dataEvent };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            dataEvent: {\r\n                ...copyState\r\n            }\r\n        });\r\n    }\r\n    openForm = async (name, value, id) => {\r\n        if (name == 'create') { this.setState({ isOpenFormCreate: value }) }\r\n        if (name == 'detail') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormDetail: value });\r\n            } else {\r\n                this.setState({ isOpenFormDetail: value });\r\n                await this.getEvent(id);\r\n            }\r\n        }\r\n        if (name == 'edit') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormEdit: value });\r\n            } else {\r\n                this.setState({ isOpenFormEdit: value, idUser: id });\r\n                await this.getEvent(id);\r\n            }\r\n        }\r\n    }\r\n    isCheckEmpty = (value) => {\r\n        return value.trim().length\r\n    }\r\n    isCheckSpace = (value) => {\r\n        return (/\\s/).test(value);\r\n    }\r\n    Validation = (data) => {\r\n        return { code: 0 };\r\n    }\r\n    ValidationEdit = (data) => {\r\n        if (this.isCheckEmpty(data.event_name) == 0) {\r\n            return { mess: \"Thiếu tên sự kiện\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(data.expiry_date) == 0) {\r\n            return { mess: \"Thiếu ngày kết thúc\", code: 1 };\r\n        }\r\n        return { code: 0 };\r\n    }\r\n    handleCreate = async () => {\r\n    }\r\n    handleEdit = async (id) => {\r\n        let result = this.ValidationEdit(this.state.dataEvent);\r\n        if (result.code == 0) {\r\n            try {\r\n                let data = await editEvent(id, this.state.dataEvent);\r\n                if (data && data.data && data.data.success == 1) {\r\n                    toast.success('Thành công')\r\n                    await this.getListEvent();\r\n                    this.setState({ isOpenFormEdit: false })\r\n                } else {\r\n                    toast.error('Sửa thất bại')\r\n                }\r\n            } catch (e) {\r\n                toast.error('Lỗi hệ thống');\r\n            }\r\n        } else {\r\n            toast.error(result.mess);\r\n        }\r\n    }\r\n    handleDelete = async (id) => {\r\n    }\r\n    render() {\r\n        let dataEvent = this.state.dataEvent;\r\n        const columns = [\r\n            {\r\n                title: 'Stt', dataIndex: 'id', responsive: ['md'], width: 100,\r\n                sorter: (a, b) => a.id - b.id,\r\n            },\r\n            {\r\n                title: 'Mã Code', dataIndex: 'event_code', responsive: ['md'],\r\n            },\r\n            {\r\n                title: 'Tên', dataIndex: 'event_name',\r\n                sorter: (a, b) => a.username.localeCompare(b.username),\r\n            },\r\n            {\r\n                title: 'Ngày kết thúc', dataIndex: 'expiry_date', responsive: ['md'],\r\n            },\r\n            {\r\n                title: 'Hành động', width: 120,\r\n                render: (_, record) => (\r\n                    <Space size=\"small\">\r\n                        <a onClick={() => this.openForm('detail', true, record.event_code)}><AiFillEye /></a>\r\n                        <a onClick={() => this.openForm('edit', true, record.event_code)}><AiFillEdit /></a>\r\n                        {/* <Popconfirm title=\"Xóa ?\" okType='default' onConfirm={() => this.handleDelete(record.event_code)}>\r\n                            <a><AiFillDelete /></a>\r\n                        </Popconfirm> */}\r\n                    </Space>\r\n                ),\r\n            },\r\n        ];\r\n        return (\r\n            <div className='m-[10px] p-[10px] border shadow-md bg-white'>\r\n                <Button disabled size='small' onClick={() => this.openForm('create', true)} type='default' className='bg-black text-white'>Tạo mới</Button>\r\n                <Divider>SỰ KIỆN</Divider>\r\n                <Table columns={columns} dataSource={this.state.dataEvents}\r\n                    size=\"small\" bordered\r\n                    pagination={{ pageSize: 7, }}\r\n                    scroll={{ y: 300, x: 300, }}\r\n                />\r\n                <Modal title=\"Tạo mới\" open={this.state.isOpenFormCreate}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.handleCreate()}\r\n                    onCancel={() => this.openForm('create', false)}\r\n                    width={300} >\r\n                    <div className='space-y-[10px]'>\r\n                        <div>\r\n                            <label>Tài khoản<span className='text-red-500'> *</span></label>\r\n                            <Input placeholder='Lớn hơn 4 kí tự'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'username')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Mật khẩu<span className='text-red-500'> *</span></label>\r\n                            <Input.Password placeholder='Lớn hơn 8 và có kí tự đặc biệt'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'password')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Nhập lại mật khẩu<span className='text-red-500'> *</span></label>\r\n                            <Input.Password placeholder='Lớn hơn 8 và có kí tự đặc biệt'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'password2')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Họ<span className='text-red-500'> *</span></label>\r\n                            <Input placeholder='Huy'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'first_name')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Tên<span className='text-red-500'> *</span></label>\r\n                            <Input placeholder='Hoàng'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'last_name')} />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <Modal title=\"Chi tiết\" open={this.state.isOpenFormDetail}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.openForm('detail', false, null)}\r\n                    onCancel={() => this.openForm('detail', false, null)}\r\n                    width={300}\r\n                >\r\n                    <div className='space-y-[10px]'>\r\n                        <div>\r\n                            <label>Mã Code<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.event_code} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Sự kiện<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.event_name} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Ngày kết thúc<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.expiry_date} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Trạng thái<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.is_activate} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Giá vé<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.ticket_price} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Tổng vé<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.total_ticket} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Vé đã bán<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.total_ticket - dataEvent.avaliable_ticket} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Vé vé còn lại<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.avaliable_ticket} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Ngày tạo<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.created_at} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Ngày cập nhập<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.updated_at} />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <Modal title=\"Chỉnh sửa\" open={this.state.isOpenFormEdit}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.handleEdit(this.state.idUser)}\r\n                    onCancel={() => this.openForm('edit', false, null)}\r\n                    width={300}\r\n                >\r\n                    <div className='space-y-[10px]'>\r\n                        <div>\r\n                            <label>Mã Code<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.event_code} disabled />\r\n                        </div>\r\n                        <div>\r\n                            <label>Sự kiện<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.event_name}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'event_name')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Ngày kết thúc<span className='text-red-500'> *</span></label><br />\r\n                            <input className='border w-full p-[5px] rounded-[5px]'\r\n                                type='date' value={dataEvent.expiry_date}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'expiry_date')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Trạng thái<span className='text-red-500'> *</span></label><br />\r\n                            <select value={dataEvent.is_activate} className='border w-full p-[5px] rounded-[5px]'\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'is_activate')}>\r\n                                <option value={true}>Mở</option>\r\n                                <option value={false}>Đóng</option>\r\n                            </select>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <label>Giá vé<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.ticket_price}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'ticket_price')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Tổng vé<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.total_ticket}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'total_ticket')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Vé đã bán<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.total_ticket - dataEvent.avaliable_ticket} disabled />\r\n                        </div>\r\n                        <div>\r\n                            <label>Vé vé còn lại<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.avaliable_ticket} disabled />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Ngày tạo<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.created_at} disabled />\r\n                        </div>\r\n                        <div>\r\n                            <label>Ngày cập nhập<span className='text-red-500'> *</span></label>\r\n                            <Input value={dataEvent.updated_at} disabled />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(event);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { DatabaseOutlined, } from '@ant-design/icons';\r\nimport { Table, Space, Modal, Divider, Button, Input, Popconfirm } from 'antd';\r\nimport { AiFillEdit, AiFillDelete, AiFillEye } from \"react-icons/ai\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { getListBuyer, getBuyer } from '../../../services/eventService';\r\nclass buyer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpenFormCreate: false,\r\n            isOpenFormDetail: false,\r\n            isOpenFormEdit: false,\r\n            dataBuyer: {},\r\n            dataBuyers: [],\r\n            idBuyer: '',\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.getListBuyer();\r\n    }\r\n    getListBuyer = async () => {\r\n        try {\r\n            let data = await getListBuyer();\r\n            console.log(data.data.data);\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataBuyers: data.data.data })\r\n            } else {\r\n                this.setState({ dataBuyers: {} })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    getBuyer = async (id) => {\r\n        try {\r\n            let data = await getBuyer(id);\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataBuyer: data.data.data })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state.dataBuyer };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            dataBuyer: {\r\n                ...copyState\r\n            }\r\n        });\r\n    }\r\n    openForm = async (name, value, id) => {\r\n        if (name == 'create') { this.setState({ isOpenFormCreate: value }) }\r\n        if (name == 'detail') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormDetail: value });\r\n            } else {\r\n                this.setState({ isOpenFormDetail: value });\r\n                await this.getBuyer(id);\r\n            }\r\n        }\r\n        if (name == 'edit') {\r\n            if (id == null) {\r\n                this.setState({ isOpenFormEdit: value });\r\n            } else {\r\n                this.setState({ isOpenFormEdit: value, idBuyer: id });\r\n                await this.getBuyer(id);\r\n            }\r\n        }\r\n    }\r\n    isCheckEmpty = (value) => { return value.trim().length }\r\n    isCheckSpace = (value) => { return (/\\s/).test(value); }\r\n    Validation = (data) => {\r\n        return { code: 0 };\r\n    }\r\n    ValidationEdit = (data) => {\r\n        return { code: 0 };\r\n    }\r\n    handleCreate = async () => {\r\n    }\r\n    handleEdit = async (id) => {\r\n    }\r\n    handleDelete = async (id) => {\r\n    }\r\n    render() {\r\n        let dataBuyer = this.state.dataBuyer;\r\n        const columns = [\r\n            {\r\n                title: 'Id', dataIndex: 'id', responsive: ['md'], width: 100,\r\n                sorter: (a, b) => a.id - b.id,\r\n            },\r\n            {\r\n                title: 'Tên', dataIndex: 'full_name',\r\n                sorter: (a, b) => a.full_name.localeCompare(b.full_name),\r\n            },\r\n            {\r\n                title: 'Sđt', dataIndex: 'phone_number', responsive: ['md'],\r\n                sorter: (a, b) => a.phone_number.localeCompare(b.phone_number),\r\n\r\n            },\r\n            {\r\n                title: 'Mssv', dataIndex: 'student_id', responsive: ['md'],\r\n                sorter: (a, b) => a.student_id.localeCompare(b.student_id),\r\n            },\r\n            {\r\n                title: 'Hđ', width: 100,\r\n                render: (_, record) => (\r\n                    <Space size=\"small\">\r\n                        <a onClick={() => this.openForm('detail', true, record.id)}><AiFillEye /></a>\r\n                        {/* <a onClick={() => this.openForm('edit', true, record.id)}><AiFillEdit /></a>\r\n                        <Popconfirm title=\"Xóa ?\" okType='default' onConfirm={() => this.handleDelete(record.id)}>\r\n                            <a><AiFillDelete /></a>\r\n                        </Popconfirm> */}\r\n                    </Space>\r\n                ),\r\n            },\r\n        ];\r\n        return (\r\n            <>\r\n                <div className='m-[10px] p-[10px] border shadow-md bg-white'>\r\n                    <Button disabled size='small' onClick={() => this.openForm('create', true)} type='default' className='bg-black text-white'>Tạo mới</Button>\r\n                    <Divider>NGƯỜI MUA</Divider>\r\n                    <Table columns={columns} dataSource={this.state.dataBuyers}\r\n                        size=\"small\" bordered\r\n                        pagination={{ pageSize: 7, }}\r\n                        scroll={{ y: 300, x: 300, }}\r\n                    />\r\n                    <Modal title=\"Tạo mới\" open={this.state.isOpenFormCreate}\r\n                        okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                        onOk={() => this.handleCreate()}\r\n                        onCancel={() => this.openForm('create', false)}\r\n                        width={300} >\r\n                        <div className='space-y-[10px]'>\r\n                            <div>\r\n                                <label>Họ tên<span className='text-red-500'> *</span></label>\r\n                                <Input />\r\n                            </div>\r\n                            <div>\r\n                                <label>Mã sinh viên<span className='text-red-500'> *</span></label>\r\n                                <Input />\r\n                            </div>\r\n                            <div>\r\n                                <label>Số điện thoại<span className='text-red-500'> *</span></label>\r\n                                <Input />\r\n                            </div>\r\n                        </div>\r\n                    </Modal>\r\n                    <Modal title=\"Chi tiết\" open={this.state.isOpenFormDetail}\r\n                        okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                        onOk={() => this.openForm('detail', false, null)}\r\n                        onCancel={() => this.openForm('detail', false, null)}\r\n                        width={300}\r\n                    >\r\n                        <div className='space-y-[10px]'>\r\n                            <div>\r\n                                <label>Id<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataBuyer.id} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Họ tên<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataBuyer.full_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Mã sinh viên<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataBuyer.student_id} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Email<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataBuyer.email} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Số điện thoại<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataBuyer.phone_number} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Ngày tạo<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataBuyer.created_at} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Ngày cập nhập<span className='text-red-500'> *</span></label>\r\n                                <Input value={dataBuyer.updated_at} />\r\n                            </div>\r\n                        </div>\r\n                    </Modal>\r\n                    <Modal title=\"Chỉnh sửa\" open={this.state.isOpenFormEdit}\r\n                        okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                        onOk={() => this.handleEdit(this.state.idBuyer)}\r\n                        onCancel={() => this.openForm('edit', false, null)}\r\n                        width={300}\r\n                    >\r\n                        <div className='space-y-[10px]'>\r\n                            <div className='space-y-[10px]'>\r\n                                <div>\r\n                                    <label>Id<span className='text-red-500'> *</span></label>\r\n                                    <Input value={dataBuyer.id} disabled />\r\n                                </div>\r\n                                <div>\r\n                                    <label>Họ tên<span className='text-red-500'> *</span></label>\r\n                                    <Input value={dataBuyer.full_name} />\r\n                                </div>\r\n                                <div>\r\n                                    <label>Mã sinh viên<span className='text-red-500'> *</span></label>\r\n                                    <Input value={dataBuyer.student_id} />\r\n                                </div>\r\n                                <div>\r\n                                    <label>Email<span className='text-red-500'> *</span></label>\r\n                                    <Input value={dataBuyer.email} disabled />\r\n                                </div>\r\n                                <div>\r\n                                    <label>Số điện thoại<span className='text-red-500'> *</span></label>\r\n                                    <Input value={dataBuyer.phone_number} />\r\n                                </div>\r\n                                <div>\r\n                                    <label>Ngày tạo<span className='text-red-500'> *</span></label>\r\n                                    <Input value={dataBuyer.created_at} disabled />\r\n                                </div>\r\n                                <div>\r\n                                    <label>Ngày cập nhập<span className='text-red-500'> *</span></label>\r\n                                    <Input value={dataBuyer.updated_at} disabled />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(buyer);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { ScanOutlined, UserOutlined, CaretDownOutlined, SmileOutlined } from '@ant-design/icons';\r\nimport { Space, Button, Modal, Alert, Divider, Input } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { AiOutlineScan } from \"react-icons/ai\";\r\nimport { QrReader } from 'react-qr-reader';\r\nimport { getTicket, editTicket, createStudent } from '../../../services/eventService';\r\nimport { toast } from 'react-toastify';\r\nimport jsQR from 'jsqr';\r\n\r\nclass check extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpenFormCheck: false,\r\n            isOpenCreateStudent: false,\r\n            delay: 500,\r\n            resultQR: false,\r\n            statusCheck: 0,\r\n            dataTicket: {},\r\n            dataStudent: {},\r\n        }\r\n    }\r\n    // videoRef = React.createRef();\r\n    // canvasRef = React.createRef();\r\n    // startCamera = async () => {\r\n    //     try {\r\n    //         const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n    //         this.videoRef.current.srcObject = stream;\r\n    //     } catch (error) {\r\n    //         console.error('Không thể truy cập camera:', error);\r\n    //     }\r\n    // };\r\n    async componentDidMount() {\r\n    }\r\n    getTicket = async (id) => {\r\n        try {\r\n            let data = await getTicket(id);\r\n            if (data && data.data && data.data.success == 1) {\r\n                let dataStudent = data.data.data.student;\r\n                if (dataStudent !== null) {\r\n                    let dataST = {};\r\n                    dataST.full_name = dataStudent.full_name;\r\n                    dataST.student_id = dataStudent.student_id;\r\n                    dataST.cccd = dataStudent.cccd;\r\n                    this.setState({ dataStudent: dataST })\r\n                }\r\n                return data.data.data\r\n            } else {\r\n                return null\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n\r\n    openForm = (name, value) => {\r\n        if (name == 'check') {\r\n            this.startCamera();\r\n            this.setState({ isOpenFormCheck: value })\r\n        }\r\n        if (name == 'edit') { this.setState({ isOpenCreateStudent: value }) }\r\n    }\r\n    handleQRcheck = async (result, error) => {\r\n        if (!!result) {\r\n            this.setState({ resultQR: result.text })\r\n            let dataTicket = await this.getTicket(result.text);\r\n            if (dataTicket == null) {\r\n                this.setState({ statusCheck: 1 })\r\n            } else {\r\n                this.setState({\r\n                    statusCheck: 2,\r\n                    dataTicket: dataTicket,\r\n                    editTicket: { id: dataTicket.id }\r\n                })\r\n            }\r\n        }\r\n        if (!!error) {\r\n            this.setState({ resultQR: false })\r\n        }\r\n    }\r\n    stopCamera = (name, value) => {\r\n        if (name == 'check') {\r\n            window.location.reload();\r\n            this.setState({ isOpenFormCheck: value })\r\n        }\r\n        if (name == 'edit') { this.setState({ isOpenCreateStudent: value }) }\r\n    }\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state.dataStudent };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            dataStudent: {\r\n                ...copyState\r\n            }\r\n        });\r\n    }\r\n\r\n    isCheckEmpty = (value) => {\r\n        return value.trim().length\r\n    }\r\n    isCheckSpace = (value) => {\r\n        return (/\\s/).test(value);\r\n    }\r\n    validatephone_numberNumber = (phone_number) => {\r\n        const re = /^(?:\\+84|0)(?:3[2-9]|5[2689]|7[06-9]|8[1-9]|9[0-46-9])(?:\\d{7}|\\d{7})$/;\r\n        return re.test(phone_number);\r\n    }\r\n    Validation = () => {\r\n        let dataStudent = this.state.dataStudent;\r\n        if (!dataStudent.full_name) {\r\n            return { mess: \"Thiếu tên\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(dataStudent.full_name) <= 3) {\r\n            return { mess: \"Tên phải lớn hơn 3 kí tự\", code: 1 };\r\n        }\r\n        return { code: 0 };\r\n    }\r\n    createStudent = async (input) => {\r\n        let result = this.Validation();\r\n        if (result.code == 0) {\r\n            try {\r\n                let data = await createStudent(input);\r\n                if (data && data.data && data.data.success == 1) {\r\n                    return data.data.data\r\n                } else {\r\n                    return { mess: \"Tạo thất bại\", code: 1 };\r\n                }\r\n            } catch (e) {\r\n                console.log('Lỗi', e);\r\n            }\r\n        } else {\r\n            return result\r\n        }\r\n    }\r\n    editTicket = async () => {\r\n        let dataStudent = await this.createStudent(this.state.dataStudent);\r\n        if (dataStudent && dataStudent.code) {\r\n            toast.error(dataStudent.mess)\r\n        } else {\r\n            try {\r\n                let data = await editTicket({ student: dataStudent.id }, this.state.dataTicket.ticket_code);\r\n                if (data && data.data && data.data.success == 1) {\r\n                    this.setState({\r\n                        dataTicket: data.data.data,\r\n                        isOpenCreateStudent: false,\r\n                    });\r\n                } else {\r\n                    toast.error(\"Cập nhập vé thất bại\")\r\n                }\r\n            } catch (e) {\r\n                console.log('Lỗi', e);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let statusCheck = this.state.statusCheck;\r\n        let resultQR = this.state.resultQR;\r\n        let dataTicket = this.state.dataTicket;\r\n        let dataStudent = this.state.dataStudent;\r\n        return (\r\n            <div className='flex items-center justify-center'>\r\n                <div className='space-y-[10px]'>\r\n                    <div className='border shadow-md p-[10px] bg-white rounded-[5px] space-y-[5px]'>\r\n                        <div className='text-center text-[18px]'><label>Kiểm tra vé</label></div>\r\n                        <Button size='large'\r\n                            onClick={() => this.openForm('check', true)}\r\n                            className='bg-black flex items-center justify-center space-x-[5px] text-white w-[150px]'>\r\n                            <span className=''>Quét mã QR</span>\r\n                            <AiOutlineScan />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Modal title=\"Kiểm tra vé\" open={this.state.isOpenFormCheck}\r\n                    okText={'Dừng quét mã'} okType={'default'} cancelText={'Thoát'}\r\n                    onOk={() => this.stopCamera('check', false)}\r\n                    onCancel={() => this.stopCamera('check', false)}\r\n                    width={400}\r\n                >\r\n                    <div className='flex items-center justify-center'>\r\n                        <div>\r\n                            <QrReader\r\n                                onResult={(result, error) => this.handleQRcheck(result, error)}\r\n                                className='w-[250px] h-[300px]' />\r\n                            {/* <div>\r\n                                <video ref={this.videoRef} autoPlay playsInline muted></video>\r\n                                <canvas ref={this.canvasRef} style={{ display: 'none' }}></canvas>\r\n                            </div> */}\r\n                            <div>\r\n                                <div className='space-y-[5px] w-full'>\r\n                                    <div className='text-center border p-[5px] rounded-[5px]'>\r\n                                        <label>Kết quả: {resultQR == false ? 'None' : resultQR}</label>\r\n                                    </div>\r\n                                    {statusCheck == 2 &&\r\n                                        <Alert message=\"Xác minh thành công\" type=\"success\" showIcon />\r\n                                    }\r\n                                    {(statusCheck == 1) &&\r\n                                        <Alert message=\"Xác minh thất bại\" type=\"error\" showIcon />\r\n                                    }\r\n                                    {statusCheck == 2 &&\r\n                                        <div className='space-y-[5px]'>\r\n                                            <div className='text-center border shadow-sm rounded-[5px] py-[5px] px-[10px]'>\r\n                                                <div className=' text-[16px]'>\r\n                                                    <label>Mã code : {dataTicket.ticket_code}</label><br />\r\n                                                    {dataTicket.student == null ?\r\n                                                        <>\r\n                                                            <label>Chủ sở hữu : None</label><br />\r\n                                                        </>\r\n                                                        :\r\n                                                        <>\r\n                                                            <label>Họ tên : {dataTicket.student && dataTicket.student.full_name == null ? 'None' : dataTicket.student.full_name}</label><br />\r\n                                                            <label>Mã sinh viên : {dataTicket.student && dataTicket.student.student_id == null ? 'None' : dataTicket.student.student_id}</label><br />\r\n                                                            <label>Căn cước : {dataTicket.student && dataTicket.student.cccd == null ? 'None' : dataTicket.student.cccd}</label><br />\r\n                                                        </>\r\n                                                    }\r\n                                                    <label>Ngày tạo : {dataTicket.created_at}</label><br />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='text-center'>\r\n                                                <Button onClick={() => this.openForm('edit', true)} type='default' className='bg-green-400 text-white'>Xác nhận danh tính</Button>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <Modal title=\"Xác nhận danh tính\" open={this.state.isOpenCreateStudent}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Thoát'}\r\n                    onOk={() => this.editTicket()}\r\n                    onCancel={() => this.openForm('edit', false)}\r\n                    width={300}\r\n                >\r\n                    <div className='space-y-[5px]'>\r\n                        <div>\r\n                            <label>Họ và tên<span className='text-red-600 text-[12px]'> * Bắt buộc</span></label>\r\n                            <Input value={dataStudent.full_name}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'full_name')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Mã sinh viên</label>\r\n                            <Input value={dataStudent.student_id}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'student_id')} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Căn cước</label>\r\n                            <Input value={dataStudent.cccd}\r\n                                onChange={(event) => this.handleOnchangeInput(event, 'cccd')} />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(check);\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Input } from 'antd';\r\nimport { BsFillTicketFill, BsTicketPerforated, BsTicketPerforatedFill } from \"react-icons/bs\";\r\nimport { toast } from 'react-toastify';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport { getEvent, createBuyer, createOrderStaff, createTicket } from '../../../services/eventService';\r\n\r\nconst recaptchaRef = React.createRef();\r\nconst ButtonGroup = Button.Group;\r\nclass ticket extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            infor: {},\r\n            ticket: 1,\r\n            ReCAPTCHA: null,\r\n            dataEvent: {},\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.getEvent();\r\n    }\r\n    getEvent = async () => {\r\n        try {\r\n            let data = await getEvent();\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.setState({ dataEvent: data.data.data })\r\n            } else {\r\n                this.setState({ dataEvent: {} })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    onClickDecline = () => {\r\n        let ticket = this.state.ticket;\r\n        if (ticket <= 1) {\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                ticket: ticket - 1,\r\n            })\r\n        }\r\n    }\r\n    onClickIncrease = () => {\r\n        let ticket = this.state.ticket;\r\n        if (ticket >= 5) {\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                ticket: ticket + 1,\r\n            })\r\n        }\r\n    }\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state.infor };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            infor: {\r\n                ...copyState\r\n            }\r\n        });\r\n    }\r\n    handleOnchangRC = (values) => {\r\n        this.setState({\r\n            ReCAPTCHA: values,\r\n        })\r\n    }\r\n    onExpired = () => {\r\n        this.setState({ ReCAPTCHA: null })\r\n    }\r\n    isCheckEmpty = (value) => {\r\n        return value.trim().length\r\n    }\r\n    isCheckSpace = (value) => {\r\n        return (/\\s/).test(value);\r\n    }\r\n    validatephone_numberNumber = (phone_number) => {\r\n        const re = /^(?:\\+84|0)(?:3[2-9]|5[2689]|7[06-9]|8[1-9]|9[0-46-9])(?:\\d{7}|\\d{7})$/;\r\n        return re.test(phone_number);\r\n    }\r\n    Validation = () => {\r\n        let infor = this.state.infor;\r\n        if (!infor.student_id) {\r\n            return { mess: \"Thiếu mã sinh viên\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(infor.student_id) !== 10) {\r\n            return { mess: \"Mã sinh viên là 10 kí tự\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(infor.student_id) == true) {\r\n            return { mess: \"Mã sinh viên chứa khoảng trắng\", code: 1 };\r\n        }\r\n        if (!infor.full_name) {\r\n            return { mess: \"Thiếu tên\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(infor.full_name) <= 3) {\r\n            return { mess: \"Tên phải lớn hơn 3 kí tự\", code: 1 };\r\n        }\r\n        if (!infor.phone_number) {\r\n            return { mess: \"Thiếu số điện thoại\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(infor.phone_number) !== 10) {\r\n            return { mess: \"Số điện thoại là 10 số\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(infor.phone_number) == true) {\r\n            return { mess: \"Số điện thoại có khoảng trắng\", code: 1 };\r\n        }\r\n        if (!this.validatephone_numberNumber(infor.phone_number)) {\r\n            return { mess: \"Số điện thoại sai định dạng\", code: 1 };\r\n        }\r\n        if (infor.ticket > this.state.dataEvent.avaliable_ticket) {\r\n            return { mess: \"Số lượng vé không đủ\", code: 1 };\r\n        }\r\n        if (this.state.ReCAPTCHA == null) {\r\n            return { mess: \"Vui lòng xác minh ReCAPTCHA\", code: 1 };\r\n        }\r\n        return { code: 0 };\r\n    }\r\n    createBuyer = async (input) => {\r\n        try {\r\n            let data = await createBuyer(input);\r\n            if (data && data.data && data.data.success == 1) {\r\n                return data.data.data\r\n            } else {\r\n                return null\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    createOrderStaff = async (input) => {\r\n        try {\r\n            let data = await createOrderStaff(input);\r\n            if (data && data.data && data.data.success == 1) {\r\n                return data.data.data\r\n            } else {\r\n                return null\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    createTicket = async (input) => {\r\n        try {\r\n            let data = await createTicket(input);\r\n            if (data && data.data && data.data.success == 1) {\r\n                return data.data.data\r\n            } else {\r\n                return null\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    handleSubmit = async () => {\r\n        let result = this.Validation();\r\n        if (result.code == 0) {\r\n            let dataBuyer = await this.createBuyer(this.state.infor);\r\n            if (dataBuyer == null) {\r\n                toast.error(\"Tạo thông tin thất bại\");\r\n            } else {\r\n                let order = {};\r\n                order.buyer = dataBuyer.id;\r\n                order.ticket_quantity = this.state.ticket;\r\n                order.event = this.state.dataEvent.id;\r\n                order.payment_status = \"success\";\r\n                let dataOrder = await this.createOrderStaff(order);\r\n                if (dataOrder == null) {\r\n                    toast.error(\"Tạo order thất bại\");\r\n                } else {\r\n                    let dataTicket = await this.createTicket({ order: dataOrder.id });\r\n                    if (dataTicket == null) {\r\n                        toast.error(\"Tạo vé thất bại\");\r\n                    } else {\r\n                        toast.success(\"Đăng ký vé thành công\");\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            toast.error(result.mess);\r\n        }\r\n    }\r\n    render() {\r\n        let infor = this.state.infor;\r\n        return (\r\n            <div className=' h-auto w-auto flex items-center justify-center font-semibold'>\r\n                <div className='p-[10px]'>\r\n                    <div className='bg-gradient-to-r from-[#1e9dee] to-[#a951e9]\r\n                    text-center p-[10px] rounded-t-[10px]'>\r\n                        <label className='text-white font-[500] text-[20px]'>BÁN VÉ OFFLINE</label>\r\n                    </div>\r\n                    <div className='border shadow-md rounded-b-[10px]'>\r\n                        <div className=' border-t md:border-none px-[20px] py-[10px] text-[16px] space-y-[16px] bg-white'>\r\n                            <div className='space-y-[3px]'>\r\n                                <div><label className=''>Mã sinh viên<span className='text-red-600 text-[12px]'> * Bắt buộc</span> </label></div>\r\n                                <div className='border-b shadow-sm'>\r\n                                    <Input placeholder='N19DCCN065'\r\n                                        value={infor.student_id}\r\n                                        onChange={(event) => this.handleOnchangeInput(event, 'student_id')}\r\n                                        className='uppercase' bordered={false} />\r\n                                </div>\r\n                            </div>\r\n                            <div className='space-y-[3px]'>\r\n                                <div><label className=''>Họ và tên <span className='text-red-600 text-[12px]'> * Bắt buộc</span> </label></div>\r\n                                <div className='border-b shadow-sm'>\r\n                                    <Input placeholder='Vũ Trung An'\r\n                                        value={infor.full_name}\r\n                                        onChange={(event) => this.handleOnchangeInput(event, 'full_name')}\r\n                                        className='' bordered={false} />\r\n                                </div>\r\n                            </div>\r\n                            <div className='space-y-[3px]'>\r\n                                <div><label className=''>Số điện thoại <span className='text-red-600 text-[12px]'> * Bắt buộc</span> </label></div>\r\n                                <div className='border-b shadow-sm'>\r\n                                    <Input placeholder='0789822001 - (10 SỐ)'\r\n                                        value={infor.phone_number}\r\n                                        onChange={(event) => this.handleOnchangeInput(event, 'phone_number')}\r\n                                        className='' bordered={false} />\r\n                                </div>\r\n                            </div>\r\n                            <div className='space-y-[3px]'>\r\n                                <div>\r\n                                    <label className='font-[500]'>Số lượng vé <span className='text-red-600 text-[12px]'> * Tối đa 5 vé</span> </label>\r\n                                </div>\r\n                                <ButtonGroup>\r\n                                    <Button onClick={() => this.onClickDecline()} icon={<MinusOutlined />} />\r\n                                    <Button disabled>{this.state.ticket}</Button>\r\n                                    <Button onClick={() => this.onClickIncrease()} icon={<PlusOutlined />} />\r\n                                </ButtonGroup>\r\n                            </div>\r\n                            <div className='space-y-[10px]'>\r\n                                <ReCAPTCHA\r\n                                    ref={recaptchaRef}\r\n                                    sitekey={process.env.REACT_APP_STIE_KEY_RECAPCHA}\r\n                                    onChange={(value) => this.handleOnchangRC(value)}\r\n                                    onExpired={() => this.onExpired()}\r\n                                />,\r\n                                <Button type=\"primary\" danger onClick={() => this.handleSubmit()}>ĐĂNG KÝ</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ticket));","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { DatabaseOutlined, } from '@ant-design/icons';\r\nimport { Layout, Menu, Empty, Button, Modal, Input } from 'antd';\r\nimport {\r\n    AiOutlineAudit, AiOutlineUser, AiFillCalculator, AiFillContainer, AiFillAppstore, AiFillGithub\r\n    , AiFillAlert, AiFillBook\r\n} from \"react-icons/ai\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport HeaderDB from './element/header';\r\nimport ManagerUser from './manager/user';\r\nimport ManagerOrder from './manager/order';\r\nimport MangerEvent from './manager/event';\r\nimport ManagerBuyer from './manager/buyer';\r\nimport CheckTicket from './function/check';\r\nimport FunctionTicket from './function/ticket';\r\nimport { toast } from 'react-toastify';\r\nimport { GetLocal_AcountDB, } from '../../auth/localStorage';\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: false,\r\n            url: '/dashboard/',\r\n            isLogin: false,\r\n            isFirewall: false,\r\n            isCheckPassFireWall: false,\r\n            passFireWall: '',\r\n            value: {},\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        let dataLogin = GetLocal_AcountDB();\r\n        if (dataLogin && dataLogin.data && dataLogin.data.access) {\r\n            this.setState({ isLogin: true })\r\n        } else { this.setState({ isLogin: false }) }\r\n    }\r\n    getItem = (label, key, icon, children, type) => {\r\n        return { key, icon, children, label, type };\r\n    }\r\n    setCollapsed = () => {\r\n        this.setState({ collapsed: !this.state.collapsed })\r\n    }\r\n    onChangePassFireWall = (event) => {\r\n        this.setState({ passFireWall: event.target.value })\r\n    }\r\n    openDialog = (input) => {\r\n        this.setState({ isFirewall: input })\r\n    }\r\n    handleCheckPassFireWall = () => {\r\n        let passFireWall = this.state.passFireWall;\r\n        if (passFireWall !== process.env.REACT_APP_LOCALHOST_PASS_ADMIN) {\r\n            toast.error('Sai mật khẩu');\r\n        } else {\r\n            this.openDialog(false);\r\n            this.setState({ isCheckPassFireWall: true })\r\n            this.onClickPage(this.state.value);\r\n        }\r\n    }\r\n    onClickPage = (value) => {\r\n        this.setState({ value: value });\r\n        if (value.key == 'ticket' || value.key == 'check') {\r\n            this.props.history.push(`/dashboard/${value.key}`)\r\n        } else {\r\n            if (this.state.isCheckPassFireWall == true) {\r\n                this.props.history.push(`/dashboard/${value.key}`)\r\n            } else {\r\n                this.setState({ isFirewall: true, })\r\n            }\r\n        }\r\n\r\n    }\r\n    goToLogin = () => {\r\n        this.props.history.push(`/login`);\r\n\r\n    }\r\n    render() {\r\n        const items = [\r\n            this.getItem('Quản lý', 'table', <DatabaseOutlined />,\r\n                [\r\n                    this.getItem('Người mua', 'buyer', <AiFillGithub />),\r\n                    this.getItem('Hóa đơn', 'order', <AiFillContainer />),\r\n                    this.getItem('Tài khoản', 'user', <AiOutlineUser />),\r\n                    this.getItem('Sự kiện', 'event', <AiOutlineAudit />),\r\n                ]\r\n            ),\r\n            this.getItem('Chức năng', 'function', <AiFillCalculator />,\r\n                [\r\n                    this.getItem('Bán vé', 'ticket', <AiFillGithub />),\r\n                    this.getItem('Kiểm vé', 'check', <AiFillBook />),\r\n                ]\r\n            ),\r\n        ];\r\n        const items1 = [\r\n            this.getItem('Menu', 'menu', <AiFillAppstore />, [\r\n                this.getItem('Quản lý', 'table', <DatabaseOutlined />,\r\n                    [\r\n                        this.getItem('Người mua', 'buyer', <AiFillGithub />),\r\n                        this.getItem('Hóa đơn', 'order', <AiFillContainer />),\r\n                        this.getItem('Tài khoản', 'user', <AiOutlineUser />),\r\n                        this.getItem('Sự kiện', 'event', <AiOutlineAudit />),\r\n                    ],\r\n                    'group'\r\n                ),\r\n                this.getItem('Chức năng', 'function', <AiFillCalculator />,\r\n                    [\r\n                        this.getItem('Bán vé', 'ticket', <AiFillGithub />),\r\n                        this.getItem('Kiểm vé', 'check', <AiFillBook />),\r\n                    ],\r\n                    'group',\r\n                ),\r\n\r\n            ]),\r\n        ];\r\n        const { Header, Content, Footer, Sider } = Layout;\r\n        let url = this.state.url;\r\n        let isLogin = this.state.isLogin;\r\n        let isFirewall = this.state.isFirewall;\r\n        return (\r\n            <>\r\n                <Modal title=\"Đăng nhập\" open={isFirewall}\r\n                    okText={'Xác nhận'} okType={'default'} cancelText={'Hủy bỏ'}\r\n                    onOk={() => this.handleCheckPassFireWall()}\r\n                    onCancel={() => this.openDialog(false)}\r\n                    width={300}\r\n                >\r\n                    <div>\r\n                        <Input.Password onChange={(event) => this.onChangePassFireWall(event)} />\r\n                    </div>\r\n                </Modal>\r\n                {isLogin == true ?\r\n                    <Layout style={{ minHeight: '100vh', }} >\r\n                        <Sider className='sm:block hidden'\r\n                            collapsible collapsed={this.state.collapsed} onCollapse={(value) => this.setCollapsed(value)}>\r\n                            <Menu theme=\"dark\" mode=\"inline\" items={items} defaultSelectedKeys={['table']}\r\n                                onClick={(value) => this.onClickPage(value)} />\r\n                        </Sider>\r\n                        <Layout>\r\n                            <Header className='bg-white shadow-md flex items-center justify-between'>\r\n                                <div>\r\n                                    <Menu mode=\"horizontal\" items={items1} defaultSelectedKeys={['menu']}\r\n                                        onClick={(value) => this.onClickPage(value)} />\r\n                                </div>\r\n                                <HeaderDB />\r\n                            </Header>\r\n                            <Content className='py-[10px]'>\r\n                                <Switch>\r\n                                    <Route exact path={`${url}user`}><ManagerUser /></Route>\r\n                                    <Route exact path={`${url}order`}><ManagerOrder /></Route>\r\n                                    <Route exact path={`${url}event`}><MangerEvent /></Route>\r\n                                    <Route exact path={`${url}buyer`}><ManagerBuyer /></Route>\r\n\r\n                                    <Route exact path={`${url}ticket`}><FunctionTicket /></Route>\r\n                                    <Route exact path={`${url}check`}><CheckTicket /></Route>\r\n                                </Switch>\r\n                            </Content>\r\n                        </Layout>\r\n                    </Layout>\r\n                    :\r\n                    <div className='flex items-center justify-center h-screen w-screen'>\r\n                        <div className='text-center space-y-[10px]'>\r\n                            <Empty\r\n                                image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n                                imageStyle={{ height: 60, }}\r\n                                description={\r\n                                    <span>\r\n                                        Chưa đăng nhập\r\n                                    </span>\r\n                                }\r\n                            />\r\n                            <Button onClick={() => this.goToLogin()} type=\"default\">Đăng nhập</Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(index);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Empty, Button } from 'antd';\r\nclass errPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n    }\r\n    goBack = () => {\r\n        this.props.history.push(`/`);\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='flex items-center justify-center h-screen w-screen'>\r\n                <div className='text-center space-y-[10px]'>\r\n                    <Empty\r\n                        image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n                        imageStyle={{\r\n                            height: 60,\r\n                        }}\r\n                        description={\r\n                            <span>\r\n                                Không tìm thấy\r\n                            </span>\r\n                        }\r\n                    />\r\n                    <Button onClick={() => this.goBack()} type=\"default\">Trang chủ</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(errPage);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button, Input, } from 'antd';\r\nimport { login } from '../../services/userService';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass loginPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: {\r\n                username: '',\r\n                password: '',\r\n            },\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n    }\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state.login };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            login: {\r\n                ...copyState\r\n            }\r\n        });\r\n    }\r\n    isCheckEmpty = (value) => { return value.trim().length }\r\n    isCheckSpace = (value) => { return (/\\s/).test(value); }\r\n    Validation = () => {\r\n        let login = this.state.login;\r\n        if (this.isCheckEmpty(login.username) == 0) {\r\n            return { mess: \"Thiếu tài khoản\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(login.username) == true) {\r\n            return { mess: \"Tài khoản chứa khoảng trắng\", code: 1 };\r\n        }\r\n        if (this.isCheckEmpty(login.password) == 0) {\r\n            return { mess: \"Thiếu mật khẩu\", code: 1 };\r\n        }\r\n        if (this.isCheckSpace(login.password) == true) {\r\n            return { mess: \"Mật khẩu chứa khoảng trắng\", code: 1 };\r\n        }\r\n        return { code: 0 };\r\n    }\r\n    handleLogin = async () => {\r\n        let result = this.Validation();\r\n        if (result.code == 0) {\r\n            try {\r\n                let data = await login(this.state.login);\r\n                console.log(data);\r\n                if (data && data.data && data.data.success == 1) {\r\n                    localStorage.setItem(`${process.env.REACT_APP_LOCALHOST_ACOUNT_DB}`, JSON.stringify(\r\n                        { data: data.data.data }\r\n                    ))\r\n                    this.props.history.push(`/dashboard`);\r\n                } else {\r\n                    toast.error(\"Sai thông tin đăng nhập\")\r\n                }\r\n            } catch (e) {\r\n                toast.error(\"Sai thông tin đăng nhập\")\r\n                console.log('Lỗi', e);\r\n            }\r\n        } else {\r\n            toast.error(result.mess);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='flex items-center justify-center h-screen w-screen p-[20px]'>\r\n                <div className='space-y-[20px] border shadow-md p-[20px] rounded-[5px]'>\r\n                    <div className='text-center font-[700] text-[24px]'>\r\n                        <label>Admin</label>\r\n                    </div>\r\n                    <div>\r\n                        <label>Tài khoản</label>\r\n                        <Input placeholder='admin'\r\n                            onChange={(event) => this.handleOnchangeInput(event, 'username')} />\r\n                    </div>\r\n                    <div>\r\n                        <label>Mật khẩu</label>\r\n                        <Input.Password placeholder='12345'\r\n                            onChange={(event) => this.handleOnchangeInput(event, 'password')} />\r\n                    </div>\r\n                    <div className='text-center '>\r\n                        <Button onClick={() => this.handleLogin()}\r\n                            type='default' className='bg-blue-500 text-white'>Đăng nhập</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(loginPage);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport Form from '../compoments/user/form';\r\nimport Checkout from '../compoments/user/checkout';\r\nimport Home from '../compoments/user/home';\r\nimport Dashboard from '../compoments/dashboard/index';\r\nimport ErrPage from './page/errPage';\r\nimport LoginPage from './page/loginPage';\r\nimport { getEvent } from './../services/eventService';\r\n\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            alert: 'Lỗi',\r\n            statusEvent: 1,\r\n            dataEvent: {},\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.getEvent();\r\n    }\r\n    checkEvent = (dataEvent) => {\r\n        if (dataEvent.is_activate == true) {\r\n            let DateNow = new Date();\r\n            let expiry_date = new Date(dataEvent.expiry_date);\r\n            if (DateNow > expiry_date) {\r\n                this.setState({\r\n                    alert: 'Đã hết hạn đăng ký',\r\n                    statusEvent: 2,\r\n                })\r\n            }\r\n            if (DateNow < expiry_date) {\r\n                this.setState({\r\n                    alert: 'Sự kiện đang mở',\r\n                    statusEvent: 0,\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                alert: 'Sự kiện đang đóng',\r\n                statusEvent: 1,\r\n            })\r\n        }\r\n    }\r\n    getEvent = async () => {\r\n        try {\r\n            let data = await getEvent();\r\n            if (data && data.data && data.data.success == 1) {\r\n                this.checkEvent(data.data.data);\r\n                this.setState({ dataEvent: data.data.data })\r\n            } else {\r\n                return this.setState({ dataEvent: {} })\r\n            }\r\n        } catch (e) {\r\n            console.log('Lỗi', e);\r\n        }\r\n    }\r\n    render() {\r\n        let statusEvent = this.state.statusEvent;\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/\"><Home /></Route>\r\n                    <Route path=\"/login\"><LoginPage /></Route>\r\n                    <Route path=\"/dashboard\"><Dashboard /></Route>\r\n                    {statusEvent == 0 ?\r\n                        <>\r\n                            <Route path=\"/form\"><Form /></Route>\r\n                            <Route path=\"/checkout\"><Checkout /></Route>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Route path=\"/form\"><ErrPage /></Route>\r\n                            <Route path=\"/checkout\"><ErrPage /></Route>\r\n                        </>\r\n                    }\r\n\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(index);\r\n","import './App.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Index from './compoments/index';\nfunction App() {\n\n  return (\n    <div>\n      <Index />\n      <ToastContainer\n        position=\"top-left\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"dark\"\n      />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    data_form_infor: null,\r\n}\r\n\r\nconst dataReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_DATA_FORM_INFOR:\r\n            return {\r\n                ...state,\r\n                data_form_infor: action.data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dataReducers;","import { combineReducers } from 'redux';\r\nimport dataReducers from './dataReducers';\r\nexport default combineReducers({\r\n    data: dataReducers,\r\n})","\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nconst reduxStore = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default reduxStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./styles/index.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport reduxStore from './store/redux';\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={reduxStore}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}